{"version":3,"file":"ReservationManagement-CkVlNk6j.js","sources":["../../node_modules/@mui/icons-material/esm/Assessment.js","../../node_modules/@mui/icons-material/esm/Cancel.js","../../node_modules/@mui/icons-material/esm/CheckCircle.js","../../node_modules/@mui/icons-material/esm/Info.js","../../node_modules/@mui/icons-material/esm/Timeline.js","../../src/components/labmanager/ReservationManagement.tsx"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2M9 17H7v-7h2zm4 0h-2V7h2zm4 0h-2v-4h2z\"\n}), 'Assessment');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2m5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12z\"\n}), 'Cancel');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m-2 15-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8z\"\n}), 'CheckCircle');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m1 15h-2v-6h2zm0-8h-2V7h2z\"\n}), 'Info');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M23 8c0 1.1-.9 2-2 2-.18 0-.35-.02-.51-.07l-3.56 3.55c.05.16.07.34.07.52 0 1.1-.9 2-2 2s-2-.9-2-2c0-.18.02-.36.07-.52l-2.55-2.55c-.16.05-.34.07-.52.07s-.36-.02-.52-.07l-4.55 4.56c.05.16.07.33.07.51 0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2c.18 0 .35.02.51.07l4.56-4.55C8.02 9.36 8 9.18 8 9c0-1.1.9-2 2-2s2 .9 2 2c0 .18-.02.36-.07.52l2.55 2.55c.16-.05.34-.07.52-.07s.36.02.52.07l3.55-3.56C19.02 8.35 19 8.18 19 8c0-1.1.9-2 2-2s2 .9 2 2\"\n}), 'Timeline');","import { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Paper,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  CircularProgress,\r\n  Alert,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  MenuItem,\r\n  Tabs,\r\n  Tab,\r\n  Chip,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  InputAdornment,\r\n  LinearProgress,\r\n  useTheme,\r\n  Divider,\r\n} from '@mui/material';\r\nimport {\r\n  Search as SearchIcon,\r\n  FilterList as FilterListIcon,\r\n  Event as EventIcon,\r\n  CheckCircle as CheckCircleIcon,\r\n  Cancel as CancelIcon,\r\n  Info as InfoIcon,\r\n  Assessment as AssessmentIcon,\r\n  Timeline as TimelineIcon,\r\n  Science as ScienceIcon,\r\n\r\n} from '@mui/icons-material';\r\nimport { format, parseISO, isToday, isTomorrow, addDays, isAfter, isBefore } from 'date-fns';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip as RechartsTooltip, ResponsiveContainer } from 'recharts';\r\nimport { supabase } from '@/lib/supabase';\r\nimport { lab_reservations } from '@/types';\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: number;\r\n  value: number;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`reservation-tabpanel-${index}`}\r\n      aria-labelledby={`reservation-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box sx={{ pt: 3 }}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function ReservationManagement() {\r\n  const theme = useTheme();\r\n  const [reservations, setReservations] = useState<any[]>([]);\r\n  const [labreservations, setLabReservations] = useState<lab_reservations[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [statusFilter, setStatusFilter] = useState('');\r\n  const [categoryFilter, setCategoryFilter] = useState('');\r\n  const [dateFilter, setDateFilter] = useState('');\r\n  const [labsearchQuery, setLabSearchQuery] = useState('');\r\n  const [labstatusFilter, setLabStatusFilter] = useState('');\r\n  const [LabdateFilter, setLabDateFilter] = useState('');\r\n  const [showFilters, setShowFilters] = useState(false);\r\n  const [showLabFilters, setLabShowFilters] = useState(false);\r\n  const [selectedReservation, setSelectedReservation] = useState<any>(null);\r\n  const [selectedLabReservation, setSelectedLabReservation] = useState<any>(null);\r\n  const [detailsDialog, setDetailsDialog] = useState(false);\r\n  const [confirmDialog, setConfirmDialog] = useState(false);\r\n  const [detailsLabDialog, setDetailsLabDialog] = useState(false);\r\n  const [labconfirmDialog, setLabConfirmDialog] = useState(false);\r\n  const [categories, setCategories] = useState<string[]>([]);\r\n  const [actionType, setActionType] = useState<'approve' | 'deny' | null>(null);\r\n  const [labActionType, setLabActionType] = useState<'approve' | 'deny' | null>(null);\r\n  const [equipment, setEquipment] = useState<any[]>([]);\r\n  const [lab, setLab] = useState<any[]>([]);\r\n  const [_users, setUsers] = useState<any[]>([]);\r\n  const [stats, setStats] = useState({\r\n    total: 0,\r\n    pending: 0,\r\n    approved: 0,\r\n    denied: 0,\r\n    cancelled: 0,\r\n    completed: 0,\r\n    utilizationRate: '0.00', // Initialize with a string\r\n  });\r\n  const [labStats, setLabStats] = useState({\r\n    labtotal: 0,\r\n    pending: 0,\r\n    approved: 0,\r\n    denied: 0,\r\n    cancelled: 0,\r\n    completed: 0,\r\n    labutilizationRate: '0.00',\r\n  });\r\n  const [analyticsData, setAnalyticsData] = useState<any[]>([]);\r\n  const [analyticsLabData, setAnalyticsLabData] = useState<any[]>([]);\r\n\r\n  useEffect(() => {\r\n    const checkCompletedReservations = async () => {\r\n      const { data: activeReservations } = await supabase\r\n        .from('reservations')\r\n        .select('*')\r\n        .not('status', 'in', '(completed, cancelled, denied)');\r\n  \r\n      for (const reservation of activeReservations || []) {\r\n        const endTimeUTC = parseISO(reservation.end_time);\r\n        const currentTimeUTC = new Date();\r\n        if (isBefore(endTimeUTC, currentTimeUTC)) {\r\n          await supabase\r\n            .from('reservations')\r\n            .update({ status: 'completed' })\r\n            .eq('id', reservation.id);\r\n        }\r\n      }\r\n      \r\n      fetchData(); // Refresh data after updates\r\n      \r\n      \r\n    };\r\n  \r\n    fetchData();\r\n    fetchCategories();\r\n    fetchLabData();\r\n    checkCompletedReservations();\r\n    fetchAllUsers();\r\n    const interval = setInterval(checkCompletedReservations, 60000); // Check every minute\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      setLoading(true);\r\n  \r\n      // Step 1: Get the current user's ID (logged-in lab manager)\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) throw new Error('User not authenticated');\r\n  \r\n      const managerId = user.id;\r\n  \r\n      // Step 2: Fetch labs managed by the current user\r\n      const { data: managedLabs, error: labsError } = await supabase\r\n        .from('lab')\r\n        .select('id')\r\n        .eq('manager_id', managerId); // Fetch labs where the manager_id matches the logged-in user\r\n  \r\n      if (labsError) throw labsError;\r\n  \r\n      // Extract lab IDs managed by the user\r\n      const managedLabIds = managedLabs.map((lab: any) => lab.id);\r\n  \r\n      // Step 3: Fetch equipment IDs associated with the managed labs\r\n      const { data: managedEquipment, error: equipmentError } = await supabase\r\n        .from('equipment')\r\n        .select('*')\r\n        .in('lab_id', managedLabIds); // Fetch equipment where lab_id is in the managed labs\r\n  \r\n      if (equipmentError) throw equipmentError;\r\n  \r\n      // Extract equipment IDs\r\n      const managedEquipmentIds = managedEquipment.map((eq: any) => eq.id);\r\n\r\n      // Calculate total equipment units (sum of quantities)\r\n      const totalEquipmentUnits = managedEquipment.reduce(\r\n        (total, eq: any) => {\r\n          const equipmentQuantity = eq.quantity || 1; // Default to 1 if quantity is missing\r\n          return total + equipmentQuantity;\r\n        },\r\n        0\r\n      );\r\n      // Store equipment in state or use it directly\r\n      setEquipment(managedEquipment);\r\n      // Step 4: Fetch reservations for the managed equipment\r\n      const [reservationsResponse, equipmentResponse] = await Promise.all([\r\n        supabase\r\n          .from('reservations')\r\n          .select(`\r\n            *,\r\n            equipment (\r\n              id,\r\n              name,\r\n              category,\r\n              manufacturer,\r\n              model,\r\n              image_url,\r\n              lab_id\r\n            ),\r\n            users (\r\n              id,\r\n              email,\r\n              department,\r\n              role\r\n            )\r\n          `)\r\n          .in('equipment_id', managedEquipmentIds) // Filter reservations by managed equipment IDs\r\n          .order('created_at', { ascending: false }),\r\n        supabase\r\n          .from('equipment')\r\n          .select('*')\r\n          .order('name'),\r\n      ]);\r\n  \r\n      if (reservationsResponse.error) throw reservationsResponse.error;\r\n      if (equipmentResponse.error) throw equipmentResponse.error;\r\n  \r\n      setReservations(reservationsResponse.data);\r\n      setEquipment(equipmentResponse.data);\r\n\r\n      \r\n  \r\n      // Calculate statistics\r\n      const stats = reservationsResponse.data.reduce((acc: any, curr: any) => {\r\n        acc.total++;\r\n        acc[curr.status]++;\r\n        return acc;\r\n      }, {\r\n        total: 0,\r\n        pending: 0,\r\n        approved: 0,\r\n        denied: 0,\r\n        cancelled: 0,\r\n        completed: 0,\r\n        utilizationRate: '0.00', // Initialize with a string\r\n      });\r\n      setStats(stats);\r\n\r\n          // Step 5: Calculate total units reserved in completed reservations\r\n          const totalReservedUnits = reservationsResponse.data\r\n          .filter((r: any) => r.status === 'completed') // Only consider completed reservations\r\n          .reduce((total: number, r: any) => {\r\n            const reservedQuantity = r.quantity || 1; // Default to 1 if quantity is missing\r\n            return total + reservedQuantity;\r\n          }, 0);\r\n\r\n          const utilizationRate =\r\n          totalEquipmentUnits > 0\r\n            ? Math.min((totalReservedUnits / totalEquipmentUnits) * 100, 100) // Cap at 100%\r\n            : 0;\r\n        \r\n          setStats((prevStats) => ({\r\n            ...prevStats,\r\n            utilizationRate: utilizationRate.toFixed(2), // Store as a string with 2 decimal places\r\n          }));\r\n\r\n      \r\n    \r\n      // Prepare analytics data\r\n      const last7Days = Array.from({ length: 7 }, (_, i) => {\r\n        const date = addDays(new Date(), -i);\r\n        return format(date, 'yyyy-MM-dd');\r\n      }).reverse();\r\n  \r\n      const analyticsData = last7Days.map(date => {\r\n        const dayReservations = reservationsResponse.data.filter((r: any) =>\r\n          format(parseISO(r.created_at), 'yyyy-MM-dd') === date\r\n        );\r\n  \r\n        return {\r\n          date: format(parseISO(date), 'MMM dd'),\r\n          total: dayReservations.length,\r\n          approved: dayReservations.filter((r: any) => r.status === 'approved').length,\r\n          pending: dayReservations.filter((r: any) => r.status === 'pending').length,\r\n          completed: dayReservations.filter((r: any) => r.status === 'completed').length,\r\n          cancelled: dayReservations.filter((r: any) => r.status === 'cancelled').length,\r\n          denied: dayReservations.filter((r: any) => r.status === 'denied').length,\r\n        };\r\n      });\r\n      setAnalyticsData(analyticsData);\r\n  \r\n    } catch (error: any) {\r\n      setError(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  const fetchCategories = async () => {\r\n      try {\r\n        const { data, error } = await supabase\r\n          .from('equipment')\r\n          .select('category')\r\n          .eq('status', 'operational');\r\n  \r\n        if (error) throw error;\r\n        \r\n        // Extract unique categories\r\n        const uniqueCategories = [...new Set(data.map(item => item.category))];\r\n        setCategories(uniqueCategories);\r\n      } catch (error) {\r\n        console.error('Error fetching categories:', error);\r\n      }\r\n    };\r\n  const fetchLabData = async () => {\r\n    try {\r\n      setLoading(true);\r\n  \r\n      // Get the current user's ID (assuming it's stored in Supabase auth session)\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) throw new Error('User not authenticated');\r\n  \r\n      const managerId = user.id;\r\n  \r\n      // Fetch labs managed by the current user\r\n      const { data: managedLabs, error: labsError } = await supabase\r\n        .from('lab')\r\n        .select('id')\r\n        .eq('manager_id', managerId);\r\n  \r\n      if (labsError) throw labsError;\r\n  \r\n      // Extract lab IDs managed by the user\r\n      const managedLabIds = managedLabs.map((lab: any) => lab.id);\r\n  \r\n      // Fetch lab reservations for the managed labs\r\n      const [labreservationsResponse, labResponse] = await Promise.all([\r\n        supabase\r\n          .from('lab_reservations')\r\n          .select(`*,\r\n            lab (\r\n              id,\r\n              name,\r\n              location,\r\n              image_url\r\n            ),\r\n            users (\r\n              id,\r\n              email,\r\n              department,\r\n              role\r\n            )\r\n          `)\r\n          .in('lab_id', managedLabIds) // Filter by managed lab IDs\r\n          .order('created_at', { ascending: false }),\r\n        supabase\r\n          .from('lab')\r\n          .select('*')\r\n          .eq('manager_id', managerId) // Fetch only labs managed by the user\r\n          .order('name'),\r\n      ]);\r\n  \r\n      if (labreservationsResponse.error) throw labreservationsResponse.error;\r\n      if (labResponse.error) throw labResponse.error;\r\n  \r\n      setLabReservations(labreservationsResponse.data);\r\n      setLab(labResponse.data);\r\n  \r\n      // Calculate statistics\r\n      const labstats = labreservationsResponse.data.reduce((acc: any, curr: any) => {\r\n        acc.labtotal++;\r\n        acc[curr.status]++;\r\n        return acc;\r\n      }, {\r\n        labtotal: 0,\r\n        pending: 0,\r\n        approved: 0,\r\n        denied: 0,\r\n        cancelled: 0,\r\n        completed: 0,\r\n        labutilizationRate: '0.00',\r\n\r\n      });\r\n      setLabStats(labstats)\r\n\r\n  \r\n      // Prepare analytics data\r\n      const last7Days = Array.from({ length: 7 }, (_, i) => {\r\n        const date = addDays(new Date(), -i);\r\n        return format(date, 'yyyy-MM-dd');\r\n      }).reverse();\r\n      const analyticsLabData = last7Days.map(date => {\r\n        const dayReservations = labreservationsResponse.data.filter((r: any) => \r\n          format(parseISO(r.created_at), 'yyyy-MM-dd') === date\r\n        );\r\n        return {\r\n          date: format(parseISO(date), 'MMM dd'),\r\n          labtotal: dayReservations.length,\r\n          approved: dayReservations.filter((r: any) => r.status === 'approved').length,\r\n          pending: dayReservations.filter((r: any) => r.status === 'pending').length,\r\n          completed: dayReservations.filter((r: any) => r.status === 'completed').length,\r\n          cancelled: dayReservations.filter((r: any) => r.status === 'cancelled').length,\r\n          denied: dayReservations.filter((r: any) => r.status === 'denied').length,\r\n        };\r\n      });\r\n      setAnalyticsLabData(analyticsLabData);\r\n    } catch (error: any) {\r\n      setError(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  const fetchAllUsers = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('users')\r\n        .select('id, email, role')\r\n        .order('created_at', { ascending: false });\r\n      if (error) throw error;\r\n      setUsers(data || []);\r\n    } catch (error: any) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const sendNotificationToUser = async (\r\n      userId: string,\r\n      createdBy: string,\r\n      title: string,\r\n      message: string,\r\n      type: string\r\n    ) => {\r\n      try {\r\n        const { error } = await supabase.from('notifications').insert([\r\n          {\r\n            id: crypto.randomUUID(),\r\n            user_id: userId, // Send to the specific user\r\n            created_by: createdBy,\r\n            title,\r\n            message,\r\n            type,\r\n            read: false,\r\n            created_at: new Date().toISOString(),\r\n          },\r\n        ]);\r\n        if (error) {\r\n          throw error;\r\n        }\r\n      } catch (error: any) {\r\n        console.error('Error sending notification to user:', error.message);\r\n      }\r\n    };\r\n  const handleStatusUpdate = async (reservationId: string, status: 'approved' | 'denied' | 'completed' | 'cancelled') => {\r\n    try {\r\n      setLoading(true);\r\n      const { error } = await supabase\r\n        .from('reservations')\r\n        .update({ status })\r\n        .eq('id', reservationId);\r\n\r\n      if (error) throw error;\r\n\r\n      // send notification to user  \r\n      await sendNotificationToUser(\r\n        selectedReservation.user_id,\r\n        'System', // Assuming the system is the one sending the notification\r\n        `Reservation ${status}`,\r\n        `Your reservation for ${selectedReservation.equipment.name} has been ${status}.`,\r\n        'reservation'\r\n      );\r\n      fetchData();\r\n      setConfirmDialog(false);\r\n      setDetailsDialog(false);\r\n    } catch (error: any) {\r\n      setError(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  const handleLabStatusUpdate = async (labreservationId: string, status: 'approved' | 'denied' | 'completed' | 'cancelled') => {\r\n    try {\r\n      setLoading(true);\r\n      const { error } = await supabase\r\n        .from('lab_reservations')\r\n        .update({ status })\r\n        .eq('id', labreservationId);\r\n\r\n      if (error) throw error;\r\n\r\n      // send notification to user\r\n      await sendNotificationToUser(\r\n        selectedLabReservation.user_id,\r\n        'System', // Assuming the system is the one sending the notification\r\n        `Lab Reservation ${status}`,\r\n        `Your lab reservation for ${selectedLabReservation.lab.name} has been ${status}.`,\r\n        'lab_reservation'\r\n      );\r\n      fetchLabData();\r\n      setLabConfirmDialog(false);\r\n      setDetailsLabDialog(false);\r\n    } catch (error: any) {\r\n      setError(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }   \r\n\r\n  }\r\n\r\n  const filteredReservations = reservations.filter(reservation => {\r\n    const matchesSearch = \r\n      reservation.equipment?.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n      reservation.users?.email.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n      reservation.purpose?.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n      reservation.quantity?.toString().includes(searchQuery.toLowerCase());\r\n\r\n    const matchesStatus = !statusFilter || reservation.status === statusFilter;\r\n    const matchesCategory = !categoryFilter || reservation.equipment?.category === categoryFilter;\r\n\r\n\r\n    let matchesDate = true;\r\n    if (dateFilter) {\r\n      const reservationDate = parseISO(reservation.start_time);\r\n      const now = new Date();\r\n      \r\n      switch (dateFilter) {\r\n        case 'today':\r\n          matchesDate = isToday(reservationDate);\r\n          break;\r\n        case 'tomorrow':\r\n          matchesDate = isTomorrow(reservationDate);\r\n          break;\r\n        case 'upcoming':\r\n          matchesDate = isAfter(reservationDate, now);\r\n          break;\r\n        case 'thisWeek':\r\n          const nextWeek = addDays(now, 7);\r\n          matchesDate = isAfter(reservationDate, now) && isBefore(reservationDate, nextWeek);\r\n          break;\r\n      }\r\n    }\r\n\r\n    return matchesSearch && matchesStatus && matchesCategory && matchesDate ;\r\n  });\r\n\r\n  const filteredLabReservations = labreservations.filter(labreservation => {\r\n    const matcheslabSearch = \r\n      labreservation.lab?.name.toLowerCase().includes(labsearchQuery.toLowerCase()) ||\r\n      labreservation.users?.email.toLowerCase().includes(labsearchQuery.toLowerCase()) ||\r\n      labreservation.purpose?.toLowerCase().includes(labsearchQuery.toLowerCase()) ||\r\n      labreservation.attendees?.toString().includes(labsearchQuery.toLowerCase());\r\n    const matcheslabStatus = !labstatusFilter || labreservation.status === labstatusFilter;\r\n\r\n    let matcheslabDate = true;\r\n    if (LabdateFilter) {\r\n      const labreservationDate = parseISO(labreservation.start_time);\r\n      const now = new Date();\r\n      switch (LabdateFilter) {\r\n        case 'today':\r\n          matcheslabDate = isToday(labreservationDate);\r\n          break;\r\n        case 'tomorrow':\r\n          matcheslabDate = isTomorrow(labreservationDate);\r\n          break;\r\n        case 'upcoming':\r\n          matcheslabDate = isAfter(labreservationDate, now);\r\n          break;\r\n        case 'thisWeek':\r\n          const nextWeek = addDays(now, 7);\r\n          matcheslabDate = isAfter(labreservationDate, now) && isBefore(labreservationDate, nextWeek);\r\n          break;\r\n      }\r\n    }\r\n    return matcheslabSearch && matcheslabStatus && matcheslabDate;\r\n  });\r\n\r\n  const calendarEvents = [\r\n    ...filteredReservations.map(reservation => ({\r\n      id: reservation.id,\r\n      title: `${reservation.equipment?.name} - ${reservation.users?.email}`,\r\n      start: reservation.start_time,\r\n      end: reservation.end_time,\r\n      allDay: false,\r\n      backgroundColor: getEventBackgroundColor(reservation.status),\r\n      borderColor: getEventBorderColor(reservation.status),\r\n      textColor: getEventTextColor(reservation.status),\r\n    })),\r\n    ...filteredLabReservations.map(labreservation => ({\r\n      id: labreservation.id,\r\n      title: `${labreservation.lab?.name} - ${labreservation.users?.email}`,\r\n      start: labreservation.start_time,\r\n      end: labreservation.end_time,\r\n      allDay: false,\r\n      backgroundColor: getEventBackgroundColor(labreservation.status),\r\n      borderColor: getEventBorderColor(labreservation.status),\r\n      textColor: getEventTextColor(labreservation.status),\r\n    })),\r\n  ];\r\n  \r\n  function getEventBackgroundColor(status: string): string {\r\n    switch (status) {\r\n      case 'completed':\r\n        return theme.palette.info.light;\r\n      case 'cancelled':\r\n        return theme.palette.error.light;\r\n      case 'approved':\r\n        return theme.palette.success.light;\r\n      case 'pending':\r\n        return theme.palette.warning.light;\r\n      case 'denied':\r\n        return theme.palette.error.light;\r\n      default:\r\n        return theme.palette.grey[300];\r\n    }\r\n  }\r\n  \r\n  function getEventBorderColor(status: string): string {\r\n    switch (status) {\r\n      case 'completed':\r\n        return theme.palette.info.main;\r\n      case 'cancelled':\r\n        return theme.palette.error.main;\r\n      case 'approved':\r\n        return theme.palette.success.main;\r\n      case 'pending':\r\n        return theme.palette.warning.main;\r\n      case 'denied':\r\n        return theme.palette.error.main;\r\n      default:\r\n        return theme.palette.grey[500];\r\n    }\r\n  }\r\n  \r\n  function getEventTextColor(status: string): string {\r\n    switch (status) {\r\n      case 'completed':\r\n      case 'approved':\r\n      case 'pending':\r\n      case 'denied':\r\n      case 'cancelled':\r\n        return '#fff';\r\n      default:\r\n        return theme.palette.text.primary;\r\n    }\r\n  }\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'completed':\r\n        return 'info';\r\n      case 'approved':\r\n        return 'success';\r\n      case 'pending':\r\n        return 'warning';\r\n      case 'denied':\r\n        return 'error';\r\n      case 'cancelled':\r\n        return 'default';\r\n      \r\n      default:\r\n        return 'default';\r\n    }\r\n  };\r\n\r\n  if (loading && reservations.length === 0) {\r\n    return (\r\n      <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Alert severity=\"error\" sx={{ mt: 4 }}>{error}</Alert>\r\n    );\r\n  }\r\n  return (\r\n    <Box>\r\n      {/* Tabs */}\r\n      <Paper sx={{ width: '100%', mb: 3 }}>\r\n        <Tabs value={tabValue} onChange={(_, newValue) => setTabValue(newValue)}>\r\n          <Tab icon={<AssessmentIcon />} label=\"Equipment\" />\r\n          <Tab icon={<ScienceIcon />} label=\"Lab\" />\r\n          <Tab icon={<EventIcon />} label=\"Calendar\" />\r\n          <Tab icon={<TimelineIcon />} label=\"Analytics\" />\r\n        </Tabs>\r\n        {/* Equipment  Tab */}\r\n        <TabPanel value={tabValue} index={0}>          \r\n           {/* Equipment Status  Summary */}\r\n          <Grid item xs={12} md={6}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\" gutterBottom fontWeight=\"bold\">\r\n                Equipment Reservation Status Summary\r\n                </Typography>\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>\r\n                    <Box sx={{ textAlign: 'center', p: 1 }}>\r\n                    <Typography variant=\"h4\" color=\"info\">\r\n                      {stats.total}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">Total Equipment Reservations</Typography>\r\n                    </Box>\r\n                    <Box sx={{ textAlign: 'center', p: 1 }}>\r\n                    <Typography variant=\"h4\" color=\"warning.main\">\r\n                      {reservations.filter(r => r.status === 'pending').length}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">Pending</Typography>\r\n                    </Box>\r\n                    <Box sx={{ textAlign: 'center', p: 1 }}>\r\n                    <Typography variant=\"h4\" color=\"success.main\">\r\n                      {reservations.filter(r => r.status === 'approved').length}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">Approved</Typography>\r\n                    </Box>\r\n                    <Box sx={{ textAlign: 'center', p: 1 }}>\r\n                    <Typography variant=\"h4\" color=\"error.main\">\r\n                      {reservations.filter(r => r.status === 'denied').length}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">Denied</Typography>\r\n                    </Box>\r\n                    <Box sx={{ textAlign: 'center', p: 1 }}>\r\n                    <Typography variant=\"h4\" color=\"text.secondary\">\r\n                                {reservations.filter(r => r.status === 'cancelled').length}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">Cancelled</Typography>\r\n                    </Box>\r\n                    <Box sx={{ textAlign: 'center', p: 1 }}>\r\n                    <Typography variant=\"h4\" color=\"info.main\">\r\n                                {reservations.filter(r => r.status === 'completed').length}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">Completed</Typography>\r\n                    </Box>\r\n                </Box>\r\n                <Divider sx={{ my: 2 }} />\r\n                <Typography variant=\"subtitle1\" gutterBottom>\r\n                            Today's Reservations: {reservations.filter(r => {\r\n                              const startDate = parseISO(r.start_time);\r\n                              return isToday(startDate);\r\n                            }).length}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" gutterBottom>\r\n                            Tomorrow's Reservations: {reservations.filter(r => {\r\n                              const startDate = parseISO(r.start_time);\r\n                              return isTomorrow(startDate);\r\n                            }).length}\r\n                </Typography>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                  Equipment Utilization Rate\r\n                </Typography>\r\n                <Typography variant=\"h4\" color=\"info.main\">\r\n                  {stats.utilizationRate || '0.00'}%\r\n                </Typography>\r\n                <LinearProgress \r\n                  variant=\"determinate\" \r\n                  value={parseFloat(stats.utilizationRate) || 0} // Fallback to 0 if invalid\r\n                  color=\"info\"\r\n                  sx={{ mt: 2, height: 8, borderRadius: 4 }}\r\n                />\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          {/* Filters */}\r\n          <Paper sx={{ p: 2, mb: 3, mt: 2 }}>\r\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n              <TextField\r\n                placeholder=\"Search reservations...\"\r\n                size=\"small\"\r\n                value={searchQuery}\r\n                onChange={(e) => setSearchQuery(e.target.value)}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <SearchIcon />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                sx={{ width: 300 }}\r\n              />\r\n              <Button\r\n                variant=\"outlined\"\r\n                startIcon={<FilterListIcon />}\r\n                onClick={() => setShowFilters(!showFilters)}\r\n              >\r\n                {showFilters ? 'Hide Filters' : 'Show Filters'}\r\n              </Button>\r\n            </Box>\r\n\r\n            {showFilters && (\r\n              <Box sx={{ mt: 2 }}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={4}>\r\n                    {/* Status Select */}\r\n                    <FormControl fullWidth size=\"small\">\r\n                      <InputLabel>Status</InputLabel>\r\n                      <Select\r\n                        value={statusFilter}\r\n                        label=\"Status\"\r\n                        onChange={(e) => setStatusFilter(e.target.value)}\r\n                      >\r\n                        <MenuItem value=\"\">All Status</MenuItem>\r\n                        <MenuItem value=\"pending\">Pending</MenuItem>\r\n                        <MenuItem value=\"approved\">Approved</MenuItem>\r\n                        <MenuItem value=\"denied\">Denied</MenuItem>\r\n                        <MenuItem value=\"cancelled\">Cancelled</MenuItem>\r\n                        <MenuItem value=\"completed\">Completed</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={4}>\r\n                    {/* Category Select */}\r\n                    <FormControl fullWidth size=\"small\">\r\n                      <InputLabel>Category</InputLabel>\r\n                      <Select\r\n                        value={categoryFilter}\r\n                        label=\"Category\"\r\n                        onChange={(e) => setCategoryFilter(e.target.value)}\r\n                      >\r\n                        <MenuItem value=\"\">All Categories</MenuItem>\r\n                        {categories.map((category) => (\r\n                          <MenuItem key={category} value={category}>\r\n                            {category}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={4}>\r\n                    {/* Date Select */}\r\n                    <FormControl fullWidth size=\"small\">\r\n                      <InputLabel>Date</InputLabel>\r\n                      <Select\r\n                        value={dateFilter}\r\n                        label=\"Date\"\r\n                        onChange={(e) => setDateFilter(e.target.value)}\r\n                      >\r\n                        <MenuItem value=\"\">All Dates</MenuItem>\r\n                        <MenuItem value=\"today\">Today</MenuItem>\r\n                        <MenuItem value=\"tomorrow\">Tomorrow</MenuItem>\r\n                        <MenuItem value=\"upcoming\">Upcoming</MenuItem>\r\n                        <MenuItem value=\"thisWeek\">This Week</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <Box sx={{ mt: 2, display: 'flex', justifyContent: 'flex-end' }}>\r\n                      <Button \r\n                        variant=\"text\" \r\n                        onClick={() => {\r\n                          setSearchQuery('');\r\n                          setCategoryFilter('');\r\n                          setDateFilter('');\r\n                        }}\r\n                      >\r\n                        Clear Filters\r\n                      </Button>\r\n                    </Box>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n            )}\r\n            \r\n          </Paper>\r\n          <List>\r\n            {filteredReservations.map((reservation) => (\r\n              <Paper key={reservation.id} sx={{ mb: 2 }}>\r\n                <ListItem>\r\n                  <Box sx={{ width: '100%' }}>\r\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', mb: 1 }}>\r\n                      <Box>\r\n                        <Typography variant=\"h6\">\r\n                          {reservation.equipment?.name}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\">\r\n                          Reserved by: {reservation.users?.email}\r\n                        </Typography>\r\n                      </Box>\r\n                      <Chip\r\n                        label={reservation.status}\r\n                        color={getStatusColor(reservation.status)}\r\n                        size=\"small\"\r\n                      />\r\n                    </Box>\r\n                    \r\n                    <Grid container spacing={2} sx={{ mt: 1 }}>\r\n                      <Grid item xs={12} md={6}>\r\n                        <Typography variant=\"body2\">\r\n                          <strong>Start:</strong> {format(parseISO(reservation.start_time), 'PPpp')}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">\r\n                          <strong>End:</strong> {format(parseISO(reservation.end_time), 'PPpp')}\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={6}>\r\n                        <Typography variant=\"body2\">\r\n                          <strong>Department:</strong> {reservation.users?.department}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">\r\n                          <strong>Equipment Category:</strong> {reservation.equipment?.category}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">\r\n                          <strong>Quantity:</strong>{reservation.quantity}\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n\r\n                    <Box sx={{ mt: 2, display: 'flex', gap: 1 }}>\r\n                      <Button\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        onClick={() => {\r\n                          setSelectedReservation(reservation);\r\n                          setDetailsDialog(true);\r\n                        }}\r\n                        startIcon={<InfoIcon />}\r\n                      >\r\n                        Details\r\n                      </Button>\r\n                      \r\n                      {reservation.status === 'pending' && (\r\n                        <>\r\n                          <Button\r\n                            size=\"small\"\r\n                            variant=\"contained\"\r\n                            color=\"success\"\r\n                            onClick={() => {\r\n                              setSelectedReservation(reservation);\r\n                              setActionType('approve');\r\n                              setConfirmDialog(true);\r\n                            }}\r\n                            startIcon={<CheckCircleIcon />}\r\n                          >\r\n                            Approve\r\n                          </Button>\r\n                          <Button\r\n                            size=\"small\"\r\n                            variant=\"contained\"\r\n                            color=\"error\"\r\n                            onClick={() => {\r\n                              setSelectedReservation(reservation);\r\n                              setActionType('deny');\r\n                              setConfirmDialog(true);\r\n                            }}\r\n                            startIcon={<CancelIcon />}\r\n                          >\r\n                            Deny\r\n                          </Button>\r\n                        </>\r\n                      )}\r\n                    </Box>\r\n                  </Box>\r\n                </ListItem>\r\n\r\n              </Paper>\r\n            ))}\r\n            {filteredReservations.length === 0 && (\r\n              <Typography variant=\"body1\" sx={{ textAlign: 'center', mt: 4 }}>\r\n              No Equipment reservations found.\r\n            </Typography>)}\r\n          </List>\r\n        </TabPanel>\r\n        {/* Lab Tab */}\r\n        <TabPanel value={tabValue} index={1}>\r\n          {/* Status Lab Summary */}\r\n          <Grid item xs={12} md={6}>\r\n            <Card>\r\n                        <CardContent>\r\n                          <Typography variant=\"h6\" gutterBottom fontWeight=\"bold\">\r\n                            Lab Reservation Status Summary\r\n                          </Typography>\r\n                          \r\n                          <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>\r\n                            <Box sx={{ textAlign: 'center', p: 1 }}>\r\n                              <Typography variant=\"h4\" color=\"info\">\r\n                                {labStats.labtotal}\r\n                              </Typography>\r\n                              <Typography variant=\"body2\">Total Lab Reservations</Typography>\r\n                            </Box>\r\n                            <Box sx={{ textAlign: 'center', p: 1 }}>\r\n                              <Typography variant=\"h4\" color=\"warning.main\">\r\n                                {labreservations.filter(r => r.status === 'pending').length}\r\n                              </Typography>\r\n                              <Typography variant=\"body2\">Pending</Typography>\r\n                            </Box>\r\n                            <Box sx={{ textAlign: 'center', p: 1 }}>\r\n                              <Typography variant=\"h4\" color=\"success.main\">\r\n                                {labreservations.filter(r => r.status === 'approved').length}\r\n                              </Typography>\r\n                              <Typography variant=\"body2\">Approved</Typography>\r\n                            </Box>\r\n                            <Box sx={{ textAlign: 'center', p: 1 }}>\r\n                              <Typography variant=\"h4\" color=\"error.main\">\r\n                                {labreservations.filter(r => r.status === 'denied').length}\r\n                              </Typography>\r\n                              <Typography variant=\"body2\">Denied</Typography>\r\n                            </Box>\r\n                            <Box sx={{ textAlign: 'center', p: 1 }}>\r\n                              <Typography variant=\"h4\" color=\"text.secondary\">\r\n                                {labreservations.filter(r => r.status === 'cancelled').length}\r\n                              </Typography>\r\n                              <Typography variant=\"body2\">Cancelled</Typography>\r\n                            </Box>\r\n                            <Box sx={{ textAlign: 'center', p: 1 }}>\r\n                              <Typography variant=\"h4\" color=\"info.main\">\r\n                                {labreservations.filter(r => r.status === 'completed').length}\r\n                              </Typography>\r\n                              <Typography variant=\"body2\">Complated</Typography>\r\n                            </Box>\r\n                          </Box>\r\n                          <Divider sx={{ my: 2 }} />\r\n                          <Typography variant=\"subtitle1\" gutterBottom>\r\n                            Today's Lab Reservation: {labreservations.filter(r => {\r\n                              const startDate = parseISO(r.start_time);\r\n                              return isToday(startDate);\r\n                            }).length}\r\n                          </Typography>\r\n                          <Typography variant=\"subtitle1\" gutterBottom>\r\n                            Tomorrow's Reservations: {labreservations.filter(r => {\r\n                              const startDate = parseISO(r.start_time);\r\n                              return isTomorrow(startDate);\r\n                            }).length}\r\n                          </Typography>\r\n                          \r\n                        </CardContent>\r\n                      </Card>\r\n          </Grid>\r\n          {/* Filters */}\r\n          <Paper sx={{ p: 2, mb: 3, mt: 2 }}>\r\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n              <TextField\r\n                placeholder=\"Search Lab reservations...\"\r\n                size=\"small\"\r\n                value={labsearchQuery}\r\n                onChange={(e) => setLabSearchQuery(e.target.value)}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <SearchIcon />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                sx={{ width: 300 }}\r\n              />\r\n              <Button\r\n                variant=\"outlined\"\r\n                startIcon={<FilterListIcon />}\r\n                onClick={() => setLabShowFilters(!showLabFilters)}\r\n              >\r\n                {showLabFilters ? 'Hide Filters' : 'Show Filters'}\r\n              </Button>\r\n            </Box>\r\n\r\n            {showLabFilters && (\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={4}>\r\n                  <FormControl fullWidth size=\"small\">\r\n                    <InputLabel>Status</InputLabel>\r\n                    <Select\r\n                      value={labstatusFilter}\r\n                      label=\"Status\"\r\n                      onChange={(e) => setLabStatusFilter(e.target.value)}\r\n                    >\r\n                      <MenuItem value=\"\">All Status</MenuItem>\r\n                      <MenuItem value=\"pending\">Pending</MenuItem>\r\n                      <MenuItem value=\"approved\">Approved</MenuItem>\r\n                      <MenuItem value=\"denied\">Denied</MenuItem>\r\n                      <MenuItem value=\"cancelled\">Cancelled</MenuItem>\r\n                      <MenuItem value=\"completed\">Completed</MenuItem>\r\n\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                  <FormControl fullWidth size=\"small\">\r\n                    <InputLabel>Date</InputLabel>\r\n                    <Select\r\n                      value={LabdateFilter}\r\n                      label=\"Date\"\r\n                      onChange={(e) => setLabDateFilter(e.target.value)}\r\n                    >\r\n                      <MenuItem value=\"\">All Dates</MenuItem>\r\n                      <MenuItem value=\"today\">Today</MenuItem>\r\n                      <MenuItem value=\"tomorrow\">Tomorrow</MenuItem>\r\n                      <MenuItem value=\"upcoming\">Upcoming</MenuItem>\r\n                      <MenuItem value=\"thisWeek\">This Week</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Box sx={{ mt: 2, display: 'flex', justifyContent: 'flex-end' }}>\r\n                      <Button \r\n                        variant=\"text\" \r\n                        onClick={() => {\r\n                          setLabSearchQuery('');\r\n                          setLabStatusFilter('');\r\n                          setLabDateFilter('');\r\n                        }}\r\n                      >\r\n                        Clear Filters\r\n                      </Button>\r\n                    </Box>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n          </Paper>\r\n          <Grid item mt={2}>\r\n          {filteredLabReservations.length > 0 ? (\r\n          <List>\r\n            {filteredLabReservations.map((labreservation) => (\r\n              <Paper key={labreservation.id} sx={{ mb: 2 }}>\r\n                <ListItem>\r\n                  <Box sx={{ width: '100%' }}>\r\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', mb: 1 }}>\r\n                      <Box>\r\n                        <Typography variant=\"h6\">\r\n                          {labreservation.lab?.name}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\">\r\n                          Reserved by: {labreservation.users?.email?.split('@')[0] || 'Unknown User'}\r\n                        </Typography>\r\n                      </Box>\r\n                      <Chip\r\n                        label={labreservation.status}\r\n                        color={getStatusColor(labreservation.status)}\r\n                        size=\"small\"\r\n                      />\r\n                    </Box>\r\n                    \r\n                    <Grid container spacing={2} sx={{ mt: 1 }}>\r\n                      <Grid item xs={12} md={6}>\r\n                        <Typography variant=\"body2\">\r\n                          <strong>Start:</strong> {format(parseISO(labreservation.start_time), 'PPpp')}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">\r\n                          <strong>End:</strong> {format(parseISO(labreservation.end_time), 'PPpp')}\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={6}>\r\n                        <Typography variant=\"body2\">\r\n                          <strong>Department:</strong> {labreservation.users?.department || 'Unknown Department'}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">\r\n                          <strong>Lab Location:</strong> {labreservation.lab?.location || 'Unknown Location'}\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n\r\n                    <Box sx={{ mt: 2, display: 'flex', gap: 1 }}>\r\n                      <Button\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        onClick={() => {\r\n                          setSelectedLabReservation(labreservation);\r\n                          setDetailsLabDialog(true);\r\n                        }}\r\n                        startIcon={<InfoIcon />}\r\n                      >\r\n                        Details\r\n                      </Button>\r\n                      \r\n                      {labreservation.status === 'pending' && (\r\n                        <>\r\n                          <Button\r\n                            size=\"small\"\r\n                            variant=\"contained\"\r\n                            color=\"success\"\r\n                            onClick={() => {\r\n                              setSelectedLabReservation(labreservation);\r\n                              setLabActionType('approve');\r\n                              setLabConfirmDialog(true);\r\n                            }}\r\n                            startIcon={<CheckCircleIcon />}\r\n                          >\r\n                            Approve\r\n                          </Button>\r\n                          <Button\r\n                            size=\"small\"\r\n                            variant=\"contained\"\r\n                            color=\"error\"\r\n                            onClick={() => {\r\n                              setSelectedLabReservation(labreservation);\r\n                              setActionType('deny');\r\n                              setConfirmDialog(true);\r\n                            }}\r\n                            startIcon={<CancelIcon />}\r\n                          >\r\n                            Deny\r\n                          </Button>\r\n                        </>\r\n                      )}\r\n                    </Box>\r\n                  </Box>\r\n                </ListItem>\r\n              </Paper>\r\n            ))}\r\n          </List>\r\n        ) : (\r\n          <Typography variant=\"body1\" sx={{ textAlign: 'center', mt: 4 }}>\r\n            No lab reservations found.\r\n          </Typography>\r\n          )}\r\n          </Grid>\r\n        </TabPanel>\r\n        {/* Calendar Tab */}\r\n        <TabPanel value={tabValue} index={2}>\r\n          <Paper sx={{ p: 2 }}>\r\n            <FullCalendar\r\n              plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n              initialView=\"timeGridWeek\"\r\n              headerToolbar={{\r\n                left: 'prev,next today',\r\n                center: 'title',\r\n                right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n              }}\r\n              events={calendarEvents}\r\n              eventClick={(info) => {\r\n                const reservation = reservations.find(r => r.id === info.event.id);\r\n                if (reservation) {\r\n                  setSelectedReservation(reservation);\r\n                  setDetailsDialog(true);\r\n                }\r\n                const labreservation = labreservations.find(r => r.id === info.event.id);\r\n                if (labreservation) {\r\n                  setSelectedLabReservation(labreservation);\r\n                  setDetailsLabDialog(true);\r\n                }\r\n              }\r\n\r\n            }\r\n              height=\"auto\"\r\n              aspectRatio={1.5}\r\n            />\r\n          </Paper>\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={3}>\r\n          <Grid container spacing={4}>\r\n            {/* Equipment Reservation Trends */}\r\n            <Grid item xs={12}>\r\n              <Paper sx={{ p: 3, borderRadius: 4, boxShadow: 3 }}>\r\n                <Typography variant=\"h5\" gutterBottom sx={{ fontWeight: 'bold', color: theme.palette.primary.main }}>\r\n                  Equipment Reservation Trends\r\n                </Typography>\r\n                <ResponsiveContainer width=\"100%\" height={350}>\r\n                  <LineChart data={analyticsData}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"date\" tick={{ fontSize: 12 }} />\r\n                    <YAxis tick={{ fontSize: 12 }} />\r\n                    <RechartsTooltip contentStyle={{ backgroundColor: '#fff', border: '1px solid #ddd' }} />\r\n                    <Line type=\"monotone\" dataKey=\"total\" name=\"Total\" stroke={theme.palette.primary.main} strokeWidth={2} />\r\n                    <Line type=\"monotone\" dataKey=\"approved\" name=\"Approved\" stroke={theme.palette.success.main} strokeWidth={2} />\r\n                    <Line type=\"monotone\" dataKey=\"pending\" name=\"Pending\" stroke={theme.palette.warning.main} strokeWidth={2} />\r\n                    <Line type=\"monotone\" dataKey=\"completed\" name=\"Completed\" stroke={theme.palette.info.main} strokeWidth={2} />\r\n                    <Line type=\"monotone\" dataKey=\"cancelled\" name=\"Cancelled\" stroke={theme.palette.error.main} strokeWidth={2} />\r\n                  </LineChart>\r\n                </ResponsiveContainer>\r\n              </Paper>\r\n            </Grid>\r\n\r\n            {/* Lab Reservation Trends */}\r\n            <Grid item xs={12}>\r\n              <Paper sx={{ p: 3, borderRadius: 4, boxShadow: 3 }}>\r\n                <Typography variant=\"h5\" gutterBottom sx={{ fontWeight: 'bold', color: theme.palette.primary.main }}>\r\n                  Lab Reservation Trends\r\n                </Typography>\r\n                <ResponsiveContainer width=\"100%\" height={350}>\r\n                  <LineChart data={analyticsLabData}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"date\" tick={{ fontSize: 12 }} />\r\n                    <YAxis tick={{ fontSize: 12 }} />\r\n                    <RechartsTooltip contentStyle={{ backgroundColor: '#fff', border: '1px solid #ddd' }} />\r\n                    <Line type=\"monotone\" dataKey=\"total\" name=\"Total\" stroke={theme.palette.primary.main} strokeWidth={2} />\r\n                    <Line type=\"monotone\" dataKey=\"approved\" name=\"Approved\" stroke={theme.palette.success.main} strokeWidth={2} />\r\n                    <Line type=\"monotone\" dataKey=\"pending\" name=\"Pending\" stroke={theme.palette.warning.main} strokeWidth={2} />\r\n                    <Line type=\"monotone\" dataKey=\"completed\" name=\"Completed\" stroke={theme.palette.info.main} strokeWidth={2} />\r\n                    <Line type=\"monotone\" dataKey=\"cancelled\" name=\"Cancelled\" stroke={theme.palette.error.main} strokeWidth={2} />\r\n                  </LineChart>\r\n                </ResponsiveContainer>\r\n              </Paper>\r\n            </Grid>\r\n\r\n            {/* Equipment Usage */}\r\n            <Grid item xs={12} md={6}>\r\n              <Paper sx={{ p: 3, borderRadius: 4, boxShadow: 3 }}>\r\n                <Typography variant=\"h5\" gutterBottom sx={{ fontWeight: 'bold', color: theme.palette.primary.main }}>\r\n                  Equipment Usage\r\n                </Typography>\r\n                {equipment.length > 0 ? (\r\n                  <List>\r\n                    {equipment\r\n                      .map((item) => {\r\n                        const itemReservations = reservations.filter(\r\n                          (r) =>\r\n                            r.equipment_id === item.id &&\r\n                            ['approved', 'completed'].includes(r.status)\r\n                        );\r\n                        const usagePercentage =\r\n                          stats.total > 0\r\n                            ? (itemReservations.length  / stats.total) * 100\r\n                            : 0;\r\n\r\n                        return {\r\n                          ...item,\r\n                          reservationCount: itemReservations.length,\r\n                          usagePercentage: Math.round(usagePercentage),\r\n                        };\r\n                      })\r\n                      .filter((item) => item.reservationCount > 0)\r\n                      .sort((a, b) => b.reservationCount - a.reservationCount)\r\n                      .map((item) => (\r\n                        <ListItem key={item.id} sx={{ py: 1 }}>\r\n                          <ListItemText\r\n                            primary={\r\n                              <Typography variant=\"subtitle1\" sx={{ fontWeight: 'medium' }}>\r\n                                {item.name}\r\n                              </Typography>\r\n                            }\r\n                            secondary={`${item.reservationCount} reservations`}\r\n                          />\r\n                          <ListItemSecondaryAction>\r\n                            <Chip\r\n                              label={`${item.usagePercentage}%`}\r\n                              size=\"small\"\r\n                              sx={{\r\n                                backgroundColor: theme.palette.primary.light,\r\n                                color: theme.palette.common.white,\r\n                                fontWeight: 'bold',\r\n                              }}\r\n                            />\r\n                          </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                      ))}\r\n                  </List>\r\n                ) : (\r\n                  <Typography variant=\"body1\" sx={{ textAlign: 'center', mt: 4, color: theme.palette.text.secondary }}>\r\n                    No equipment data available.\r\n                  </Typography>\r\n                )}\r\n              </Paper>\r\n            </Grid>\r\n\r\n            {/* Lab Usage */}\r\n            <Grid item xs={12} md={6}>\r\n              <Paper sx={{ p: 3, borderRadius: 4, boxShadow: 3 }}>\r\n                <Typography variant=\"h5\" gutterBottom sx={{ fontWeight: 'bold', color: theme.palette.primary.main }}>\r\n                  Lab Usage\r\n                </Typography>\r\n                {lab.length > 0 ? (\r\n                  <List>\r\n                    {lab.map((item) => {\r\n                      const itemReservations = labreservations.filter(\r\n                        (r) =>\r\n                          r.lab_id === item.id &&\r\n                          ['approved', 'completed'].includes(r.status)\r\n                      );\r\n                      const usagePercentage =\r\n                        labStats.labtotal > 0\r\n                          ? (itemReservations.length / labStats.labtotal) * 100\r\n                          : 0;\r\n\r\n                      return (\r\n                        <ListItem key={item.id} sx={{ py: 1 }}>\r\n                          <ListItemText\r\n                            primary={\r\n                              <Typography variant=\"subtitle1\" sx={{ fontWeight: 'medium' }}>\r\n                                {item.name}\r\n                              </Typography>\r\n                            }\r\n                            secondary={`${itemReservations.length} reservations`}\r\n                          />\r\n                          <ListItemSecondaryAction>\r\n                            <Chip\r\n                              label={`${Math.round(usagePercentage)}%`}\r\n                              size=\"small\"\r\n                              sx={{\r\n                                backgroundColor: theme.palette.primary.light,\r\n                                color: theme.palette.common.white,\r\n                                fontWeight: 'bold',\r\n                              }}\r\n                            />\r\n                          </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                      );\r\n                    })}\r\n                  </List>\r\n                ) : (\r\n                  <Typography variant=\"body1\" sx={{ textAlign: 'center', mt: 4, color: theme.palette.text.secondary }}>\r\n                    No lab data available.\r\n                  </Typography>\r\n                )}\r\n              </Paper>\r\n            </Grid>\r\n\r\n\r\n            \r\n          </Grid>\r\n        </TabPanel>\r\n      </Paper>\r\n      {/* Equipment Details Dialog */}\r\n      <Dialog\r\n        open={detailsDialog}\r\n        onClose={() => setDetailsDialog(false)}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        {selectedReservation && (\r\n          <>\r\n            <DialogTitle>\r\n              Reservation Details\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12} md={6}>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    Equipment Information\r\n                  </Typography>\r\n                  <Box \r\n                    component=\"img\"\r\n                    src={selectedReservation.equipment?.image_url || 'https://picsum.photos/200/300'}\r\n                    alt={selectedReservation.equipment?.name}\r\n                    sx={{ width: '100%', height: 200, objectFit: 'cover', borderRadius: 1, mb: 2 }}\r\n                  />\r\n                  <Typography variant=\"subtitle1\" gutterBottom>\r\n                    {selectedReservation.equipment?.name}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" paragraph>\r\n                    {selectedReservation.equipment?.manufacturer} {selectedReservation.equipment?.model}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\">\r\n                    Category: {selectedReservation.equipment?.category}\r\n                  </Typography>\r\n                </Grid>\r\n                \r\n                <Grid item xs={12} md={6}>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    Reservation Information\r\n                  </Typography>\r\n                  <Box sx={{ mb: 3 }}>\r\n                    <Typography variant=\"body2\" gutterBottom>\r\n                      <strong>Status:</strong>{' '}\r\n                      <Chip \r\n                        label={selectedReservation.status}\r\n                        color={getStatusColor(selectedReservation.status)}\r\n                        size=\"small\"\r\n                      />\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" gutterBottom>\r\n                      <strong>Start Time:</strong> {format(parseISO(selectedReservation.start_time), 'PPpp')}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" gutterBottom>\r\n                      <strong>End Time:</strong> {format(parseISO(selectedReservation.end_time), 'PPpp')}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" gutterBottom>\r\n                      <strong>Created:</strong> {format(parseISO(selectedReservation.created_at), 'PPpp')}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">\r\n                      <Typography variant=\"body2\">\r\n                            <strong>Duration:</strong>\r\n                            {\r\n                              (() => {\r\n                                const start = new Date(selectedReservation.start_time);\r\n                                const end = new Date(selectedReservation.end_time);\r\n                                let diffMs = end.getTime() - start.getTime();\r\n                                const hours = Math.floor(diffMs / (1000 * 60 * 60));\r\n                                diffMs -= hours * (1000 * 60 * 60);\r\n                                const minutes = Math.floor(diffMs / (1000 * 60));\r\n                                \r\n                                return `${hours} hour(s), ${minutes} minute(s)`;\r\n                              })()\r\n                            }\r\n                          </Typography>\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" gutterBottom>\r\n                      <strong>Quantity:</strong> {selectedReservation.quantity}\r\n                    </Typography>\r\n                  </Box>\r\n\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    User Information\r\n                  </Typography>\r\n                  <Box sx={{ mb: 3 }}>\r\n                    <Typography variant=\"body2\" gutterBottom>\r\n                      <strong>Email:</strong> {selectedReservation.users?.email}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" gutterBottom>\r\n                      <strong>Department:</strong> {selectedReservation.users?.department}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" gutterBottom>\r\n                      <strong>Role:</strong> {selectedReservation.users?.role}\r\n                    </Typography>\r\n                  </Box>\r\n\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    Purpose\r\n                  </Typography>\r\n                  <Typography variant=\"body2\">\r\n                    {selectedReservation.purpose}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={() => setDetailsDialog(false)}>\r\n                Close\r\n              </Button>\r\n              {selectedReservation.status === 'pending' && (\r\n                <>\r\n                  <Button\r\n                    color=\"success\"\r\n                    variant=\"contained\"\r\n                    onClick={() => {\r\n                      setActionType('approve');\r\n                      setConfirmDialog(true);\r\n                    }}\r\n                  >\r\n                    Approve\r\n                  </Button>\r\n                  <Button\r\n                    color=\"error\"\r\n                    variant=\"contained\"\r\n                    onClick={() => {\r\n                      setActionType('deny');\r\n                      setConfirmDialog(true);\r\n                    }}\r\n                  >\r\n                    Deny\r\n                  </Button>\r\n                  <Button\r\n                    color=\"info\"\r\n                    variant=\"contained\"\r\n                    onClick={() => {\r\n                      handleStatusUpdate(selectedReservation.id, 'completed');\r\n                    }}\r\n                  >\r\n                    Mark as Completed\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </DialogActions>\r\n          </>\r\n        )}\r\n      </Dialog>\r\n      {/* Lab Details Dialog */}\r\n      <Dialog\r\n        open={detailsLabDialog}\r\n        onClose={() => setDetailsDialog(false)}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        {selectedLabReservation && (\r\n          <>\r\n            <DialogTitle>\r\n              Reservation Details\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12} md={6}>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    Lab Information\r\n                  </Typography>\r\n                  <Box \r\n                    component=\"img\"\r\n                    src={selectedLabReservation.lab?.image_url || 'https://picsum.photos/200/300'}\r\n                    alt={selectedLabReservation.lab?.name}\r\n                    sx={{ width: '100%', height: 200, objectFit: 'cover', borderRadius: 1, mb: 2 }}\r\n                  />\r\n                  <Typography variant=\"subtitle1\" gutterBottom>\r\n                    {selectedLabReservation.lab?.name}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" paragraph>\r\n                    {selectedLabReservation.lab?.location}\r\n                  </Typography>\r\n                </Grid>\r\n                \r\n                <Grid item xs={12} md={6}>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    Reservation Information\r\n                  </Typography>\r\n                  <Box sx={{ mb: 3 }}>\r\n                    <Typography variant=\"body2\" gutterBottom>\r\n                      <strong>Status:</strong>{' '}\r\n                      <Chip \r\n                        label={selectedLabReservation.status}\r\n                        color={getStatusColor(selectedLabReservation.status)}\r\n                        size=\"small\"\r\n                      />\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" gutterBottom>\r\n                      <strong>Start Time:</strong> {format(parseISO(selectedLabReservation.start_time), 'PPpp')}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" gutterBottom>\r\n                      <strong>End Time:</strong> {format(parseISO(selectedLabReservation.end_time), 'PPpp')}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" gutterBottom>\r\n                      <strong>Created:</strong> {format(parseISO(selectedLabReservation.created_at), 'PPpp')}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">\r\n                      <Typography variant=\"body2\">\r\n                            <strong>Duration:</strong>\r\n                            {\r\n                              (() => {\r\n                                const start = new Date(selectedLabReservation.start_time);\r\n                                const end = new Date(selectedLabReservation.end_time);\r\n                                let diffMs = end.getTime() - start.getTime();\r\n                                const hours = Math.floor(diffMs / (1000 * 60 * 60));\r\n                                diffMs -= hours * (1000 * 60 * 60);\r\n                                const minutes = Math.floor(diffMs / (1000 * 60));\r\n                                \r\n                                return `${hours} hour(s), ${minutes} minute(s)`;\r\n                              })()\r\n                            }\r\n                          </Typography>\r\n                    </Typography>\r\n                    <Typography variant='body2'>\r\n                      <strong>Attendees:</strong> {selectedLabReservation.attendees}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    User Information\r\n                  </Typography>\r\n                  <Box sx={{ mb: 3 }}>\r\n                    <Typography variant=\"body2\" gutterBottom>\r\n                      <strong>Email:</strong> {selectedLabReservation.users?.email}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" gutterBottom>\r\n                      <strong>Department:</strong> {selectedLabReservation.users?.department}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" gutterBottom>\r\n                      <strong>Role:</strong> {selectedLabReservation.users?.role}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    Purpose\r\n                  </Typography>\r\n                  <Typography variant=\"body2\">\r\n                    {selectedLabReservation.purpose}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={() => setDetailsLabDialog(false)}>\r\n                Close\r\n              </Button>\r\n              {selectedLabReservation.status === 'pending' && (\r\n                <>\r\n                  <Button\r\n                    color=\"success\"\r\n                    variant=\"contained\"\r\n                    onClick={() => {\r\n                      setLabActionType('approve');\r\n                      setLabConfirmDialog(true);\r\n                    }}\r\n                  >\r\n                    Approve\r\n                  </Button>\r\n                  <Button\r\n                    color=\"error\"\r\n                    variant=\"contained\"\r\n                    onClick={() => {\r\n                      setLabActionType('deny');\r\n                      setLabConfirmDialog(true);\r\n                    }}\r\n                  >\r\n                    Deny\r\n                  </Button>\r\n                  <Button\r\n                    color=\"info\"\r\n                    variant=\"contained\"\r\n                    onClick={() => {\r\n                      handleLabStatusUpdate(selectedLabReservation.id, 'completed');\r\n                    }}\r\n                  >\r\n                    Mark as Completed\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </DialogActions>\r\n          </>\r\n        )}\r\n      </Dialog>\r\n      {/* Confirmation Dialog */}\r\n      <Dialog\r\n        open={confirmDialog}\r\n        onClose={() => setConfirmDialog(false)}\r\n      >\r\n        <DialogTitle>\r\n          {actionType === 'approve' ? 'Approve Reservation' : 'Deny Reservation'}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Typography>\r\n            Are you sure you want to {actionType} this reservation?\r\n            {actionType === 'approve' \r\n              ? ' The equipment will be reserved for the requested time slot.'\r\n              : ' The user will be notified that their request was denied.'}\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setConfirmDialog(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            color={actionType === 'approve' ? 'success' : 'error'}\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              if (selectedReservation && actionType) {\r\n                handleStatusUpdate(\r\n                  selectedReservation.id,\r\n                  actionType === 'approve' ? 'approved' : 'denied'\r\n                );\r\n              }\r\n            }}\r\n          >\r\n            {actionType === 'approve' ? 'Approve' : 'Deny' }\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* Lab Confirmation Dialog */}\r\n      <Dialog\r\n        open={labconfirmDialog}\r\n        onClose={() => setLabConfirmDialog(false)}\r\n      >\r\n        <DialogTitle>\r\n        {labActionType === 'approve' ? 'Approve Reservation' : 'Deny Reservation'}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n        <Typography>\r\n            Are you sure you want to {labActionType} this lab reservation?\r\n            {labActionType === 'approve' \r\n              ? ' The lab  will be reserved for the requested time slot.'\r\n              : ' The user will be notified that their request was denied.'}\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setLabConfirmDialog(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            color={labActionType === 'approve' ? 'success' : 'error'}\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              if (selectedLabReservation && labActionType) {\r\n                handleLabStatusUpdate(\r\n                  selectedLabReservation.id,\r\n                  labActionType === 'approve' ? 'approved' : 'denied'\r\n                );\r\n              }\r\n            }}\r\n          >\r\n            {labActionType === 'approve' ? 'Approve' : 'Deny' }\r\n          </Button>\r\n        </DialogActions>\r\n\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n"],"names":["AssessmentIcon","createSvgIcon","_jsx","CancelIcon","CheckCircleIcon","InfoIcon","TimelineIcon","TabPanel","props","children","value","index","other","jsx","Box","ReservationManagement","theme","useTheme","reservations","setReservations","useState","labreservations","setLabReservations","loading","setLoading","error","setError","tabValue","setTabValue","searchQuery","setSearchQuery","statusFilter","setStatusFilter","categoryFilter","setCategoryFilter","dateFilter","setDateFilter","labsearchQuery","setLabSearchQuery","labstatusFilter","setLabStatusFilter","LabdateFilter","setLabDateFilter","showFilters","setShowFilters","showLabFilters","setLabShowFilters","selectedReservation","setSelectedReservation","selectedLabReservation","setSelectedLabReservation","detailsDialog","setDetailsDialog","confirmDialog","setConfirmDialog","detailsLabDialog","setDetailsLabDialog","labconfirmDialog","setLabConfirmDialog","categories","setCategories","actionType","setActionType","labActionType","setLabActionType","equipment","setEquipment","lab","setLab","_users","setUsers","stats","setStats","labStats","setLabStats","analyticsData","setAnalyticsData","analyticsLabData","setAnalyticsLabData","useEffect","checkCompletedReservations","activeReservations","supabase","reservation","endTimeUTC","parseISO","isBefore","fetchData","fetchCategories","fetchLabData","fetchAllUsers","interval","user","managerId","managedLabs","labsError","managedLabIds","managedEquipment","equipmentError","managedEquipmentIds","eq","totalEquipmentUnits","total","equipmentQuantity","reservationsResponse","equipmentResponse","acc","curr","totalReservedUnits","r","reservedQuantity","utilizationRate","prevStats","_","i","date","addDays","format","dayReservations","data","uniqueCategories","item","labreservationsResponse","labResponse","labstats","sendNotificationToUser","userId","createdBy","title","message","type","handleStatusUpdate","reservationId","status","handleLabStatusUpdate","labreservationId","filteredReservations","matchesSearch","matchesStatus","matchesCategory","matchesDate","reservationDate","now","isToday","isTomorrow","isAfter","nextWeek","filteredLabReservations","labreservation","matcheslabSearch","matcheslabStatus","matcheslabDate","labreservationDate","calendarEvents","getEventBackgroundColor","getEventBorderColor","getEventTextColor","getStatusColor","CircularProgress","Alert","jsxs","Paper","Tabs","newValue","Tab","ScienceIcon","EventIcon","Grid","Card","CardContent","Typography","Divider","startDate","LinearProgress","TextField","e","InputAdornment","SearchIcon","Button","FilterListIcon","FormControl","InputLabel","Select","MenuItem","category","List","ListItem","Chip","Fragment","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","info","ResponsiveContainer","LineChart","CartesianGrid","XAxis","YAxis","RechartsTooltip","Line","itemReservations","usagePercentage","a","b","ListItemText","ListItemSecondaryAction","Dialog","DialogTitle","DialogContent","start","diffMs","hours","minutes","DialogActions"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}