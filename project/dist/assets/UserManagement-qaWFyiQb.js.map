{"version":3,"file":"UserManagement-qaWFyiQb.js","sources":["../../src/components/admin/UserManagement.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Paper,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  MenuItem,\n  CircularProgress,\n  Alert,\n  TableContainer,\n} from '@mui/material';\nimport { supabase } from '@/lib/supabase';\nimport { users } from '@/types';\nimport { useAuth } from '@/hooks/useAuth';\n\nexport default function UserManagement() {\n  const [users, setUsers] = useState<users[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [selectedUser, setSelectedUser] = useState<users | null>(null);\n  const [newRole, setNewRole] = useState<string>('');\n  const { user: authUser } = useAuth(); // Get current user from auth context\n  const [openStaffDialog, setOpenStaffDialog] = useState(false);\n    \n  \n    const [formData, setFormData] = useState({\n      email: '',\n      password: '',\n      department: '',\n      role: 'lab_manager' as 'lab_manager' | 'admin',\n    });\n\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  const fetchUsers = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('users')\n        .select('*')\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n      setUsers(data || []);\n    } catch (error: any) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleEditUser = (user: users) => {\n    setSelectedUser(user);\n    setNewRole(user.role);\n    setDialogOpen(true);\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n    if (!selectedUser || !newRole || !authUser) return;\n\n    try {\n      // Check if current user has admin privileges\n      if (authUser.role !== 'admin') {\n        throw new Error('Admin privileges required');\n      }\n\n      const normalizedRole = newRole.toLowerCase();\n\n      const { data, error } = await supabase\n        .from('users')\n        .update({ role: normalizedRole })\n        .eq('id', selectedUser.id)\n        .select()\n        .single();\n\n      if (error) throw error;\n      if (!data) throw new Error('User not found');\n\n      setDialogOpen(false);\n      fetchUsers();\n    } catch (error: any) {\n      setError(`Update failed: ${error.message}`);\n    }\n  };\n  // Handle creating a staff account\n  const handleCreateStaff = async () => {\n    try {\n      // Create auth user\n      const { data: authData, error: authError } = await supabase.auth.signUp({\n        email: formData.email,\n        password: formData.password,\n      });\n\n      if (authError) throw authError;\n      if (!authData.user?.id) throw new Error('No user ID returned');\n\n      // Create user profile with admin/lab_manager role\n      const { error: profileError } = await supabase\n        .from('users')\n        .insert([\n          {\n            id: authData.user.id,\n            email: formData.email,\n            role: formData.role,\n            department: formData.department,\n          },\n        ]);\n\n      if (profileError) throw profileError;\n\n\n\n      setOpenStaffDialog(false);\n\n      // Reset form\n      setFormData({\n        email: '',\n        password: '',\n        department: '',\n        role: 'lab_manager',\n      });\n    } catch (error) {\n      console.error('Error creating staff account:', error);\n      // Handle error (show error message to user)\n    }\n  };\n\n\n  if (loading) return <CircularProgress />;\n  if (error) return <Alert severity=\"error\">{error}</Alert>;\n\n  return (\n    <Box>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 3 }}>\n    <Typography variant=\"h6\" gutterBottom>\n    User Management\n    </Typography>\n             <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => setOpenStaffDialog(true)} // Open staff dialog\n               >\n                Create Staff Account\n             </Button>\n    </Box>\n    \n    {/* User Table */}\n    <TableContainer component={Paper}>\n    <Table>\n    <TableHead>\n    <TableRow>\n    <TableCell>Email</TableCell>\n    <TableCell>Department</TableCell>\n    <TableCell>Role</TableCell>\n    <TableCell>Actions</TableCell>\n    </TableRow>\n    </TableHead>\n    <TableBody>\n    {users.map((user) => (\n    <TableRow key={user.id}>\n    <TableCell>{user.email}</TableCell>\n    <TableCell>{user.department}</TableCell>\n    <TableCell>{user.role}</TableCell>\n    <TableCell>\n    <Button size=\"small\" onClick={() => handleEditUser(user)}>\n    Edit Role\n    </Button>\n    </TableCell>\n    </TableRow>\n    ))}\n    </TableBody>\n    </Table>\n    </TableContainer>\n    \n    {/* Edit Role Dialog */}\n    <Dialog open={dialogOpen} onClose={() => setDialogOpen(false)}>\n    <DialogTitle>Edit User Role</DialogTitle>\n    <DialogContent>\n    <form onSubmit={handleSubmit}>\n    <TextField\n    margin=\"dense\"\n    label=\"Role\"\n    select\n    fullWidth\n    required\n    value={newRole}\n    onChange={(e) => setNewRole(e.target.value)}\n    >\n    <MenuItem value=\"student\">Student</MenuItem>\n    <MenuItem value=\"lab_manager\">Lab Manager</MenuItem>\n    <MenuItem value=\"admin\">Admin</MenuItem>\n    </TextField>\n    </form>\n    </DialogContent>\n    <DialogActions>\n    <Button onClick={() => setDialogOpen(false)}>Cancel</Button>\n    <Button type=\"submit\" onClick={handleSubmit} color=\"primary\">\n    Update\n    </Button>\n    </DialogActions>\n    </Dialog>\n    {/* Create Staff Account Dialog */}\n    <Dialog open={openStaffDialog} onClose={() => setOpenStaffDialog(false)}>\n        <DialogTitle>Create Staff Account</DialogTitle>\n        <DialogContent>\n          <TextField\n            margin=\"dense\"\n            label=\"Email\"\n            type=\"email\"\n            fullWidth\n            required\n            value={formData.email}\n            onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n          />\n          <TextField\n            margin=\"dense\"\n            label=\"Password\"\n            type=\"password\"\n            fullWidth\n            required\n            value={formData.password}\n            onChange={(e) => setFormData({ ...formData, password: e.target.value })}\n          />\n          <TextField\n            margin=\"dense\"\n            label=\"Department\"\n            fullWidth\n            required\n            value={formData.department}\n            onChange={(e) => setFormData({ ...formData, department: e.target.value })}\n          />\n          <TextField\n            margin=\"dense\"\n            label=\"Role\"\n            select\n            fullWidth\n            required\n            value={formData.role}\n            onChange={(e) => setFormData({ ...formData, role: e.target.value as 'lab_manager' | 'admin' })}\n          >\n            <MenuItem value=\"lab_manager\">Lab Manager</MenuItem>\n            <MenuItem value=\"admin\">Admin</MenuItem>\n          </TextField>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setOpenStaffDialog(false)}>Cancel</Button>\n          <Button onClick={handleCreateStaff} color=\"primary\">\n            Create Account\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n    );\n    }"],"names":["UserManagement","users","setUsers","useState","loading","setLoading","error","setError","dialogOpen","setDialogOpen","selectedUser","setSelectedUser","newRole","setNewRole","authUser","useAuth","openStaffDialog","setOpenStaffDialog","formData","setFormData","useEffect","fetchUsers","data","supabase","handleEditUser","user","handleSubmit","event","normalizedRole","handleCreateStaff","authData","authError","profileError","jsx","CircularProgress","Alert","Box","jsxs","Typography","Button","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","Dialog","DialogTitle","DialogContent","TextField","e","MenuItem","DialogActions"],"mappings":"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"}