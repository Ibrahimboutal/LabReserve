import{u as De,r as p,s as c,j as e,B as C,C as Ae,A as Te,T as I,b as ae,P as ie,c as B,d as R,e as w,f as l,g as O,y as N,Q as $,af as oe,a as le,D as Pe,h as Ue,i as Le,l as ke,z as Ce}from"./index-z-43rxTh.js";import{T as de,d as Ie}from"./History-C3UuzGCI.js";import{T as ce}from"./TablePagination-DEp9dKUa.js";import"./LastPage-9l3JZRRp.js";function $e(){const{user:j}=De(),[A,q]=p.useState([]),[ue,M]=p.useState([]),[ge,z]=p.useState(!0),[F,H]=p.useState(null),[fe,W]=p.useState(!1),[pe,me]=p.useState(""),[he,T]=p.useState(!1),[v,P]=p.useState([]),[y,U]=p.useState([]),[Q,L]=p.useState([]),[V,G]=p.useState(0),[J,be]=p.useState(5),[K,X]=p.useState(0),[Y,_e]=p.useState(5);p.useEffect(()=>{Z(),xe()},[]);const Z=async()=>{try{z(!0);const{data:{user:n}}=await c.auth.getUser();if(!n)throw new Error("User not authenticated");const s=n.id,{data:i,error:u}=await c.from("lab").select("id").eq("manager_id",s);if(u)throw u;const m=i.map(o=>o.id),{data:b,error:r}=await c.from("equipment").select("id").in("lab_id",m).eq("status","operational");if(r)throw r;const a=b.map(o=>o.id),[t,f,g,S,E]=await Promise.all([c.from("auto_approval_settings").select("*").order("created_at",{ascending:!1}),c.from("auto_approval_logs").select("*").order("created_at",{ascending:!1}),c.from("equipment").select("id, name, lab_id").in("id",a),c.from("lab").select("id, name").eq("manager_id",s),c.from("users").select("id, email, role")]);if(t.error)throw t.error;if(f.error)throw f.error;if(g.error)throw g.error;if(S.error)throw S.error;if(E.error)throw E.error;const D=f.data.map(o=>{const d=t.data.find(_=>_.id===o.setting_id);let h="Unknown Target";if(d){if(d.target_type==="system")h="System";else if(d.target_type==="lab"){const _=S.data.find(k=>k.id===d.target_id);h=_?_.name:"Unknown Lab"}else if(d.target_type==="equipment"){const _=g.data.find(k=>k.id===d.target_id);h=_?_.name:"Unknown Equipment"}}const x=E.data.find(_=>_.id===o.performed_by),qe=x?x.email:"Unknown User",ve=x?x.role:"Unknown User";return{...o,target_name:h,performed_by_email:qe,performed_by_role:ve}});q(t.data),M(D),P(g.data),U(S.data),L(E.data)}catch(n){H(n.message)}finally{z(!1)}},ee=n=>{const s=["id","target_type","enabled","created_by","last_modified_by","created_at","updated_at"];for(const i of s)if(!(i in n))throw new Error(`Missing required field '${i}' in AutoApprovalSetting`);return n},xe=()=>{const n=(r,a)=>r.some(t=>t.id===a.id)?r.map(t=>t.id===a.id?a:t):[a,...r],s=c.channel("auto-approval-settings-changes").on("postgres_changes",{event:"*",schema:"public",table:"auto_approval_settings"},r=>{q(a=>{if(r.eventType==="INSERT")try{const t=ee(r.new);return n(a,t)}catch(t){return console.error("Invalid payload:",t),a}else if(r.eventType==="UPDATE")try{const t=ee(r.new);return a.map(f=>f.id===r.old.id?t:f)}catch(t){return console.error("Invalid payload:",t),a}else if(r.eventType==="DELETE")return a.filter(t=>t.id!==r.old.id);return a})}).subscribe(),i=c.channel("auto-approval-logs-changes").on("postgres_changes",{event:"INSERT",schema:"public",table:"auto_approval_logs"},async r=>{console.log("New log entry received:",r);try{const a=r.new;let t=A.find(o=>o.id===a.setting_id);if(!t){console.warn("Setting not found locally, fetching from database...");const{data:o,error:d}=await c.from("auto_approval_settings").select("*").eq("id",a.setting_id).single();if(d){console.error("Error fetching setting:",d);return}t=o,q(h=>n(h,o))}let f="Unknown Target";if(t){if(t.target_type==="system")f="System";else if(t.target_type==="lab"){let o=y.find(d=>d.id===t.target_id);if(!o){console.warn("Lab not found locally, fetching from database...");const{data:d,error:h}=await c.from("lab").select("*").eq("id",t.target_id).single();h?console.error("Error fetching lab:",h):(o=d,U(x=>n(x,d)))}f=o?o.name:"Unknown Lab"}else if(t.target_type==="equipment"){let o=v.find(d=>d.id===t.target_id);if(!o){console.warn("Equipment not found locally, fetching from database...");const{data:d,error:h}=await c.from("equipment").select("*").eq("id",t.target_id).single();h?console.error("Error fetching equipment:",h):(o=d,P(x=>n(x,d)))}f=o?o.name:"Unknown Equipment"}}let g=Q.find(o=>o.id===a.performed_by);if(!g){console.warn("User not found locally, fetching from database...");const{data:o,error:d}=await c.from("users").select("*").eq("id",a.performed_by).single();d?console.error("Error fetching user:",d):(g=o,L(h=>n(h,o)))}const S=g?g.email:"Unknown User",E=g?g.role:"Unknown Role",D={...a,target_name:f,performed_by_email:S,performed_by_role:E};console.log("Enriched log:",D),M(o=>[D,...o])}catch(a){console.error("Error enriching log:",a)}}).subscribe(),u=c.channel("users-changes").on("postgres_changes",{event:"*",schema:"public",table:"users"},r=>{L(a=>r.eventType==="INSERT"?n(a,r.new):r.eventType==="UPDATE"?a.map(t=>t.id===r.old.id?r.new:t):r.eventType==="DELETE"?a.filter(t=>t.id!==r.old.id):a)}).subscribe(),m=c.channel("labs-changes").on("postgres_changes",{event:"*",schema:"public",table:"lab"},r=>{U(a=>r.eventType==="INSERT"?n(a,r.new):r.eventType==="UPDATE"?a.map(t=>t.id===r.old.id?r.new:t):r.eventType==="DELETE"?a.filter(t=>t.id!==r.old.id):a)}).subscribe(),b=c.channel("equipment-changes").on("postgres_changes",{event:"*",schema:"public",table:"equipment"},r=>{P(a=>r.eventType==="INSERT"?n(a,r.new):r.eventType==="UPDATE"?a.map(t=>t.id===r.old.id?r.new:t):r.eventType==="DELETE"?a.filter(t=>t.id!==r.old.id):a)}).subscribe();return()=>{s.unsubscribe(),i.unsubscribe(),u.unsubscribe(),m.unsubscribe(),b.unsubscribe()}},we=async(n,s,i,u)=>{try{const{error:m}=await c.from("notifications").insert(Q.map(b=>({id:crypto.randomUUID(),user_id:b.id,created_by:n,title:s,message:i,type:u,read:!1,created_at:new Date().toISOString()})));if(m)throw m}catch(m){console.error("Error sending notifications:",m.message)}},te=async(n,s,i)=>{if(!j){console.error("User is not authenticated");return}try{const u=A.find(t=>t.target_type===n&&t.target_id===s);let m=u?.id;if(q(t=>t.find(g=>g.target_type===n&&g.target_id===s)?t.map(g=>g.target_type===n&&g.target_id===s?{...g,enabled:!i,updated_at:new Date().toISOString()}:g):[{id:crypto.randomUUID(),target_type:n,target_id:s||"",enabled:!i,created_by:j.id,last_modified_by:j.id,created_at:new Date().toISOString(),updated_at:new Date().toISOString()},...t]),u){const{error:t}=await c.from("auto_approval_settings").update({enabled:!i,last_modified_by:j.id,updated_at:new Date().toISOString()}).eq("id",u.id);if(t)throw t}else{const{data:t,error:f}=await c.from("auto_approval_settings").insert([{target_type:n,target_id:s||"",enabled:!i,created_by:j.id,last_modified_by:j.id,created_at:new Date().toISOString(),updated_at:new Date().toISOString()}]).select();if(f)throw f;m=t?.[0]?.id}if(m){const{error:t}=await c.from("auto_approval_logs").insert([{setting_id:m,action:i?"disabled":"enabled",performed_by:j.id}]);if(t)throw t}let b="",r="";const a="System";if(n==="lab"){const t=y.find(f=>f.id===s);b=i?`Auto-Approval Deactivated for Lab: ${t?.name||"Unknown Lab"}`:`Auto-Approval Activated for Lab: ${t?.name||"Unknown Lab"}`,r=i?"Auto-approval for equipment in this lab has been disabled.":"All equipment in this lab is now auto-approved for reservations."}else if(n==="equipment"){const t=v.find(f=>f.id===s);b=i?`Auto-Approval Deactivated for Equipment: ${t?.name||"Unknown Equipment"}`:`Auto-Approval Activated for Equipment: ${t?.name||"Unknown Equipment"}`,r=i?"Auto-approval for this equipment has been disabled.":"This equipment is now auto-approved for reservations."}await we(a,b,r,"info"),me(`Auto-approval ${i?"disabled":"enabled"} successfully`),W(!0)}catch(u){console.error("Error toggling auto-approval:",u.message),H(u.message),Z()}},ne=(n,s)=>A.filter(u=>u.target_type===n&&u.target_id===(s||null)).sort((u,m)=>new Date(m.created_at).getTime()-new Date(u.created_at).getTime())[0]?.enabled||!1,je=(n,s)=>{G(s)},Se=n=>{be(parseInt(n.target.value,10)),G(0)},Ee=(n,s)=>{X(s)},ye=n=>{_e(parseInt(n.target.value,10)),X(0)},re=(n,s,i)=>n.slice(s*i,s*i+i),se=(n,s,i)=>n.slice(s*i,s*i+i);return ge?e.jsx(C,{sx:{display:"flex",justifyContent:"center",p:3},children:e.jsx(Ae,{})}):F?e.jsx(Te,{severity:"error",sx:{m:2},children:F}):e.jsxs(C,{sx:{p:3},children:[e.jsx(I,{variant:"h5",gutterBottom:!0,children:"Auto-Approval Settings"}),e.jsx(I,{variant:"h6",gutterBottom:!0,sx:{mt:4},children:"Laboratory Settings"}),e.jsx(ae,{component:ie,children:e.jsxs(B,{children:[e.jsx(R,{children:e.jsxs(w,{children:[e.jsx(l,{children:"Laboratory"}),e.jsx(l,{children:"Auto-Approval Status"}),e.jsx(l,{children:"Last Modified"}),e.jsx(l,{children:"Actions"})]})}),e.jsx(O,{children:se.length>0&&se(y,V,J).map(n=>{const s=ne("lab",n.id);return e.jsxs(w,{children:[e.jsx(l,{children:n.name}),e.jsx(l,{children:e.jsx(N,{label:s?"Enabled":"Disabled",color:s?"success":"default",size:"small"})}),e.jsx(l,{children:$(new Date,"PPp")}),e.jsx(l,{children:e.jsx(oe,{checked:s,onChange:()=>te("lab",n.id,s)})})]},n.id)})}),e.jsx(de,{children:e.jsx(w,{children:e.jsx(ce,{rowsPerPageOptions:[10,20,30],colSpan:4,count:y.length,rowsPerPage:J,page:V,onPageChange:je,onRowsPerPageChange:Se})})})]})}),e.jsx(I,{variant:"h6",gutterBottom:!0,sx:{mt:4},children:"Equipment Settings"}),e.jsx(ae,{component:ie,children:e.jsxs(B,{children:[e.jsx(R,{children:e.jsxs(w,{children:[e.jsx(l,{children:"Equipment"}),e.jsx(l,{children:"Laboratory"}),e.jsx(l,{children:"Auto-Approval Status"}),e.jsx(l,{children:"Last Modified"}),e.jsx(l,{children:"Actions"})]})}),e.jsx(O,{children:re.length>0&&re(v,K,Y).map(n=>{const s=ne("equipment",n.id),i=y.find(u=>u.id===n.lab_id);return e.jsxs(w,{children:[e.jsx(l,{children:n.name}),e.jsx(l,{children:i?.name||"Unknown"}),e.jsx(l,{children:e.jsx(N,{label:s?"Enabled":"Disabled",color:s?"success":"default",size:"small"})}),e.jsx(l,{children:$(new Date,"PPp")}),e.jsx(l,{children:e.jsx(oe,{checked:s,onChange:()=>te("equipment",n.id,s)})})]},n.id)})}),e.jsx(de,{children:e.jsx(w,{children:e.jsx(ce,{rowsPerPageOptions:[5,10,25],colSpan:5,count:v.length,rowsPerPage:Y,page:K,onPageChange:Ee,onRowsPerPageChange:ye})})})]})}),e.jsx(C,{sx:{mt:3,display:"flex",justifyContent:"flex-end"},children:e.jsx(le,{startIcon:e.jsx(Ie,{}),onClick:()=>T(!0),children:"View Audit Logs"})}),e.jsxs(Pe,{open:he,onClose:()=>T(!1),maxWidth:"md",fullWidth:!0,children:[e.jsx(Ue,{children:"Auto-Approval Audit Logs"}),e.jsx(Le,{children:e.jsxs(B,{children:[e.jsx(R,{children:e.jsxs(w,{children:[e.jsx(l,{children:"Date"}),e.jsx(l,{children:"Action"}),e.jsx(l,{children:"Target"}),e.jsx(l,{children:"Performed By"})]})}),e.jsx(O,{children:ue.map(n=>e.jsxs(w,{children:[e.jsx(l,{children:$(new Date(n.created_at),"PPp")}),e.jsx(l,{children:e.jsx(N,{label:n.action,color:n.action==="enabled"?"success":"default",size:"small"})}),e.jsx(l,{children:n.target_name}),e.jsxs(l,{children:[n.performed_by_email,"(",n.performed_by_role,")"]})]},n.id))})]})}),e.jsx(ke,{children:e.jsx(le,{onClick:()=>T(!1),children:"Close"})})]}),e.jsx(Ce,{open:fe,autoHideDuration:6e3,onClose:()=>W(!1),message:pe})]})}export{$e as default};
//# sourceMappingURL=AutoApprovalSettings-DFBe4Mc9.js.map
