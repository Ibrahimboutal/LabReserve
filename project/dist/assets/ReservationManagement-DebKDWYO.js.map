{"version":3,"file":"ReservationManagement-DebKDWYO.js","sources":["../../node_modules/date-fns/endOfDay.mjs","../../src/components/admin/ReservationManagement.tsx"],"sourcesContent":["import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The end of a day\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\nexport function endOfDay(date) {\n  const _date = toDate(date);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfDay;\n","import { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n  CircularProgress,\r\n  Alert,\r\n  TextField,\r\n  InputAdornment,\r\n  IconButton,\r\n  Chip,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Tooltip,\r\n  Pagination,\r\n  Tabs,\r\n  Tab,\r\n  Grid,\r\n  Divider,\r\n  Card,\r\n  CardContent,\r\n  List\r\n} from '@mui/material';\r\nimport { format, parseISO, isToday, isTomorrow, isAfter, isBefore, addDays, endOfDay, startOfDay } from 'date-fns';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport EventIcon from '@mui/icons-material/Event';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport { supabase } from '@/lib/supabase';\r\nimport { Reservation } from '@/types';\r\nimport { lab_reservations } from '@/types';\r\n\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: number;\r\n  value: number;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`reservation-tabpanel-${index}`}\r\n      aria-labelledby={`reservation-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box sx={{ pt: 3 }}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function ReservationManagement() {\r\n  const [reservations, setReservations] = useState<Reservation[]>([]);\r\n  const [filteredReservations, setFilteredReservations] = useState<Reservation[]>([]);\r\n  const [labreservation, setLabReservation] = useState<lab_reservations[]>([]);\r\n  const [filteredLabReservations, setFilteredLabReservations] = useState<lab_reservations[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [labsearchQuery, setlabSearchQuery] = useState('');\r\n  const [statusFilter, setStatusFilter] = useState<string>('');\r\n  const [labstatusFilter, setlabStatusFilter] = useState<string>('');\r\n  const [dateFilter, setDateFilter] = useState<string>('');\r\n  const [labdateFilter, setlabDateFilter] = useState<string>('');\r\n  const [labFilter, setLabFilter] = useState<string>('');\r\n  const [showFilters, setShowFilters] = useState(false);\r\n  const [showlabFilters, setlabShowFilters] = useState(false);\r\n  const [detailsDialog, setDetailsDialog] = useState(false);\r\n  const [labdetailsDialog, setLabDetailsDialog] = useState(false);\r\n  const [selectedReservation, setSelectedReservation] = useState<any>(null);\r\n  const [selectedlabReservation, setSelectedlabReservation] = useState<any>(null);\r\n  const [confirmDialog, setConfirmDialog] = useState(false);\r\n  const [labconfirmDialog, setLabConfirmDialog] = useState(false);\r\n  const [actionType, setActionType] = useState<'approve' | 'deny' | null>(null);\r\n  const [labactionType, setLabActionType] = useState<'approve' | 'deny' | null>(null);\r\n  const [page, setPage] = useState(1);\r\n  const [labPage, setLabPage] = useState(1);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [labs, setLabs] = useState<any[]>([]);\r\n  const [actionLoading, setActionLoading] = useState(false);\r\n  const [labactionLoading, setLabActionLoading] = useState(false);\r\n  const [_users, setUsers] = useState<any[]>([]);\r\n  const rowsPerPage = 10; // Number of rows per page\r\n\r\n  useEffect(() => {\r\n    fetchReservations();\r\n    fetchLabReservation();\r\n    fetchLabs();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    applyFilters();\r\n    applyLabFilters();\r\n    fetchAllUsers();\r\n\r\n  }, [labreservation, reservations, searchQuery, statusFilter, dateFilter, labFilter, labdateFilter, labstatusFilter, labsearchQuery]);\r\n\r\n  const fetchReservations = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const { data, error } = await supabase\r\n        .from('reservations')\r\n        .select(`\r\n          *,\r\n          equipment (\r\n            id,\r\n            name,\r\n            category,\r\n            status,\r\n            lab_id,\r\n            manufacturer,\r\n            model,\r\n            image_url\r\n          ),\r\n          users (\r\n            id,\r\n            email,\r\n            department,\r\n            role\r\n          )\r\n        `)\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (error) throw error;\r\n      setReservations(data);\r\n      setFilteredReservations(data);\r\n    } catch (error: any) {\r\n      setError(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  const fetchLabReservation = async () => {\r\n    try {\r\n      const { data: labReservations, error: labError } = await supabase\r\n        .from('lab_reservations')\r\n        .select(`*,\r\n          lab (\r\n            id,\r\n            name,\r\n            location,\r\n            status,\r\n            image_url\r\n            ),\r\n          users (\r\n            id,\r\n            email,\r\n            department,\r\n            role\r\n          ) `)\r\n        .order('created_at', { ascending: false });\r\n        \r\n  \r\n      if (labError) throw labError;\r\n  \r\n      // Fetch related labs\r\n      const labIds = labReservations.map((lr) => lr.lab_id);\r\n      const { data: labs, error: labFetchError } = await supabase\r\n        .from('lab')\r\n        .select('*')\r\n        .in('id', labIds);\r\n  \r\n      if (labFetchError) throw labFetchError;\r\n  \r\n      // Fetch related users\r\n      const userIds = labReservations.map((lr) => lr.user_id);\r\n      const { data: users, error: userFetchError } = await supabase\r\n        .from('users')\r\n        .select('*')\r\n        .in('id', userIds);\r\n  \r\n      if (userFetchError) throw userFetchError;\r\n  \r\n      // Combine data\r\n      const enrichedReservations = labReservations.map((lr) => ({\r\n        ...lr,\r\n        lab: labs.find((l) => l.id === lr.lab_id),\r\n        user: users.find((u) => u.id === lr.user_id),\r\n      }));\r\n  \r\n      setLabReservation(enrichedReservations);\r\n      setFilteredLabReservations(enrichedReservations);\r\n    } catch (error: any) {\r\n      setError(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  const fetchLabs = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('lab')\r\n        .select('*')\r\n        .order('name');\r\n\r\n      if (error) throw error;\r\n      setLabs(data);\r\n    } catch (error: any) {\r\n      console.error('Error fetching labs:', error);\r\n    }\r\n  };\r\n  const fetchAllUsers = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('users')\r\n        .select('*')\r\n        .order('created_at', { ascending: false });\r\n      if (error) throw error;\r\n      setUsers(data || []);\r\n    } catch (error: any) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const sendNotificationToUser = async (\r\n      userId: string,\r\n      createdBy: string,\r\n      title: string,\r\n      message: string,\r\n      type: string\r\n    ) => {\r\n      try {\r\n        const { error } = await supabase.from('notifications').insert([\r\n          {\r\n            id: crypto.randomUUID(),\r\n            user_id: userId, // Send to the specific user\r\n            created_by: createdBy,\r\n            title,\r\n            message,\r\n            type,\r\n            read: false,\r\n            created_at: new Date().toISOString(),\r\n          },\r\n        ]);\r\n        if (error) {\r\n          throw error;\r\n        }\r\n      } catch (error: any) {\r\n        console.error('Error sending notification to user:', error.message);\r\n      }\r\n    };\r\n  \r\n\r\n  const applyFilters = () => {\r\n    let filtered = [...reservations];\r\n\r\n    // Apply search filter\r\n    if (searchQuery) {\r\n      const query = searchQuery.toLowerCase();\r\n      filtered = filtered.filter(\r\n        (reservation: any) =>\r\n          reservation.equipment?.name.toLowerCase().includes(query) ||\r\n          reservation.users?.email.toLowerCase().includes(query) ||\r\n          reservation.purpose?.toLowerCase().includes(query) ||\r\n          reservation.equipment?.category.toLowerCase().includes(query)||\r\n          reservation.quantity.toString().includes(query)\r\n      );\r\n    }\r\n\r\n    // Apply status filter\r\n    if (statusFilter) {\r\n      filtered = filtered.filter((reservation) => reservation.status === statusFilter);\r\n    }\r\n\r\n    // Apply lab filter\r\n    if (labFilter) {\r\n      filtered = filtered.filter((reservation) => reservation.equipment_id === labFilter);\r\n    }\r\n\r\n    // Apply date filter\r\n    if (dateFilter) {\r\n      const today = new Date();\r\n      today.setHours(0, 0, 0, 0);\r\n      const tomorrow = new Date(today);\r\n      tomorrow.setDate(tomorrow.getDate() + 1);\r\n      \r\n      switch (dateFilter) {\r\n        case 'today':\r\n          filtered = filtered.filter((reservation) => {\r\n            const startDate = parseISO(reservation.start_time);\r\n            return isToday(startDate);\r\n          });\r\n          break;\r\n        case 'tomorrow':\r\n          filtered = filtered.filter((reservation) => {\r\n            const startDate = parseISO(reservation.start_time);\r\n            return isTomorrow(startDate);\r\n          });\r\n          break;\r\n        case 'upcoming':\r\n          filtered = filtered.filter((reservation) => {\r\n            const startDate = parseISO(reservation.start_time);\r\n            return isAfter(startDate, today);\r\n          });\r\n          break;\r\n        case 'past':\r\n          filtered = filtered.filter((reservation) => {\r\n            const endDate = parseISO(reservation.end_time);\r\n            return isBefore(endDate, today);\r\n          });\r\n          break;\r\n        case 'thisWeek':\r\n          const nextWeek = addDays(today, 7);\r\n          filtered = filtered.filter((reservation) => {\r\n            const startDate = parseISO(reservation.start_time);\r\n            return isAfter(startDate, today) && isBefore(startDate, nextWeek);\r\n          });\r\n          break;\r\n      }\r\n      \r\n    }\r\n    \r\n\r\n    setFilteredReservations(filtered);\r\n    setPage(1); // Reset to first page when filters change\r\n  };\r\n  const applyLabFilters = () => {\r\n    let flabiltered = [...labreservation];\r\n\r\n    // Apply search filter\r\n    if (labsearchQuery) {\r\n      const query = labsearchQuery.toLowerCase();\r\n      flabiltered = flabiltered.filter(\r\n        (labreservation: any) =>\r\n            labreservation.lab?.name.toLowerCase().includes(query) ||\r\n            labreservation.users?.email.toLowerCase().includes(query) ||\r\n            labreservation.purpose?.toLowerCase().includes(query) ||\r\n            labreservation.attendees?.toString().includes(query)\r\n      );\r\n    }\r\n\r\n    // Apply status filter\r\n    if (labstatusFilter) {\r\n      flabiltered = flabiltered.filter((labreservation) => labreservation.status === labstatusFilter);\r\n    }\r\n\r\n    \r\n\r\n    // Apply date filter\r\n    if (labdateFilter) {\r\n      const today = new Date();\r\n      today.setHours(0, 0, 0, 0);\r\n      const tomorrow = new Date(today);\r\n      tomorrow.setDate(tomorrow.getDate() + 1);\r\n      \r\n      switch (labdateFilter) {\r\n        case 'today':\r\n          flabiltered = flabiltered.filter((labreservation) => {\r\n            const startDate = parseISO(labreservation.start_time);\r\n            return isToday(startDate);\r\n          });\r\n          break;\r\n        case 'tomorrow':\r\n          flabiltered = flabiltered.filter((labreservation) => {\r\n            const startDate = parseISO(labreservation.start_time);\r\n            return isTomorrow(startDate);\r\n          });\r\n          break;\r\n        case 'upcoming':\r\n          flabiltered = flabiltered.filter((labreservation) => {\r\n            const startDate = parseISO(labreservation.start_time);\r\n            return isAfter(startDate, today);\r\n          });\r\n          break;\r\n        case 'past':\r\n          flabiltered = flabiltered.filter((labreservation) => {\r\n            const endDate = parseISO(labreservation.end_time);\r\n            return isBefore(endDate, today);\r\n          });\r\n          break;\r\n        case 'thisWeek':\r\n          const nextWeek = addDays(today, 7);\r\n          flabiltered = flabiltered.filter((labreservation) => {\r\n            const startDate = parseISO(labreservation.start_time);\r\n            return isAfter(startDate, today) && isBefore(startDate, nextWeek);\r\n          });\r\n          break;\r\n      }\r\n      \r\n    }\r\n    \r\n\r\n    setFilteredLabReservations(flabiltered);\r\n    setLabPage(1); // Reset to first page when filters change\r\n  };\r\n  const handleStatusUpdate = async (reservationId: string, status: 'approved' | 'denied') => {\r\n    try {\r\n      setActionLoading(true);\r\n      \r\n      const { error } = await supabase\r\n        .from('reservations')\r\n        .update({ \r\n        status, \r\n        updated_at: new Date().toISOString() // Add the current timestamp\r\n      })\r\n        .eq('id', reservationId);\r\n\r\n      if (error) throw error;\r\n      \r\n      // Update local state\r\n      setReservations(prevReservations => \r\n        prevReservations.map(reservation => \r\n          reservation.id === reservationId \r\n          ? { ...reservation, status, updated_at: new Date().toISOString() } // Update local state with new timestamp\r\n\r\n            : reservation\r\n        )\r\n      );\r\n      \r\n      setConfirmDialog(false);\r\n      setDetailsDialog(false);\r\n      setActionType(null);\r\n\r\n      // send notification to user  \r\n      await sendNotificationToUser(\r\n        selectedReservation.user_id,\r\n        'System', // Assuming the system is the one sending the notification\r\n        `Reservation ${status}`,\r\n        `Your reservation for ${selectedReservation.equipment.name} has been ${status}.`,\r\n        'reservation'\r\n      );\r\n    } catch (error: any) {\r\n      console.error('Error updating reservation:', error);\r\n      setError(error.message);\r\n    } finally {\r\n      setActionLoading(false);\r\n    }\r\n  };\r\n  const handleLabStatusUpdate = async (labreservationId: string, status: 'approved' | 'denied') => {\r\n    try {\r\n      setLabActionLoading(true);\r\n      const { error } = await supabase\r\n        .from('lab_reservations')\r\n        .update({ status })\r\n        .eq('id', labreservationId);\r\n      if (error) throw error;\r\n  \r\n      // Update local state\r\n      setLabReservation(prevLabReservations =>\r\n        prevLabReservations.map(labreservation =>\r\n          labreservation.id === labreservationId\r\n            ? { ...labreservation, status }\r\n            : labreservation\r\n        )\r\n      );\r\n      setLabConfirmDialog(false);\r\n      setLabDetailsDialog(false);\r\n      setLabActionType(null);\r\n      // send notification to user\r\n      await sendNotificationToUser(\r\n        selectedlabReservation.user_id,\r\n        'System',\r\n        `Lab Reservation ${status}`,\r\n        `Your lab reservation for ${selectedlabReservation.lab.name} has been ${status}.`,\r\n        'lab_reservation'\r\n      );\r\n    } catch (error: any) {\r\n      console.error('Error updating lab reservation:', error);\r\n      setError(error.message);\r\n    } finally {\r\n      setLabActionLoading(false);\r\n    }\r\n  };\r\n  const handleViewDetails = (reservation: any) => {\r\n    setSelectedReservation(reservation);\r\n    setDetailsDialog(true);\r\n  };\r\n  const handleViewlabDetails = (labreservation: any) => {\r\n    setSelectedlabReservation(labreservation);\r\n    setLabDetailsDialog(true);\r\n  };\r\n  const handleConfirmAction = (reservation: any, action: 'approve' | 'deny') => {\r\n    setSelectedReservation(reservation);\r\n    setActionType(action);\r\n    setConfirmDialog(true);\r\n  };\r\n  const handleLabConfirmAction = (labreservation: any, action: 'approve' | 'deny') => {\r\n    setSelectedlabReservation(labreservation);\r\n    setLabActionType(action);\r\n    setLabConfirmDialog(true);\r\n  };\r\n  const getStatusChip = (status: string) => {\r\n    let color: 'default' | 'primary' | 'secondary' | 'error' | 'info' | 'success' | 'warning' = 'default';\r\n    \r\n    switch (status) {\r\n      case 'pending':\r\n        color = 'warning';\r\n        break;\r\n      case 'approved':\r\n        color = 'success';\r\n        break;\r\n      case 'denied':\r\n        color = 'error';\r\n        break;\r\n      case 'cancelled':\r\n        color = 'default';\r\n        break;\r\n      case 'completed':\r\n        color = 'info';\r\n        break;\r\n      default:\r\n    }\r\n    \r\n    return <Chip label={status} color={color} size=\"small\" />;\r\n  };\r\n  const handleChangePage = (_: React.ChangeEvent<unknown>, value: number) => {\r\n    setPage(value);\r\n  };\r\n  const handleChangeLabPage = (_: React.ChangeEvent<unknown>, value: number) => {\r\n    setLabPage(value);\r\n  }\r\n  const handleTabChange = (_: React.SyntheticEvent, newValue: number) => {\r\n    setTabValue(newValue);\r\n  };\r\n  const calendarEvents = [\r\n    ...filteredReservations.map((reservation: any) => ({\r\n      id: reservation.id,\r\n      title: `${reservation.equipment?.name} (${reservation.users?.email.split('@')[0]})`,\r\n      start: reservation.start_time,\r\n      end: reservation.end_time,\r\n      extendedProps: {\r\n        type: 'equipment',\r\n        status: reservation.status,\r\n        equipment: reservation.equipment,\r\n        user: reservation.users,\r\n        purpose: reservation.purpose,\r\n      },\r\n      backgroundColor: reservation.status === 'approved' \r\n        ?'#4caf50'\r\n        : reservation.status === 'pending'\r\n        ? '#ff9800'\r\n        : reservation.status === 'denied'\r\n        ? '#e53935'\r\n        : reservation.status === 'cancelled'\r\n        ? '#9e9e9e'\r\n        : reservation.status === 'completed'\r\n        ? '#1e88e5'\r\n        : '#ff9800',\r\n      borderColor: reservation.status === 'approved' \r\n        ?'#4caf50'\r\n        : reservation.status === 'pending'\r\n        ? '#ff9800'\r\n        : reservation.status === 'denied'\r\n        ? '#e53935'\r\n        : reservation.status === 'cancelled'\r\n        ? '#9e9e9e'\r\n        : reservation.status === 'completed'\r\n        ? '#1e88e5'\r\n        : '#ff9800',\r\n\r\n\r\n\r\n    })),\r\n    ...filteredLabReservations.map((labreservation: any) => ({\r\n      id: labreservation.id,\r\n      title: `${labreservation.lab?.name} (${labreservation.user?.email.split('@')[0]})`,\r\n      start: labreservation.start_time,\r\n      end: labreservation.end_time,\r\n      extendedProps: {\r\n        type: 'lab',\r\n        status: labreservation.status,\r\n        lab: labreservation.lab,\r\n        user: labreservation.user,\r\n        purpose: labreservation.purpose,\r\n      },\r\n      backgroundColor: labreservation.status === 'approved'\r\n        ? '#4caf50'\r\n        : labreservation.status === 'pending'\r\n        ? '#ff9800'\r\n        : labreservation.status === 'denied'\r\n        ? '#e53935'\r\n        : labreservation.status === 'cancelled'\r\n        ? '#9e9e9e'\r\n        : labreservation.status === 'completed'\r\n        ? '#1e88e5'\r\n        : '#ff9800',\r\n\r\n      borderColor: labreservation.status === 'approved' \r\n       ?'#2e7d32'\r\n        : labreservation.status === 'pending'\r\n        ? '#e65100'\r\n        : labreservation.status === 'denied'\r\n        ? '#c62828'\r\n        : labreservation.status === 'cancelled'\r\n        ? '#616161'\r\n        : labreservation.status === 'completed'\r\n        ? '#1976d2'\r\n        : '#e65100',\r\n      \r\n\r\n    })),\r\n  ];\r\n  const handleEventClick = (info: any) => {\r\n    const { extendedProps } = info.event;\r\n    if (extendedProps.type === 'equipment') {\r\n      const reservation = reservations.find((r: any) => r.id === info.event.id);\r\n      if (reservation) {\r\n        setSelectedReservation(reservation);\r\n        setDetailsDialog(true);\r\n      }\r\n    } else if (extendedProps.type === 'lab') {\r\n      const labReservation = labreservation.find((lr: any) => lr.id === info.event.id);\r\n      if (labReservation) {\r\n        setSelectedlabReservation(labReservation);\r\n        setLabDetailsDialog(true);\r\n      }\r\n    }\r\n  };\r\n  if (loading && reservations.length === 0) {\r\n    return <CircularProgress />;\r\n  }\r\n  if (loading && labreservation.length === 0) {\r\n    return <CircularProgress />;\r\n  }\r\n  if (error) return <Alert severity=\"error\">{error}</Alert>;\r\n  // Calculate pagination\r\n  const startIndex = (page - 1) * rowsPerPage;\r\n  const endIndex = startIndex + rowsPerPage;\r\n  const paginatedReservations = filteredReservations.slice(startIndex, endIndex);\r\n  const pageCount = Math.ceil(filteredReservations.length / rowsPerPage);\r\n  // Calculate lab pagination\r\n  const stratLabIndex =(labPage -1) * rowsPerPage;\r\n  const endLabIndex = stratLabIndex + rowsPerPage;\r\n  const paginatedLabReservations = filteredLabReservations.slice(stratLabIndex, endLabIndex);\r\n  const labPageCount = Math.ceil(filteredLabReservations.length / rowsPerPage);\r\n\r\n  const getLabUtilization = (labs: any[], labReservations: any[]) => {\r\n  const now = new Date();\r\n  const todayStart = startOfDay(now);\r\n  const todayEnd = endOfDay(now);\r\n\r\n  return labs.map((lab) => {\r\n    // Ensure lab.id is string/number consistent with lab_reservations.lab_id\r\n    const labId = String(lab.id); // normalize to string\r\n\r\n    // Filter approved reservations for this lab\r\n    const labReservationsForLab = labReservations.filter(\r\n      (lr) => String(lr.lab_id) === labId && lr.status === 'approved'\r\n    );\r\n\r\n    // Count today's reservations\r\n    const todaysReservations = labReservationsForLab.filter((lr) => {\r\n      const reservationDate = parseISO(lr.start_time);\r\n      return reservationDate >= todayStart && reservationDate <= todayEnd;\r\n    });\r\n\r\n    return {\r\n      ...lab,\r\n      activeReservations: labReservationsForLab.length,\r\n      todaysReservations: todaysReservations.length,\r\n    };\r\n  });\r\n};\r\n  const labUtilizationData = getLabUtilization(labs, labreservation);\r\n\r\n\r\n  return (\r\n    <Box>\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n        <Typography variant=\"h6\" fontWeight=\"bold\">\r\n          Reservation Management\r\n        </Typography>\r\n      </Box>\r\n\r\n      {/* View Tabs */}\r\n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n        <Tabs value={tabValue} onChange={handleTabChange} aria-label=\"reservation view tabs\">\r\n          <Tab label=\"Equipment Reservation\" />\r\n          <Tab label=\"Lab Reservations\" />\r\n          <Tab label=\"Calendar View\" icon={<EventIcon />} iconPosition=\"start\" />\r\n          <Tab label=\"Dashboard\" />\r\n        </Tabs>\r\n      </Box>\r\n\r\n      {/* Equipment Reservation */}\r\n      <TabPanel value={tabValue} index={0}>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n        <Typography variant=\"h6\" fontWeight=\"bold\">\r\n          Equipment Reservation Management\r\n        </Typography>\r\n        <Button\r\n          variant=\"outlined\"\r\n          startIcon={<FilterListIcon />}\r\n          onClick={() => setShowFilters(!showFilters)}\r\n        >\r\n          Filters\r\n        </Button>\r\n          </Box>\r\n         {/* Search and Filters */}\r\n        <Paper sx={{ p: 2, mb: 3 }}>\r\n          <TextField\r\n            placeholder=\"Search by equipment, user, quantity, or purpose...\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            fullWidth\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <SearchIcon />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            sx={{ mb: showFilters ? 2 : 0 }}\r\n          />\r\n\r\n          {showFilters && (\r\n            <Box sx={{ mt: 2 }}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6} md={4}>\r\n                  <FormControl size=\"small\" fullWidth>\r\n                    <InputLabel>Status</InputLabel>\r\n                    <Select\r\n                      value={statusFilter}\r\n                      label=\"Status\"\r\n                      onChange={(e) => setStatusFilter(e.target.value)}\r\n                    >\r\n                      <MenuItem value=\"\">All Statuses</MenuItem>\r\n                      <MenuItem value=\"pending\">Pending</MenuItem>\r\n                      <MenuItem value=\"approved\">Approved</MenuItem>\r\n                      <MenuItem value=\"denied\">Denied</MenuItem>\r\n                      <MenuItem value=\"cancelled\">Cancelled</MenuItem>\r\n                      <MenuItem value=\"completed\">Completed</MenuItem>\r\n\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6} md={4}>\r\n                  <FormControl size=\"small\" fullWidth>\r\n                    <InputLabel>Date</InputLabel>\r\n                    <Select\r\n                      value={dateFilter}\r\n                      label=\"Date\"\r\n                      onChange={(e) => setDateFilter(e.target.value)}\r\n                    >\r\n                      <MenuItem value=\"\">All Dates</MenuItem>\r\n                      <MenuItem value=\"today\">Today</MenuItem>\r\n                      <MenuItem value=\"tomorrow\">Tomorrow</MenuItem>\r\n                      <MenuItem value=\"thisWeek\">This Week</MenuItem>\r\n                      <MenuItem value=\"upcoming\">All Upcoming</MenuItem>\r\n                      <MenuItem value=\"past\">Past</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6} md={4}>\r\n                  <FormControl size=\"small\" fullWidth>\r\n                    <InputLabel>Laboratory</InputLabel>\r\n                    <Select\r\n                      value={labFilter}\r\n                      label=\"Laboratory\"\r\n                      onChange={(e) => setLabFilter(e.target.value)}\r\n                    >\r\n                      <MenuItem value=\"\">All Laboratories</MenuItem>\r\n                      {labs.map((lab) => (\r\n                        <MenuItem key={lab.id} value={lab.id}>\r\n                          {lab.name}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n              \r\n              <Box sx={{ mt: 2, display: 'flex', justifyContent: 'flex-end' }}>\r\n                <Button \r\n                  variant=\"text\" \r\n                  color=\"secondary\" \r\n                  size=\"small\"\r\n                  onClick={() => {\r\n                    setSearchQuery('');\r\n                    setStatusFilter('');\r\n                    setDateFilter('');\r\n                    setLabFilter('');\r\n                  }}\r\n                >\r\n                  Clear Filters\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </Paper>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>User</TableCell>\r\n                <TableCell>Equipment</TableCell>\r\n                <TableCell>Start Time</TableCell>\r\n                <TableCell>End Time</TableCell>\r\n                <TableCell>Quantity</TableCell>\r\n                <TableCell>Status</TableCell>\r\n                <TableCell>Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            \r\n            <TableBody>\r\n              {paginatedReservations.length > 0 ? (\r\n                paginatedReservations.map((reservation: any) => (\r\n                  <TableRow key={reservation.id}>\r\n                    <TableCell>\r\n                      <Box>\r\n                        <Typography variant=\"body2\" fontWeight=\"medium\">\r\n                          {reservation.users?.email.split('@')[0]}\r\n                        </Typography>\r\n                        <Typography variant=\"caption\" color=\"text.secondary\">\r\n                          {reservation.users?.department} • {reservation.users?.role}\r\n                        </Typography>\r\n                      </Box>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Box>\r\n                        <Typography variant=\"body2\" fontWeight=\"medium\">\r\n                          {reservation.equipment?.name}\r\n                        </Typography>\r\n                        <Typography variant=\"caption\" color=\"text.secondary\">\r\n                          {reservation.equipment?.category} • {reservation.labs?.name}\r\n                        </Typography>\r\n                      </Box>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {format(parseISO(reservation.start_time), 'PPpp')}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {format(parseISO(reservation.end_time), 'PPpp')}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {reservation.quantity}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {getStatusChip(reservation.status)}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Box sx={{ display: 'flex', gap: 1 }}>\r\n                        <Tooltip title=\"View Details\">\r\n                          <IconButton \r\n                            size=\"small\" \r\n                            onClick={() => handleViewDetails(reservation)}\r\n                          >\r\n                            <InfoIcon fontSize=\"small\" />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                        \r\n                        {reservation.status === 'pending' && (\r\n                          <>\r\n                            <Button\r\n                              size=\"small\"\r\n                              color=\"success\"\r\n                              variant=\"outlined\"\r\n                              onClick={() => handleConfirmAction(reservation, 'approve')}\r\n                              startIcon={<CheckCircleIcon />}\r\n                            >\r\n                              Approve\r\n                            </Button>\r\n                            <Button\r\n                              size=\"small\"\r\n                              color=\"error\"\r\n                              variant=\"outlined\"\r\n                              onClick={() => handleConfirmAction(reservation, 'deny')}\r\n                              startIcon={<CancelIcon />}\r\n                            >\r\n                              Deny\r\n                            </Button>\r\n                          </>\r\n                        )}\r\n                      </Box>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))\r\n              ) : (\r\n                <TableRow>\r\n                  <TableCell colSpan={6} align=\"center\">\r\n                    <Typography variant=\"subtitle1\" sx={{ py: 2 }}>\r\n                      No reservations found\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      Try adjusting your search or filter criteria\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            \r\n          </Table>\r\n        </TableContainer>\r\n\r\n        {/* Pagination */}\r\n        {pageCount > 1 && (\r\n          <Box sx={{ display: 'flex', justifyContent: 'center', mt: 3 }}>\r\n            <Pagination \r\n              count={pageCount} \r\n              page={page} \r\n              onChange={handleChangePage} \r\n              color=\"primary\" \r\n            />\r\n          </Box>\r\n        )}\r\n      </TabPanel>\r\n\r\n        {/* Lab Reservation */}\r\n      <TabPanel value={tabValue} index={1}>\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n        <Typography variant=\"h6\" fontWeight=\"bold\">\r\n          Lab Reservation Management\r\n        </Typography>\r\n        <Button\r\n          variant=\"outlined\"\r\n          startIcon={<FilterListIcon />}\r\n          onClick={() => setlabShowFilters(!showlabFilters)}\r\n        >\r\n          Filters\r\n        </Button>\r\n          </Box>\r\n         {/* Search and Filters */}\r\n        <Paper sx={{ p: 2, mb: 3 }}>\r\n          <TextField\r\n            placeholder=\"Search by lab, user, attendees, or purpose...\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            fullWidth\r\n            value={labsearchQuery}\r\n            onChange={(e) => setlabSearchQuery(e.target.value)}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <SearchIcon />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            sx={{ mb: showlabFilters ? 2 : 0 }}\r\n          />\r\n\r\n          {showlabFilters && (\r\n            <Box sx={{ mt: 2 }}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6} md={4}>\r\n                  <FormControl size=\"small\" fullWidth>\r\n                    <InputLabel>Status</InputLabel>\r\n                    <Select\r\n                      value={labstatusFilter}\r\n                      label=\"Status\"\r\n                      onChange={(e) => setlabStatusFilter(e.target.value)}\r\n                    >\r\n                      <MenuItem value=\"\">All Statuses</MenuItem>\r\n                      <MenuItem value=\"pending\">Pending</MenuItem>\r\n                      <MenuItem value=\"approved\">Approved</MenuItem>\r\n                      <MenuItem value=\"denied\">Denied</MenuItem>\r\n                      <MenuItem value=\"cancelled\">Cancelled</MenuItem>\r\n                      <MenuItem value=\"completed\">Completed</MenuItem>\r\n\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6} md={4}>\r\n                  <FormControl size=\"small\" fullWidth>\r\n                    <InputLabel>Date</InputLabel>\r\n                    <Select\r\n                      value={labdateFilter}\r\n                      label=\"Date\"\r\n                      onChange={(e) => setlabDateFilter(e.target.value)}\r\n                    >\r\n                      <MenuItem value=\"\">All Dates</MenuItem>\r\n                      <MenuItem value=\"today\">Today</MenuItem>\r\n                      <MenuItem value=\"tomorrow\">Tomorrow</MenuItem>\r\n                      <MenuItem value=\"thisWeek\">This Week</MenuItem>\r\n                      <MenuItem value=\"upcoming\">All Upcoming</MenuItem>\r\n                      <MenuItem value=\"past\">Past</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6} md={4}>\r\n                  <FormControl size=\"small\" fullWidth>\r\n                    <InputLabel>Laboratory</InputLabel>\r\n                    <Select\r\n                      value={labFilter}\r\n                      label=\"Laboratory\"\r\n                      onChange={(e) => setLabFilter(e.target.value)}\r\n                    >\r\n                      <MenuItem value=\"\">All Laboratories</MenuItem>\r\n                      {labs.map((lab) => (\r\n                        <MenuItem key={lab.id} value={lab.id}>\r\n                          {lab.name}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n              \r\n              <Box sx={{ mt: 2, display: 'flex', justifyContent: 'flex-end' }}>\r\n                <Button \r\n                  variant=\"text\" \r\n                  color=\"secondary\" \r\n                  size=\"small\"\r\n                  onClick={() => {\r\n                    setlabSearchQuery('');\r\n                    setlabStatusFilter('');\r\n                    setlabDateFilter('');\r\n                    setLabFilter('');\r\n                  }}\r\n                >\r\n                  Clear Filters\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </Paper>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>User</TableCell>\r\n                <TableCell>Lab</TableCell>\r\n                <TableCell>Start Time</TableCell>\r\n                <TableCell>End Time</TableCell>\r\n                <TableCell>Status</TableCell>\r\n                <TableCell>Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {paginatedLabReservations.length > 0 ? (\r\n                paginatedLabReservations.map((labreservation: any) => (\r\n                  <TableRow key={labreservation.id}>\r\n                    <TableCell>\r\n                      <Box>\r\n                      <Typography variant=\"body2\" fontWeight=\"medium\">\r\n                        {labreservation.user?.email?.split('@')[0] || 'Unknown User'}\r\n                      </Typography>\r\n                      <Typography variant=\"caption\" color=\"text.secondary\">\r\n                        {labreservation.user?.department || 'Unknown Department'}{' '}\r\n                        {labreservation.user?.role || 'Unknown Role'}\r\n                      </Typography>\r\n                      </Box>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Box>\r\n                        <Typography variant=\"body2\" fontWeight=\"medium\">\r\n                          {labreservation.lab?.name}\r\n                        </Typography>\r\n                        <Typography variant=\"caption\" color=\"text.secondary\">\r\n                          {labreservation.lab?.location}\r\n                        </Typography>\r\n                      </Box>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {format(parseISO(labreservation.start_time), 'PPpp')}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {format(parseISO(labreservation.end_time), 'PPpp')}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {getStatusChip(labreservation.status)}\r\n                    </TableCell>\r\n\r\n                    <TableCell>\r\n                      <Box sx={{ display: 'flex', gap: 1 }}>\r\n                        <Tooltip title=\"View Details\">\r\n                          <IconButton \r\n                            size=\"small\" \r\n                            onClick={() => handleViewlabDetails(labreservation)}\r\n                          >\r\n                            <InfoIcon fontSize=\"small\" />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                        {labreservation.status === 'pending' && (\r\n                          <>\r\n                            <Button\r\n                              size=\"small\"\r\n                              color=\"success\"\r\n                              variant=\"outlined\"\r\n                              onClick={() => handleLabConfirmAction(labreservation, 'approve')}\r\n                              startIcon={<CheckCircleIcon />}\r\n                            >\r\n                              Approve\r\n                            </Button>\r\n                            <Button\r\n                              size=\"small\"\r\n                              color=\"error\"\r\n                              variant=\"outlined\"\r\n                              onClick={() => handleLabConfirmAction(labreservation, 'deny')}\r\n                              startIcon={<CancelIcon />}\r\n                            >\r\n                              Deny\r\n                            </Button>\r\n                          </>\r\n                        )}\r\n                      </Box>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))\r\n              ) : (\r\n                <TableRow>\r\n                  <TableCell colSpan={6} align=\"center\">\r\n                    <Typography variant=\"subtitle1\" sx={{ py: 2 }}>\r\n                      No lab reservations found\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      Try adjusting your search or filter criteria\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      {/* Pagination */}\r\n      {labPageCount > 1 && (\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', mt: 3 }}>\r\n          <Pagination \r\n            count={labPageCount} \r\n            page={labPage} \r\n            onChange={handleChangeLabPage} \r\n            color=\"primary\" \r\n          />\r\n        </Box>\r\n      )}\r\n      </TabPanel>\r\n\r\n      {/* Calendar View */}\r\n      <TabPanel value={tabValue} index={2}>\r\n        <Paper sx={{ p: 2 }}>\r\n          <FullCalendar\r\n            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n            initialView=\"timeGridWeek\"\r\n            headerToolbar={{\r\n              left: 'prev,next today',\r\n              center: 'title',\r\n              right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n            }}\r\n            events={calendarEvents}\r\n            eventClick={handleEventClick } \r\n            height=\"auto\"\r\n            aspectRatio={1.5}\r\n            slotMinTime=\"07:00:00\"\r\n            slotMaxTime=\"21:00:00\"\r\n          />\r\n\r\n        </Paper>\r\n      </TabPanel>\r\n\r\n      {/* Dashboard View */}\r\n      <TabPanel value={tabValue} index={3}>\r\n        <Grid container spacing={3}>\r\n          {/* Equipment Status  Summary */}\r\n          <Grid item xs={12} md={6}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\" gutterBottom fontWeight=\"bold\">\r\n                  Equipment Reservation Status Summary\r\n                </Typography>\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>\r\n                  <Box sx={{ textAlign: 'center', p: 1 }}>\r\n                    <Typography variant=\"h4\" color=\"warning.main\">\r\n                      {reservations.filter(r => r.status === 'pending').length}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">Pending</Typography>\r\n                  </Box>\r\n                  <Box sx={{ textAlign: 'center', p: 1 }}>\r\n                    <Typography variant=\"h4\" color=\"success.main\">\r\n                      {reservations.filter(r => r.status === 'approved').length}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">Approved</Typography>\r\n                  </Box>\r\n                  <Box sx={{ textAlign: 'center', p: 1 }}>\r\n                    <Typography variant=\"h4\" color=\"error.main\">\r\n                      {reservations.filter(r => r.status === 'denied').length}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">Denied</Typography>\r\n                  </Box>\r\n                  <Box sx={{ textAlign: 'center', p: 1 }}>\r\n                    <Typography variant=\"h4\" color=\"text.secondary\">\r\n                      {reservations.filter(r => r.status === 'cancelled').length}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">Cancelled</Typography>\r\n                  </Box>\r\n\r\n                  <Box sx={{ textAlign: 'center', p: 1 }}>\r\n                    <Typography variant=\"h4\" color=\"text.secondary\">\r\n                      {reservations.filter(r => r.status === 'completed').length}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">Completed</Typography>\r\n                  </Box>\r\n                </Box>\r\n                <Divider sx={{ my: 2 }} />\r\n                <Typography variant=\"subtitle1\" gutterBottom>\r\n                  Today's Reservations: {reservations.filter(r => {\r\n                    const startDate = parseISO(r.start_time);\r\n                    return isToday(startDate);\r\n                  }).length}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" gutterBottom>\r\n                  Tomorrow's Reservations: {reservations.filter(r => {\r\n                    const startDate = parseISO(r.start_time);\r\n                    return isTomorrow(startDate);\r\n                  }).length}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          {/* Status Lab Summary */}\r\n          <Grid item xs={12} md={6}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\" gutterBottom fontWeight=\"bold\">\r\n                  Lab Reservation Status Summary\r\n                </Typography>\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>\r\n                  <Box sx={{ textAlign: 'center', p: 1 }}>\r\n                    <Typography variant=\"h4\" color=\"warning.main\">\r\n                      {labreservation.filter(r => r.status === 'pending').length}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">Pending</Typography>\r\n                  </Box>\r\n                  <Box sx={{ textAlign: 'center', p: 1 }}>\r\n                    <Typography variant=\"h4\" color=\"success.main\">\r\n                      {labreservation.filter(r => r.status === 'approved').length}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">Approved</Typography>\r\n                  </Box>\r\n                  <Box sx={{ textAlign: 'center', p: 1 }}>\r\n                    <Typography variant=\"h4\" color=\"error.main\">\r\n                      {labreservation.filter(r => r.status === 'denied').length}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">Denied</Typography>\r\n                  </Box>\r\n                  <Box sx={{ textAlign: 'center', p: 1 }}>\r\n                    <Typography variant=\"h4\" color=\"text.secondary\">\r\n                      {labreservation.filter(r => r.status === 'cancelled').length}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">Cancelled</Typography>\r\n                  </Box>\r\n                  <Box sx={{ textAlign: 'center', p: 1 }}>\r\n                    <Typography variant=\"h4\" color=\"text.secondary\">\r\n                      {labreservation.filter(r => r.status === 'completed').length}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">Complated</Typography>\r\n                  </Box>\r\n                </Box>\r\n                <Divider sx={{ my: 2 }} />\r\n                <Typography variant=\"subtitle1\" gutterBottom>\r\n                  Today's Lab Reservation: {labreservation.filter(r => {\r\n                    const startDate = parseISO(r.start_time);\r\n                    return isToday(startDate);\r\n                  }).length}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" gutterBottom>\r\n                  Tomorrow's Reservations: {labreservation.filter(r => {\r\n                    const startDate = parseISO(r.start_time);\r\n                    return isTomorrow(startDate);\r\n                  }).length}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          {/* Recent Pending Reservations */}\r\n          <Grid item xs={12} md={6}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\" gutterBottom fontWeight=\"bold\">\r\n                  Recent Pending Equipment Reservations\r\n                </Typography>\r\n                <List>\r\n                  {reservations\r\n                    .filter(r => r.status === 'pending')\r\n                    .slice(0, 5)\r\n                    .map((reservation, index) => (\r\n                      <Box key={reservation.id}>\r\n                        <Box sx={{ py: 1 }}>\r\n                          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                            <Typography variant=\"body2\" fontWeight=\"medium\">\r\n                              {reservation.equipment?.name}\r\n                            </Typography>\r\n                            <Typography variant=\"caption\" color=\"text.secondary\">\r\n                              {format(parseISO(reservation.created_at), 'PPp')}\r\n                            </Typography>\r\n                          </Box>\r\n                          <Typography variant=\"caption\" display=\"block\" color=\"text.secondary\">\r\n                            Requested by: {reservation.users?.email}\r\n                          </Typography>\r\n                          <Typography variant=\"caption\" display=\"block\" color=\"text.secondary\">\r\n                            {format(parseISO(reservation.start_time), 'PPp')} - {format(parseISO(reservation.end_time), 'p')}\r\n                          </Typography>\r\n                          <Box sx={{ mt: 1, display: 'flex', gap: 1 }}>\r\n                            <Button\r\n                              size=\"small\"\r\n                              variant=\"outlined\"\r\n                              color=\"success\"\r\n                              onClick={() => handleConfirmAction(reservation, 'approve')}\r\n                            >\r\n                              Approve\r\n                            </Button>\r\n                            <Button\r\n                              size=\"small\"\r\n                              variant=\"outlined\"\r\n                              color=\"error\"\r\n                              onClick={() => handleConfirmAction(reservation, 'deny')}\r\n                            >\r\n                              Deny\r\n                            </Button>\r\n                          </Box>\r\n                        </Box>\r\n                        {index < Math.min(reservations.filter(r => r.status === 'pending').length, 5) - 1 && <Divider />}\r\n                      </Box>\r\n                    ))}\r\n                  {reservations.filter(r => r.status === 'pending').length === 0 && (\r\n                    <Box sx={{ py: 2, textAlign: 'center' }}>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        No pending reservations\r\n                      </Typography>\r\n                    </Box>\r\n                  )}\r\n                </List>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          {/* Recent Pending Lab Reservations */}\r\n          <Grid item xs={12} md={6}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\" gutterBottom fontWeight=\"bold\">\r\n                  Recent Pending Lab Reservations\r\n                </Typography>\r\n                <List>\r\n                  {labreservation\r\n                    .filter(r => r.status === 'pending')\r\n                    .slice(0, 5)\r\n                    .map((labreservation, index) => (\r\n                      <Box key={labreservation.id}>\r\n                        <Box sx={{ py: 1 }}>\r\n                          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                            <Typography variant=\"body2\" fontWeight=\"medium\">\r\n                              {labreservation.lab?.name}\r\n                            </Typography>\r\n                            <Typography variant=\"caption\" color=\"text.secondary\">\r\n                              {format(parseISO(labreservation.created_at), 'PPp')}\r\n                            </Typography>\r\n                          </Box>\r\n                          <Typography variant=\"caption\" display=\"block\" color=\"text.secondary\">\r\n                            Requested by: {labreservation.users?.email}\r\n                          </Typography>\r\n                          <Typography variant=\"caption\" display=\"block\" color=\"text.secondary\">\r\n                            {format(parseISO(labreservation.start_time), 'PPp')} - {format(parseISO(labreservation.end_time), 'p')}\r\n                          </Typography>\r\n                          <Box sx={{ mt: 1, display: 'flex', gap: 1 }}>\r\n                            <Button\r\n                              size=\"small\"\r\n                              variant=\"outlined\"\r\n                              color=\"success\"\r\n                              onClick={() => handleLabConfirmAction(labreservation, 'approve')}\r\n                            >\r\n                              Approve\r\n                            </Button>\r\n                            <Button\r\n                              size=\"small\"\r\n                              variant=\"outlined\"\r\n                              color=\"error\"\r\n                              onClick={() => handleLabConfirmAction(labreservation, 'deny')}\r\n                            >\r\n                              Deny\r\n                            </Button>\r\n                          </Box>\r\n                        </Box>\r\n                        {index < Math.min(filteredLabReservations.filter(r => r.status === 'pending').length, 5) - 1 && <Divider />}\r\n                      </Box>\r\n                    ))}\r\n                  {labreservation.filter(r => r.status === 'pending').length === 0 && (\r\n                    <Box sx={{ py: 2, textAlign: 'center' }}>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        No pending lab reservations\r\n                      </Typography>\r\n                    </Box>\r\n                  )}\r\n                </List>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          {/* Lab Utilization */}\r\n        <Grid item xs={12}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" gutterBottom fontWeight=\"bold\">\r\n                Laboratory Utilization\r\n              </Typography>\r\n              <Grid container spacing={2}>\r\n                {labUtilizationData.map((lab) => (\r\n                  <Grid item xs={12} sm={6} md={4} key={lab.id}>\r\n                    <Paper variant=\"outlined\" sx={{ p: 2 }}>\r\n                      <Typography variant=\"subtitle1\" gutterBottom>\r\n                        {lab.name}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n                        {lab.location}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\">\r\n                        Active Reservations: {lab.activeReservations}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\">\r\n                        Today's Reservations: {lab.todaysReservations}\r\n                      </Typography>\r\n                    </Paper>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        </Grid>\r\n      </TabPanel>\r\n\r\n      {/* Reservation Details Dialog */}\r\n      <Dialog\r\n        open={detailsDialog}\r\n        onClose={() => setDetailsDialog(false)}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        {selectedReservation && (\r\n          <>\r\n            <DialogTitle>Reservation Details</DialogTitle>\r\n            <DialogContent>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12} md={6}>\r\n                  <Typography variant=\"subtitle1\" gutterBottom fontWeight=\"bold\">\r\n                    Equipment Information\r\n                  </Typography>\r\n                  <Box \r\n                    component=\"img\"\r\n                    src={selectedReservation.equipment?.image_url || 'https://picsum.photos/200/300'}\r\n                    alt={selectedReservation.equipment?.name}\r\n                    sx={{ width: '100%', height: 200, objectFit: 'cover', borderRadius: 1, mb: 2 }}\r\n                  />\r\n                  <Typography variant=\"body2\">\r\n                    <strong>Name:</strong> {selectedReservation.equipment?.name}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\">\r\n                    <strong>Category:</strong> {selectedReservation.equipment?.category}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\">\r\n                    <strong>Manufacturer:</strong> {selectedReservation.equipment?.manufacturer}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\">\r\n                    <strong>Model:</strong> {selectedReservation.equipment?.model}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\">\r\n                    <strong>Status:</strong> {selectedReservation.equipment?.status}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\">\r\n                    <strong>Lab:</strong> \r\n                    {selectedReservation.equipment?.lab_id\r\n                      ? labs.find(lab => lab.id === selectedReservation.equipment.lab_id)?.name || 'Unknown Lab'\r\n                      : 'No Lab Assigned'}\r\n                    {selectedReservation.equipment?.lab_id\r\n                      ? ` (${labs.find(lab => lab.id === selectedReservation.equipment.lab_id)?.location || 'Unknown Location'})`\r\n                      : ''}\r\n                  </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={6}>\r\n                  <Typography variant=\"subtitle1\" gutterBottom fontWeight=\"bold\">\r\n                    User Information\r\n                  </Typography>\r\n                  <Paper variant=\"outlined\" sx={{ p: 2, mb: 3 }}>\r\n                    <Typography variant=\"body2\">\r\n                      <strong>Email:</strong> {selectedReservation.users?.email}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">\r\n                      <strong>Department:</strong> {selectedReservation.users?.department}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">\r\n                      <strong>Role:</strong> {selectedReservation.users?.role}\r\n                    </Typography>\r\n                  </Paper>\r\n\r\n                  <Typography variant=\"subtitle1\" gutterBottom fontWeight=\"bold\">\r\n                    Reservation Information\r\n                  </Typography>\r\n                  <Paper variant=\"outlined\" sx={{ p: 2 }}>\r\n                    <Box sx={{ mb: 2, display: 'flex', alignItems: 'center' }}>\r\n                      <Typography variant=\"body2\" sx={{ mr: 1 }}>\r\n                        <strong>Status:</strong>\r\n                      </Typography>\r\n                      {getStatusChip(selectedReservation.status)}\r\n                    </Box>\r\n                    <Typography variant=\"body2\">\r\n                      <strong>Created:</strong> {format(parseISO(selectedReservation.created_at), 'PPpp')}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">\r\n                      <strong>Start Time:</strong> {format(parseISO(selectedReservation.start_time), 'PPpp')}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">\r\n                      <strong>End Time:</strong> {format(parseISO(selectedReservation.end_time), 'PPpp')}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">\r\n                      <strong>Duration:</strong>\r\n                      {\r\n                        (() => {\r\n                          const start = new Date(selectedReservation.start_time);\r\n                          const end = new Date(selectedReservation.end_time);\r\n                          let diffMs = end.getTime() - start.getTime();\r\n                          const hours = Math.floor(diffMs / (1000 * 60 * 60));\r\n                          diffMs -= hours * (1000 * 60 * 60);\r\n                          const minutes = Math.floor(diffMs / (1000 * 60));\r\n                          \r\n                          return `${hours} hour(s), ${minutes} minute(s)`;\r\n                        })()\r\n                      }\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">\r\n                      <strong>Quantity:</strong> {selectedReservation.quantity}\r\n                    </Typography>\r\n\r\n              \r\n                    \r\n                    <Divider sx={{ my: 2 }} />\r\n                    \r\n                    <Typography variant=\"subtitle2\" gutterBottom>\r\n                      Purpose:\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">\r\n                      {selectedReservation.purpose}\r\n                    </Typography>\r\n                  </Paper>\r\n                </Grid>\r\n              </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={() => setDetailsDialog(false)}>Close</Button>\r\n            \r\n              {selectedReservation.status === 'pending' && (\r\n                <>\r\n                  <Button \r\n                    color=\"success\" \r\n                    variant=\"contained\"\r\n                    onClick={() => handleConfirmAction(selectedReservation, 'approve')}\r\n                    disabled={actionLoading}\r\n                  >\r\n                    Approve\r\n                  </Button>\r\n                  <Button \r\n                    color=\"error\"\r\n                    variant=\"contained\"\r\n                    onClick={() => handleConfirmAction(selectedReservation, 'deny')}\r\n                    disabled={actionLoading}\r\n                  >\r\n                    Deny\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </DialogActions>\r\n          </>\r\n        )}\r\n      </Dialog> \r\n\r\n        {/* Lab Reservation Details Dialog */}\r\n      <Dialog\r\n        open={labdetailsDialog}\r\n        onClose={() => setDetailsDialog(false)}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        {selectedlabReservation && (\r\n          <>\r\n            <DialogTitle>Reservation Details</DialogTitle>\r\n            <DialogContent>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12} md={6}>\r\n                  <Typography variant=\"subtitle1\" gutterBottom fontWeight=\"bold\">\r\n                    Lab Information\r\n                  </Typography>\r\n                  <Box \r\n                    component=\"img\"\r\n                    src={selectedlabReservation.lab?.image_url || 'https://picsum.photos/200/300'}\r\n                    alt={selectedlabReservation.lab?.name}\r\n                    sx={{ width: '100%', height: 200, objectFit: 'cover', borderRadius: 1, mb: 2 }}\r\n                  />\r\n                  <Typography variant=\"body2\">\r\n                    <strong>Name:</strong> {selectedlabReservation.lab?.name}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\">\r\n                    <strong>Status:</strong> {selectedlabReservation.lab?.status}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\">\r\n                    <strong>location:</strong>  {selectedlabReservation.lab?.location}\r\n                  </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={6}>\r\n                  <Typography variant=\"subtitle1\" gutterBottom fontWeight=\"bold\">\r\n                    User Information\r\n                  </Typography>\r\n                  <Paper variant=\"outlined\" sx={{ p: 2, mb: 3 }}>\r\n                    <Typography variant=\"body2\">\r\n                      <strong>Email:</strong> {selectedlabReservation.user?.email}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">\r\n                      <strong>Department:</strong> {selectedlabReservation.user?.department}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">\r\n                      <strong>Role:</strong> {selectedlabReservation.user?.role}\r\n                    </Typography>\r\n                  </Paper>\r\n\r\n                  <Typography variant=\"subtitle1\" gutterBottom fontWeight=\"bold\">\r\n                    Lab Reservation Information\r\n                  </Typography>\r\n                  <Paper variant=\"outlined\" sx={{ p: 2 }}>\r\n                    <Box sx={{ mb: 2, display: 'flex', alignItems: 'center' }}>\r\n                      <Typography variant=\"body2\" sx={{ mr: 1 }}>\r\n                        <strong>Status:</strong>\r\n                      </Typography>\r\n                      {getStatusChip(selectedlabReservation.status)}\r\n                    </Box>\r\n                    <Typography variant=\"body2\">\r\n                      <strong>Created:</strong> {format(parseISO(selectedlabReservation.created_at), 'PPpp')}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">\r\n                      <strong>Start Time:</strong> {format(parseISO(selectedlabReservation.start_time), 'PPpp')}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">\r\n                      <strong>End Time:</strong> {format(parseISO(selectedlabReservation.end_time), 'PPpp')}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">\r\n                      <strong>Duration:</strong>\r\n                      {\r\n                        (() => {\r\n                          const start = new Date(selectedlabReservation.start_time);\r\n                          const end = new Date(selectedlabReservation.end_time);\r\n                          let diffMs = end.getTime() - start.getTime();\r\n                          const hours = Math.floor(diffMs / (1000 * 60 * 60));\r\n                          diffMs -= hours * (1000 * 60 * 60);\r\n                          const minutes = Math.floor(diffMs / (1000 * 60));\r\n                          \r\n                          return `${hours} hour(s), ${minutes} minute(s)`;\r\n                        })()\r\n                      }\r\n                    </Typography>\r\n                    <Typography variant='body2'>\r\n                      <strong>Attendees:</strong> {selectedlabReservation.attendees}\r\n                    </Typography>\r\n                    \r\n                    <Divider sx={{ my: 2 }} />\r\n                    \r\n                    <Typography variant=\"subtitle2\" gutterBottom>\r\n                      Purpose:\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">\r\n                      {selectedlabReservation.purpose}\r\n                    </Typography>\r\n                  </Paper>\r\n                </Grid>\r\n              </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={() => setLabDetailsDialog(false)}>Close</Button>\r\n              {selectedlabReservation.status === 'pending' && (\r\n                <>\r\n                  <Button \r\n                    color=\"success\" \r\n                    variant=\"contained\"\r\n                    onClick={() => handleLabConfirmAction(selectedlabReservation, 'approve')}\r\n                    disabled={labactionLoading}\r\n                  >\r\n                    Approve\r\n                  </Button>\r\n                  <Button \r\n                    color=\"error\"\r\n                    variant=\"contained\"\r\n                    onClick={() => handleLabConfirmAction(selectedlabReservation, 'deny')}\r\n                    disabled={labactionLoading}\r\n                  >\r\n                    Deny\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </DialogActions>\r\n          </>\r\n        )}\r\n      </Dialog>\r\n\r\n      {/* Confirmation Dialog */}\r\n      <Dialog\r\n        open={confirmDialog}\r\n        onClose={() => {\r\n          setConfirmDialog(false);\r\n          setActionType(null);\r\n        }}\r\n      >\r\n        <DialogTitle>\r\n          {actionType === 'approve' ? 'Approve Reservation' : 'Deny Reservation'}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {actionType === 'approve'\r\n              ? 'Are you sure you want to approve this reservation? The equipment will be reserved for the requested time slot.'\r\n              : 'Are you sure you want to deny this reservation? The user will be notified that their request was denied.'}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button \r\n            onClick={() => {\r\n              setConfirmDialog(false);\r\n              setActionType(null);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button \r\n            color={actionType === 'approve' ? 'success' : 'error'}\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              if (selectedReservation && actionType) {\r\n                handleStatusUpdate(selectedReservation.id, actionType === 'approve' ? 'approved' : 'denied');\r\n              }\r\n            }}\r\n            disabled={actionLoading}\r\n          >\r\n            {actionLoading ? <CircularProgress size={24} /> : actionType === 'approve' ? 'Approve' : 'Deny'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Lab Confirmation Dialog */}\r\n      <Dialog\r\n        open={labconfirmDialog}\r\n        onClose={() => {\r\n          setLabConfirmDialog(false);\r\n          setLabActionType(null);\r\n        }}\r\n      >\r\n        <DialogTitle>\r\n          {labactionType === 'approve' ? 'Approve Lab Reservation' : 'Deny LabReservation'}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {labactionType === 'approve'\r\n              ? 'Are you sure you want to approve this lab reservation? The lab will be reserved for the requested time slot.'\r\n              : 'Are you sure you want to deny this lab reservation? The user will be notified that their request was denied.'}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button \r\n            onClick={() => {\r\n              setLabConfirmDialog(false);\r\n              setLabActionType(null);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button \r\n            color={labactionType === 'approve' ? 'success' : 'error'}\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              if (selectedlabReservation && labactionType) {\r\n                handleLabStatusUpdate(selectedlabReservation.id, labactionType === 'approve' ? 'approved' : 'denied');\r\n              }\r\n            }}\r\n            disabled={labactionLoading}\r\n          >\r\n            {labactionLoading ? <CircularProgress size={24} /> : labactionType === 'approve' ? 'Approve' : 'Deny'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n    </Box>\r\n  );\r\n}"],"names":["endOfDay","date","_date","toDate","TabPanel","props","children","value","index","other","jsx","Box","ReservationManagement","reservations","setReservations","useState","filteredReservations","setFilteredReservations","labreservation","setLabReservation","filteredLabReservations","setFilteredLabReservations","loading","setLoading","error","setError","searchQuery","setSearchQuery","labsearchQuery","setlabSearchQuery","statusFilter","setStatusFilter","labstatusFilter","setlabStatusFilter","dateFilter","setDateFilter","labdateFilter","setlabDateFilter","labFilter","setLabFilter","showFilters","setShowFilters","showlabFilters","setlabShowFilters","detailsDialog","setDetailsDialog","labdetailsDialog","setLabDetailsDialog","selectedReservation","setSelectedReservation","selectedlabReservation","setSelectedlabReservation","confirmDialog","setConfirmDialog","labconfirmDialog","setLabConfirmDialog","actionType","setActionType","labactionType","setLabActionType","page","setPage","labPage","setLabPage","tabValue","setTabValue","labs","setLabs","actionLoading","setActionLoading","labactionLoading","setLabActionLoading","_users","setUsers","rowsPerPage","useEffect","fetchReservations","fetchLabReservation","fetchLabs","applyFilters","applyLabFilters","fetchAllUsers","data","supabase","labReservations","labError","labIds","lr","labFetchError","userIds","users","userFetchError","enrichedReservations","l","u","sendNotificationToUser","userId","createdBy","title","message","type","filtered","query","reservation","today","tomorrow","startDate","parseISO","isToday","isTomorrow","isAfter","endDate","isBefore","nextWeek","addDays","flabiltered","handleStatusUpdate","reservationId","status","prevReservations","handleLabStatusUpdate","labreservationId","prevLabReservations","handleViewDetails","handleViewlabDetails","handleConfirmAction","action","handleLabConfirmAction","getStatusChip","color","Chip","handleChangePage","_","handleChangeLabPage","handleTabChange","newValue","calendarEvents","handleEventClick","info","extendedProps","r","labReservation","CircularProgress","Alert","startIndex","endIndex","paginatedReservations","pageCount","stratLabIndex","endLabIndex","paginatedLabReservations","labPageCount","labUtilizationData","now","todayStart","startOfDay","todayEnd","lab","labId","labReservationsForLab","todaysReservations","reservationDate","Typography","jsxs","Tabs","Tab","EventIcon","Button","FilterListIcon","Paper","TextField","e","InputAdornment","SearchIcon","Grid","FormControl","InputLabel","Select","MenuItem","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","format","Tooltip","IconButton","InfoIcon","Fragment","CheckCircleIcon","CancelIcon","Pagination","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","Card","CardContent","Divider","List","Dialog","DialogTitle","DialogContent","start","diffMs","hours","minutes","DialogActions","DialogContentText"],"mappings":"2oBAsBO,SAASA,GAASC,EAAM,CAC7B,MAAMC,EAAQC,GAAOF,CAAI,EACzB,OAAAC,EAAM,SAAS,GAAI,GAAI,GAAI,GAAG,EACvBA,CACT,CCiCA,SAASE,GAASC,EAAsB,CACtC,KAAM,CAAE,SAAAC,EAAU,MAAAC,EAAO,MAAAC,EAAO,GAAGC,CAAU,EAAAJ,EAG3C,OAAAK,EAAA,IAAC,MAAA,CACC,KAAK,WACL,OAAQH,IAAUC,EAClB,GAAI,wBAAwBA,CAAK,GACjC,kBAAiB,mBAAmBA,CAAK,GACxC,GAAGC,EAEH,SAAAF,IAAUC,GAAUE,EAAAA,IAAAC,EAAA,CAAI,GAAI,CAAE,GAAI,CAAE,EAAI,SAAAL,CAAS,CAAA,CAAA,CACpD,CAEJ,CAEA,SAAwBM,IAAwB,CAC9C,KAAM,CAACC,EAAcC,CAAe,EAAIC,EAAAA,SAAwB,CAAA,CAAE,EAC5D,CAACC,EAAsBC,CAAuB,EAAIF,EAAAA,SAAwB,CAAA,CAAE,EAC5E,CAACG,EAAgBC,EAAiB,EAAIJ,EAAAA,SAA6B,CAAA,CAAE,EACrE,CAACK,EAAyBC,EAA0B,EAAIN,EAAAA,SAA6B,CAAA,CAAE,EACvF,CAACO,GAASC,EAAU,EAAIR,EAAAA,SAAS,EAAI,EACrC,CAACS,GAAOC,CAAQ,EAAIV,EAAAA,SAAwB,IAAI,EAChD,CAACW,EAAaC,EAAc,EAAIZ,EAAAA,SAAS,EAAE,EAC3C,CAACa,EAAgBC,EAAiB,EAAId,EAAAA,SAAS,EAAE,EACjD,CAACe,EAAcC,EAAe,EAAIhB,EAAAA,SAAiB,EAAE,EACrD,CAACiB,EAAiBC,EAAkB,EAAIlB,EAAAA,SAAiB,EAAE,EAC3D,CAACmB,EAAYC,EAAa,EAAIpB,EAAAA,SAAiB,EAAE,EACjD,CAACqB,EAAeC,EAAgB,EAAItB,EAAAA,SAAiB,EAAE,EACvD,CAACuB,EAAWC,CAAY,EAAIxB,EAAAA,SAAiB,EAAE,EAC/C,CAACyB,GAAaC,EAAc,EAAI1B,EAAAA,SAAS,EAAK,EAC9C,CAAC2B,GAAgBC,EAAiB,EAAI5B,EAAAA,SAAS,EAAK,EACpD,CAAC6B,GAAeC,CAAgB,EAAI9B,EAAAA,SAAS,EAAK,EAClD,CAAC+B,GAAkBC,CAAmB,EAAIhC,EAAAA,SAAS,EAAK,EACxD,CAACiC,EAAqBC,EAAsB,EAAIlC,EAAAA,SAAc,IAAI,EAClE,CAACmC,EAAwBC,EAAyB,EAAIpC,EAAAA,SAAc,IAAI,EACxE,CAACqC,GAAeC,EAAgB,EAAItC,EAAAA,SAAS,EAAK,EAClD,CAACuC,GAAkBC,EAAmB,EAAIxC,EAAAA,SAAS,EAAK,EACxD,CAACyC,EAAYC,EAAa,EAAI1C,EAAAA,SAAoC,IAAI,EACtE,CAAC2C,EAAeC,EAAgB,EAAI5C,EAAAA,SAAoC,IAAI,EAC5E,CAAC6C,GAAMC,EAAO,EAAI9C,EAAAA,SAAS,CAAC,EAC5B,CAAC+C,GAASC,EAAU,EAAIhD,EAAAA,SAAS,CAAC,EAClC,CAACiD,EAAUC,EAAW,EAAIlD,EAAAA,SAAS,CAAC,EACpC,CAACmD,EAAMC,EAAO,EAAIpD,EAAAA,SAAgB,CAAA,CAAE,EACpC,CAACqD,GAAeC,EAAgB,EAAItD,EAAAA,SAAS,EAAK,EAClD,CAACuD,GAAkBC,EAAmB,EAAIxD,EAAAA,SAAS,EAAK,EACxD,CAACyD,GAAQC,EAAQ,EAAI1D,EAAAA,SAAgB,CAAA,CAAE,EACvC2D,EAAc,GAEpBC,EAAAA,UAAU,IAAM,CACIC,GAAA,EACEC,GAAA,EACVC,GAAA,CACZ,EAAG,EAAE,EAELH,EAAAA,UAAU,IAAM,CACDI,GAAA,EACGC,GAAA,EACFC,GAAA,CAEhB,EAAG,CAAC/D,EAAgBL,EAAca,EAAaI,EAAcI,EAAYI,EAAWF,EAAeJ,EAAiBJ,CAAc,CAAC,EAEnI,MAAMgD,GAAoB,SAAY,CAChC,GAAA,CACFrD,GAAW,EAAI,EACT,KAAA,CAAE,KAAA2D,EAAM,MAAA1D,CAAM,EAAI,MAAM2D,EAC3B,KAAK,cAAc,EACnB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAkBP,EACA,MAAM,aAAc,CAAE,UAAW,GAAO,EAE3C,GAAI3D,EAAaA,MAAAA,EACjBV,EAAgBoE,CAAI,EACpBjE,EAAwBiE,CAAI,QACrB1D,EAAY,CACnBC,EAASD,EAAM,OAAO,CAAA,QACtB,CACAD,GAAW,EAAK,CAAA,CAEpB,EACMsD,GAAsB,SAAY,CAClC,GAAA,CACI,KAAA,CAAE,KAAMO,EAAiB,MAAOC,CAAA,EAAa,MAAMF,EACtD,KAAK,kBAAkB,EACvB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAaH,EACJ,MAAM,aAAc,CAAE,UAAW,GAAO,EAG3C,GAAIE,EAAgB,MAAAA,EAGpB,MAAMC,EAASF,EAAgB,IAAKG,GAAOA,EAAG,MAAM,EAC9C,CAAE,KAAMrB,EAAM,MAAOsB,CAAA,EAAkB,MAAML,EAChD,KAAK,KAAK,EACV,OAAO,GAAG,EACV,GAAG,KAAMG,CAAM,EAElB,GAAIE,EAAqB,MAAAA,EAGzB,MAAMC,EAAUL,EAAgB,IAAKG,GAAOA,EAAG,OAAO,EAChD,CAAE,KAAMG,GAAO,MAAOC,CAAA,EAAmB,MAAMR,EAClD,KAAK,OAAO,EACZ,OAAO,GAAG,EACV,GAAG,KAAMM,CAAO,EAEnB,GAAIE,EAAsB,MAAAA,EAG1B,MAAMC,GAAuBR,EAAgB,IAAKG,IAAQ,CACxD,GAAGA,EACH,IAAKrB,EAAK,KAAM2B,GAAMA,EAAE,KAAON,EAAG,MAAM,EACxC,KAAMG,GAAM,KAAMI,GAAMA,EAAE,KAAOP,EAAG,OAAO,CAAA,EAC3C,EAEFpE,GAAkByE,EAAoB,EACtCvE,GAA2BuE,EAAoB,QACxCpE,EAAY,CACnBC,EAASD,EAAM,OAAO,CAAA,QACtB,CACAD,GAAW,EAAK,CAAA,CAEpB,EACMuD,GAAY,SAAY,CACxB,GAAA,CACF,KAAM,CAAE,KAAAI,EAAM,MAAA1D,CAAAA,EAAU,MAAM2D,EAC3B,KAAK,KAAK,EACV,OAAO,GAAG,EACV,MAAM,MAAM,EAEf,GAAI3D,EAAaA,MAAAA,EACjB2C,GAAQe,CAAI,QACL1D,EAAY,CACX,QAAA,MAAM,uBAAwBA,CAAK,CAAA,CAE/C,EACMyD,GAAgB,SAAY,CAC5B,GAAA,CACF,KAAM,CAAE,KAAAC,EAAM,MAAA1D,GAAU,MAAM2D,EAC3B,KAAK,OAAO,EACZ,OAAO,GAAG,EACV,MAAM,aAAc,CAAE,UAAW,GAAO,EAC3C,GAAI3D,EAAaA,MAAAA,EACRiD,GAAAS,GAAQ,EAAE,QACZ1D,EAAY,CACnBC,EAASD,EAAM,OAAO,CAAA,CAE1B,EACMuE,GAAyB,MAC3BC,EACAC,EACAC,EACAC,EACAC,IACG,CACC,GAAA,CACI,KAAA,CAAE,MAAA5E,GAAU,MAAM2D,EAAS,KAAK,eAAe,EAAE,OAAO,CAC5D,CACE,GAAI,OAAO,WAAW,EACtB,QAASa,EACT,WAAYC,EACZ,MAAAC,EACA,QAAAC,EACA,KAAAC,EACA,KAAM,GACN,WAAY,IAAI,KAAK,EAAE,YAAY,CAAA,CACrC,CACD,EACD,GAAI5E,EACIA,MAAAA,QAEDA,EAAY,CACX,QAAA,MAAM,sCAAuCA,EAAM,OAAO,CAAA,CAEtE,EAGIuD,GAAe,IAAM,CACrB,IAAAsB,EAAW,CAAC,GAAGxF,CAAY,EAG/B,GAAIa,EAAa,CACT,MAAA4E,EAAQ5E,EAAY,YAAY,EACtC2E,EAAWA,EAAS,OACjBE,GACCA,EAAY,WAAW,KAAK,YAAc,EAAA,SAASD,CAAK,GACxDC,EAAY,OAAO,MAAM,YAAc,EAAA,SAASD,CAAK,GACrDC,EAAY,SAAS,YAAA,EAAc,SAASD,CAAK,GACjDC,EAAY,WAAW,SAAS,YAAc,EAAA,SAASD,CAAK,GAC5DC,EAAY,SAAS,SAAS,EAAE,SAASD,CAAK,CAClD,CAAA,CAcF,GAVIxE,IACFuE,EAAWA,EAAS,OAAQE,GAAgBA,EAAY,SAAWzE,CAAY,GAI7EQ,IACF+D,EAAWA,EAAS,OAAQE,GAAgBA,EAAY,eAAiBjE,CAAS,GAIhFJ,EAAY,CACR,MAAAsE,MAAY,KAClBA,EAAM,SAAS,EAAG,EAAG,EAAG,CAAC,EACnB,MAAAC,EAAW,IAAI,KAAKD,CAAK,EAG/B,OAFAC,EAAS,QAAQA,EAAS,QAAQ,EAAI,CAAC,EAE/BvE,EAAY,CAClB,IAAK,QACQmE,EAAAA,EAAS,OAAQE,GAAgB,CACpC,MAAAG,EAAYC,EAASJ,EAAY,UAAU,EACjD,OAAOK,GAAQF,CAAS,CAAA,CACzB,EACD,MACF,IAAK,WACQL,EAAAA,EAAS,OAAQE,GAAgB,CACpC,MAAAG,EAAYC,EAASJ,EAAY,UAAU,EACjD,OAAOM,GAAWH,CAAS,CAAA,CAC5B,EACD,MACF,IAAK,WACQL,EAAAA,EAAS,OAAQE,GAAgB,CACpC,MAAAG,EAAYC,EAASJ,EAAY,UAAU,EAC1C,OAAAO,GAAQJ,EAAWF,CAAK,CAAA,CAChC,EACD,MACF,IAAK,OACQH,EAAAA,EAAS,OAAQE,GAAgB,CACpC,MAAAQ,EAAUJ,EAASJ,EAAY,QAAQ,EACtC,OAAAS,GAASD,EAASP,CAAK,CAAA,CAC/B,EACD,MACF,IAAK,WACG,MAAAS,EAAWC,GAAQV,EAAO,CAAC,EACtBH,EAAAA,EAAS,OAAQE,GAAgB,CACpC,MAAAG,EAAYC,EAASJ,EAAY,UAAU,EACjD,OAAOO,GAAQJ,EAAWF,CAAK,GAAKQ,GAASN,EAAWO,CAAQ,CAAA,CACjE,EACD,KAAA,CACJ,CAKFhG,EAAwBoF,CAAQ,EAChCxC,GAAQ,CAAC,CACX,EACMmB,GAAkB,IAAM,CACxB,IAAAmC,EAAc,CAAC,GAAGjG,CAAc,EAGpC,GAAIU,EAAgB,CACZ,MAAA0E,EAAQ1E,EAAe,YAAY,EACzCuF,EAAcA,EAAY,OACvBjG,GACGA,EAAe,KAAK,KAAK,YAAc,EAAA,SAASoF,CAAK,GACrDpF,EAAe,OAAO,MAAM,YAAY,EAAE,SAASoF,CAAK,GACxDpF,EAAe,SAAS,YAAc,EAAA,SAASoF,CAAK,GACpDpF,EAAe,WAAW,SAAS,EAAE,SAASoF,CAAK,CACzD,CAAA,CAWF,GAPItE,IACFmF,EAAcA,EAAY,OAAQjG,GAAmBA,EAAe,SAAWc,CAAe,GAM5FI,EAAe,CACX,MAAAoE,MAAY,KAClBA,EAAM,SAAS,EAAG,EAAG,EAAG,CAAC,EACnB,MAAAC,EAAW,IAAI,KAAKD,CAAK,EAG/B,OAFAC,EAAS,QAAQA,EAAS,QAAQ,EAAI,CAAC,EAE/BrE,EAAe,CACrB,IAAK,QACW+E,EAAAA,EAAY,OAAQjG,GAAmB,CAC7C,MAAAwF,EAAYC,EAASzF,EAAe,UAAU,EACpD,OAAO0F,GAAQF,CAAS,CAAA,CACzB,EACD,MACF,IAAK,WACWS,EAAAA,EAAY,OAAQjG,GAAmB,CAC7C,MAAAwF,EAAYC,EAASzF,EAAe,UAAU,EACpD,OAAO2F,GAAWH,CAAS,CAAA,CAC5B,EACD,MACF,IAAK,WACWS,EAAAA,EAAY,OAAQjG,GAAmB,CAC7C,MAAAwF,EAAYC,EAASzF,EAAe,UAAU,EAC7C,OAAA4F,GAAQJ,EAAWF,CAAK,CAAA,CAChC,EACD,MACF,IAAK,OACWW,EAAAA,EAAY,OAAQjG,GAAmB,CAC7C,MAAA6F,EAAUJ,EAASzF,EAAe,QAAQ,EACzC,OAAA8F,GAASD,EAASP,CAAK,CAAA,CAC/B,EACD,MACF,IAAK,WACG,MAAAS,EAAWC,GAAQV,EAAO,CAAC,EACnBW,EAAAA,EAAY,OAAQjG,GAAmB,CAC7C,MAAAwF,EAAYC,EAASzF,EAAe,UAAU,EACpD,OAAO4F,GAAQJ,EAAWF,CAAK,GAAKQ,GAASN,EAAWO,CAAQ,CAAA,CACjE,EACD,KAAA,CACJ,CAKF5F,GAA2B8F,CAAW,EACtCpD,GAAW,CAAC,CACd,EACMqD,GAAqB,MAAOC,EAAuBC,IAAkC,CACrF,GAAA,CACFjD,GAAiB,EAAI,EAEf,KAAA,CAAE,MAAA7C,GAAU,MAAM2D,EACrB,KAAK,cAAc,EACnB,OAAO,CACR,OAAAmC,EACA,WAAY,IAAI,KAAK,EAAE,YAAY,CAAA,CACpC,EACE,GAAG,KAAMD,CAAa,EAEzB,GAAI7F,EAAaA,MAAAA,EAGjBV,KACEyG,EAAiB,IACfhB,GAAAA,EAAY,KAAOc,EACjB,CAAE,GAAGd,EAAa,OAAAe,EAAQ,WAAgB,IAAA,KAAA,EAAO,eAE/Cf,CAAA,CAER,EAEAlD,GAAiB,EAAK,EACtBR,EAAiB,EAAK,EACtBY,GAAc,IAAI,EAGZ,MAAAsC,GACJ/C,EAAoB,QACpB,SACA,eAAesE,CAAM,GACrB,wBAAwBtE,EAAoB,UAAU,IAAI,aAAasE,CAAM,IAC7E,aACF,QACO9F,EAAY,CACX,QAAA,MAAM,8BAA+BA,CAAK,EAClDC,EAASD,EAAM,OAAO,CAAA,QACtB,CACA6C,GAAiB,EAAK,CAAA,CAE1B,EACMmD,GAAwB,MAAOC,EAA0BH,IAAkC,CAC3F,GAAA,CACF/C,GAAoB,EAAI,EACxB,KAAM,CAAE,MAAA/C,CAAU,EAAA,MAAM2D,EACrB,KAAK,kBAAkB,EACvB,OAAO,CAAE,OAAAmC,CAAQ,CAAA,EACjB,GAAG,KAAMG,CAAgB,EAC5B,GAAIjG,EAAaA,MAAAA,EAGjBL,MACEuG,EAAoB,IAAIxG,GACtBA,EAAe,KAAOuG,EAClB,CAAE,GAAGvG,EAAgB,OAAAoG,GACrBpG,CAAA,CAER,EACAqC,GAAoB,EAAK,EACzBR,EAAoB,EAAK,EACzBY,GAAiB,IAAI,EAEf,MAAAoC,GACJ7C,EAAuB,QACvB,SACA,mBAAmBoE,CAAM,GACzB,4BAA4BpE,EAAuB,IAAI,IAAI,aAAaoE,CAAM,IAC9E,iBACF,QACO9F,EAAY,CACX,QAAA,MAAM,kCAAmCA,CAAK,EACtDC,EAASD,EAAM,OAAO,CAAA,QACtB,CACA+C,GAAoB,EAAK,CAAA,CAE7B,EACMoD,GAAqBpB,GAAqB,CAC9CtD,GAAuBsD,CAAW,EAClC1D,EAAiB,EAAI,CACvB,EACM+E,GAAwB1G,GAAwB,CACpDiC,GAA0BjC,CAAc,EACxC6B,EAAoB,EAAI,CAC1B,EACM8E,EAAsB,CAACtB,EAAkBuB,IAA+B,CAC5E7E,GAAuBsD,CAAW,EAClC9C,GAAcqE,CAAM,EACpBzE,GAAiB,EAAI,CACvB,EACM0E,EAAyB,CAAC7G,EAAqB4G,IAA+B,CAClF3E,GAA0BjC,CAAc,EACxCyC,GAAiBmE,CAAM,EACvBvE,GAAoB,EAAI,CAC1B,EACMyE,GAAiBV,GAAmB,CACxC,IAAIW,EAAwF,UAE5F,OAAQX,EAAQ,CACd,IAAK,UACKW,EAAA,UACR,MACF,IAAK,WACKA,EAAA,UACR,MACF,IAAK,SACKA,EAAA,QACR,MACF,IAAK,YACKA,EAAA,UACR,MACF,IAAK,YACKA,EAAA,OACR,KACF,CAGF,aAAQC,GAAK,CAAA,MAAOZ,EAAQ,MAAAW,EAAc,KAAK,QAAQ,CACzD,EACME,GAAmB,CAACC,EAA+B7H,IAAkB,CACzEsD,GAAQtD,CAAK,CACf,EACM8H,GAAsB,CAACD,EAA+B7H,IAAkB,CAC5EwD,GAAWxD,CAAK,CAClB,EACM+H,GAAkB,CAACF,EAAyBG,IAAqB,CACrEtE,GAAYsE,CAAQ,CACtB,EACMC,GAAiB,CACrB,GAAGxH,EAAqB,IAAKuF,IAAsB,CACjD,GAAIA,EAAY,GAChB,MAAO,GAAGA,EAAY,WAAW,IAAI,KAAKA,EAAY,OAAO,MAAM,MAAM,GAAG,EAAE,CAAC,CAAC,IAChF,MAAOA,EAAY,WACnB,IAAKA,EAAY,SACjB,cAAe,CACb,KAAM,YACN,OAAQA,EAAY,OACpB,UAAWA,EAAY,UACvB,KAAMA,EAAY,MAClB,QAASA,EAAY,OACvB,EACA,gBAAiBA,EAAY,SAAW,WACrC,UACCA,EAAY,SAAW,UACvB,UACAA,EAAY,SAAW,SACvB,UACAA,EAAY,SAAW,YACvB,UACAA,EAAY,SAAW,YACvB,UACA,UACJ,YAAaA,EAAY,SAAW,WACjC,UACCA,EAAY,SAAW,UACvB,UACAA,EAAY,SAAW,SACvB,UACAA,EAAY,SAAW,YACvB,UACAA,EAAY,SAAW,YACvB,UACA,SAAA,EAIJ,EACF,GAAGnF,EAAwB,IAAKF,IAAyB,CACvD,GAAIA,EAAe,GACnB,MAAO,GAAGA,EAAe,KAAK,IAAI,KAAKA,EAAe,MAAM,MAAM,MAAM,GAAG,EAAE,CAAC,CAAC,IAC/E,MAAOA,EAAe,WACtB,IAAKA,EAAe,SACpB,cAAe,CACb,KAAM,MACN,OAAQA,EAAe,OACvB,IAAKA,EAAe,IACpB,KAAMA,EAAe,KACrB,QAASA,EAAe,OAC1B,EACA,gBAAiBA,EAAe,SAAW,WACvC,UACAA,EAAe,SAAW,UAC1B,UACAA,EAAe,SAAW,SAC1B,UACAA,EAAe,SAAW,YAC1B,UACAA,EAAe,SAAW,YAC1B,UACA,UAEJ,YAAaA,EAAe,SAAW,WACrC,UACEA,EAAe,SAAW,UAC1B,UACAA,EAAe,SAAW,SAC1B,UACAA,EAAe,SAAW,YAC1B,UACAA,EAAe,SAAW,YAC1B,UACA,SAAA,EAGJ,CACJ,EACMuH,GAAoBC,GAAc,CAChC,KAAA,CAAE,cAAAC,GAAkBD,EAAK,MAC3B,GAAAC,EAAc,OAAS,YAAa,CAChC,MAAApC,EAAc1F,EAAa,KAAM+H,GAAWA,EAAE,KAAOF,EAAK,MAAM,EAAE,EACpEnC,IACFtD,GAAuBsD,CAAW,EAClC1D,EAAiB,EAAI,EACvB,SACS8F,EAAc,OAAS,MAAO,CACjC,MAAAE,EAAiB3H,EAAe,KAAMqE,GAAYA,EAAG,KAAOmD,EAAK,MAAM,EAAE,EAC3EG,IACF1F,GAA0B0F,CAAc,EACxC9F,EAAoB,EAAI,EAC1B,CAEJ,EACI,GAAAzB,IAAWT,EAAa,SAAW,EACrC,aAAQiI,GAAiB,EAAA,EAEvB,GAAAxH,IAAWJ,EAAe,SAAW,EACvC,aAAQ4H,GAAiB,EAAA,EAE3B,GAAItH,GAAc,OAAAd,EAAAA,IAACqI,GAAM,CAAA,SAAS,QAAS,SAAMvH,GAAA,EAE3C,MAAAwH,IAAcpF,GAAO,GAAKc,EAC1BuE,GAAWD,GAAatE,EACxBwE,GAAwBlI,EAAqB,MAAMgI,GAAYC,EAAQ,EACvEE,GAAY,KAAK,KAAKnI,EAAqB,OAAS0D,CAAW,EAE/D0E,IAAgBtF,GAAS,GAAKY,EAC9B2E,GAAcD,GAAgB1E,EAC9B4E,GAA2BlI,EAAwB,MAAMgI,GAAeC,EAAW,EACnFE,GAAe,KAAK,KAAKnI,EAAwB,OAASsD,CAAW,EA6BrE8E,IA3BoB,CAACtF,EAAakB,IAA2B,CAC7D,MAAAqE,MAAU,KACVC,EAAaC,GAAWF,CAAG,EAC3BG,EAAW5J,GAASyJ,CAAG,EAEtBvF,OAAAA,EAAK,IAAK2F,GAAQ,CAEjB,MAAAC,GAAQ,OAAOD,EAAI,EAAE,EAGrBE,EAAwB3E,EAAgB,OAC3CG,GAAO,OAAOA,EAAG,MAAM,IAAMuE,IAASvE,EAAG,SAAW,UACvD,EAGMyE,GAAqBD,EAAsB,OAAQxE,GAAO,CACxD,MAAA0E,EAAkBtD,EAASpB,EAAG,UAAU,EACvC,OAAA0E,GAAmBP,GAAcO,GAAmBL,CAAA,CAC5D,EAEM,MAAA,CACL,GAAGC,EACH,mBAAoBE,EAAsB,OAC1C,mBAAoBC,GAAmB,MACzC,CAAA,CACD,CACH,GAC+C9F,EAAMhD,CAAc,EAGjE,cACGP,EACC,CAAA,SAAA,CAAAD,EAAAA,IAACC,GAAI,GAAI,CAAE,QAAS,OAAQ,eAAgB,gBAAiB,WAAY,SAAU,GAAI,GACrF,eAACuJ,EAAW,CAAA,QAAQ,KAAK,WAAW,OAAO,kCAE3C,CACF,CAAA,QAGCvJ,EAAI,CAAA,GAAI,CAAE,aAAc,EAAG,YAAa,WACvC,SAAAwJ,EAAAA,KAACC,IAAK,MAAOpG,EAAU,SAAUsE,GAAiB,aAAW,wBAC3D,SAAA,CAAC5H,EAAAA,IAAA2J,GAAA,CAAI,MAAM,uBAAwB,CAAA,EACnC3J,EAAAA,IAAC2J,GAAI,CAAA,MAAM,kBAAmB,CAAA,EAC9B3J,EAAAA,IAAC2J,IAAI,MAAM,gBAAgB,KAAO3J,MAAA4J,GAAA,CAAU,CAAA,EAAI,aAAa,OAAQ,CAAA,EACrE5J,EAAAA,IAAC2J,GAAI,CAAA,MAAM,WAAY,CAAA,CAAA,CAAA,CACzB,CACF,CAAA,EAGCF,EAAA,KAAA/J,GAAA,CAAS,MAAO4D,EAAU,MAAO,EAC9B,SAAA,CAACmG,EAAAA,KAAAxJ,EAAA,CAAI,GAAI,CAAE,QAAS,OAAQ,eAAgB,gBAAiB,WAAY,SAAU,GAAI,CAAA,EACzF,SAAA,CAAAD,MAACwJ,EAAW,CAAA,QAAQ,KAAK,WAAW,OAAO,SAE3C,mCAAA,EACAxJ,EAAA,IAAC6J,EAAA,CACC,QAAQ,WACR,gBAAYC,GAAe,EAAA,EAC3B,QAAS,IAAM/H,GAAe,CAACD,EAAW,EAC3C,SAAA,SAAA,CAAA,CAED,EACE,EAEF2H,OAACM,GAAM,GAAI,CAAE,EAAG,EAAG,GAAI,CACrB,EAAA,SAAA,CAAA/J,EAAA,IAACgK,GAAA,CACC,YAAY,qDACZ,QAAQ,WACR,KAAK,QACL,UAAS,GACT,MAAOhJ,EACP,SAAWiJ,GAAMhJ,GAAegJ,EAAE,OAAO,KAAK,EAC9C,WAAY,CACV,eACGjK,EAAAA,IAAAkK,GAAA,CAAe,SAAS,QACvB,SAAAlK,EAAA,IAACmK,KAAW,CACd,CAAA,CAEJ,EACA,GAAI,CAAE,GAAIrI,GAAc,EAAI,CAAE,CAAA,CAChC,EAECA,IACE2H,EAAAA,KAAAxJ,EAAA,CAAI,GAAI,CAAE,GAAI,CACb,EAAA,SAAA,CAAAwJ,EAAA,KAACW,EAAK,CAAA,UAAS,GAAC,QAAS,EACvB,SAAA,CAAApK,MAACoK,EAAK,CAAA,KAAI,GAAC,GAAI,GAAI,GAAI,EAAG,GAAI,EAC5B,SAACX,EAAA,KAAAY,EAAA,CAAY,KAAK,QAAQ,UAAS,GACjC,SAAA,CAAArK,EAAAA,IAACsK,GAAW,SAAM,QAAA,CAAA,EAClBb,EAAA,KAACc,EAAA,CACC,MAAOnJ,EACP,MAAM,SACN,SAAW6I,GAAM5I,GAAgB4I,EAAE,OAAO,KAAK,EAE/C,SAAA,CAACjK,EAAA,IAAAwK,EAAA,CAAS,MAAM,GAAG,SAAY,eAAA,EAC9BxK,EAAA,IAAAwK,EAAA,CAAS,MAAM,UAAU,SAAO,UAAA,EAChCxK,EAAA,IAAAwK,EAAA,CAAS,MAAM,WAAW,SAAQ,WAAA,EAClCxK,EAAA,IAAAwK,EAAA,CAAS,MAAM,SAAS,SAAM,SAAA,EAC9BxK,EAAA,IAAAwK,EAAA,CAAS,MAAM,YAAY,SAAS,YAAA,EACpCxK,EAAA,IAAAwK,EAAA,CAAS,MAAM,YAAY,SAAS,WAAA,CAAA,CAAA,CAAA,CAAA,CAEvC,CAAA,CACF,CACF,CAAA,EAECxK,MAAAoK,EAAA,CAAK,KAAI,GAAC,GAAI,GAAI,GAAI,EAAG,GAAI,EAC5B,SAACX,EAAA,KAAAY,EAAA,CAAY,KAAK,QAAQ,UAAS,GACjC,SAAA,CAAArK,EAAAA,IAACsK,GAAW,SAAI,MAAA,CAAA,EAChBb,EAAA,KAACc,EAAA,CACC,MAAO/I,EACP,MAAM,OACN,SAAWyI,GAAMxI,GAAcwI,EAAE,OAAO,KAAK,EAE7C,SAAA,CAACjK,EAAA,IAAAwK,EAAA,CAAS,MAAM,GAAG,SAAS,YAAA,EAC3BxK,EAAA,IAAAwK,EAAA,CAAS,MAAM,QAAQ,SAAK,QAAA,EAC5BxK,EAAA,IAAAwK,EAAA,CAAS,MAAM,WAAW,SAAQ,WAAA,EAClCxK,EAAA,IAAAwK,EAAA,CAAS,MAAM,WAAW,SAAS,YAAA,EACnCxK,EAAA,IAAAwK,EAAA,CAAS,MAAM,WAAW,SAAY,eAAA,EACtCxK,EAAA,IAAAwK,EAAA,CAAS,MAAM,OAAO,SAAI,MAAA,CAAA,CAAA,CAAA,CAAA,CAC7B,CAAA,CACF,CACF,CAAA,EAECxK,MAAAoK,EAAA,CAAK,KAAI,GAAC,GAAI,GAAI,GAAI,EAAG,GAAI,EAC5B,SAACX,EAAA,KAAAY,EAAA,CAAY,KAAK,QAAQ,UAAS,GACjC,SAAA,CAAArK,EAAAA,IAACsK,GAAW,SAAU,YAAA,CAAA,EACtBb,EAAA,KAACc,EAAA,CACC,MAAO3I,EACP,MAAM,aACN,SAAWqI,GAAMpI,EAAaoI,EAAE,OAAO,KAAK,EAE5C,SAAA,CAACjK,EAAA,IAAAwK,EAAA,CAAS,MAAM,GAAG,SAAgB,mBAAA,EAClChH,EAAK,IAAK2F,GACRnJ,EAAAA,IAAAwK,EAAA,CAAsB,MAAOrB,EAAI,GAC/B,SAAAA,EAAI,IADQ,EAAAA,EAAI,EAEnB,CACD,CAAA,CAAA,CAAA,CACH,CAAA,CACF,CACF,CAAA,CAAA,EACF,EAEAnJ,EAAAA,IAACC,EAAI,CAAA,GAAI,CAAE,GAAI,EAAG,QAAS,OAAQ,eAAgB,UACjD,EAAA,SAAAD,EAAA,IAAC6J,EAAA,CACC,QAAQ,OACR,MAAM,YACN,KAAK,QACL,QAAS,IAAM,CACb5I,GAAe,EAAE,EACjBI,GAAgB,EAAE,EAClBI,GAAc,EAAE,EAChBI,EAAa,EAAE,CACjB,EACD,SAAA,eAAA,CAAA,CAGH,CAAA,CAAA,CACF,CAAA,CAAA,EAEJ,EACC7B,MAAAyK,GAAA,CAAe,UAAWV,EACzB,gBAACW,GACC,CAAA,SAAA,CAAC1K,EAAA,IAAA2K,GAAA,CACC,gBAACC,EACC,CAAA,SAAA,CAAA5K,EAAAA,IAAC6K,GAAU,SAAI,MAAA,CAAA,EACf7K,EAAAA,IAAC6K,GAAU,SAAS,WAAA,CAAA,EACpB7K,EAAAA,IAAC6K,GAAU,SAAU,YAAA,CAAA,EACrB7K,EAAAA,IAAC6K,GAAU,SAAQ,UAAA,CAAA,EACnB7K,EAAAA,IAAC6K,GAAU,SAAQ,UAAA,CAAA,EACnB7K,EAAAA,IAAC6K,GAAU,SAAM,QAAA,CAAA,EACjB7K,EAAAA,IAAC6K,GAAU,SAAO,SAAA,CAAA,CAAA,CAAA,CACpB,CACF,CAAA,EAEA7K,EAAAA,IAAC8K,GACE,CAAA,SAAAtC,GAAsB,OAAS,EAC9BA,GAAsB,IAAK3C,GACzB4D,EAAA,KAACmB,EACC,CAAA,SAAA,CAAC5K,EAAA,IAAA6K,EAAA,CACC,gBAAC5K,EACC,CAAA,SAAA,CAAAD,EAAA,IAACwJ,EAAW,CAAA,QAAQ,QAAQ,WAAW,SACpC,SAAA3D,EAAY,OAAO,MAAM,MAAM,GAAG,EAAE,CAAC,EACxC,EACC4D,EAAA,KAAAD,EAAA,CAAW,QAAQ,UAAU,MAAM,iBACjC,SAAA,CAAA3D,EAAY,OAAO,WAAW,MAAIA,EAAY,OAAO,IAAA,CACxD,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EACA7F,EAAA,IAAC6K,EACC,CAAA,SAAApB,EAAAA,KAACxJ,EACC,CAAA,SAAA,CAAAD,EAAAA,IAACwJ,GAAW,QAAQ,QAAQ,WAAW,SACpC,SAAA3D,EAAY,WAAW,IAC1B,CAAA,EACC4D,EAAA,KAAAD,EAAA,CAAW,QAAQ,UAAU,MAAM,iBACjC,SAAA,CAAA3D,EAAY,WAAW,SAAS,MAAIA,EAAY,MAAM,IAAA,CACzD,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EACA7F,MAAC6K,GACE,SAAOE,EAAA9E,EAASJ,EAAY,UAAU,EAAG,MAAM,EAClD,EACA7F,MAAC6K,GACE,SAAOE,EAAA9E,EAASJ,EAAY,QAAQ,EAAG,MAAM,EAChD,EACA7F,EAAAA,IAAC6K,EACE,CAAA,SAAAhF,EAAY,QACf,CAAA,EACC7F,EAAA,IAAA6K,EAAA,CACE,SAAcvD,GAAAzB,EAAY,MAAM,EACnC,EACA7F,EAAAA,IAAC6K,EACC,CAAA,SAAApB,EAAAA,KAACxJ,EAAI,CAAA,GAAI,CAAE,QAAS,OAAQ,IAAK,CAAA,EAC/B,SAAA,CAACD,EAAAA,IAAAgL,GAAA,CAAQ,MAAM,eACb,SAAAhL,EAAA,IAACiL,GAAA,CACC,KAAK,QACL,QAAS,IAAMhE,GAAkBpB,CAAW,EAE5C,SAAA7F,EAAAA,IAACkL,GAAS,CAAA,SAAS,OAAQ,CAAA,CAAA,CAAA,EAE/B,EAECrF,EAAY,SAAW,WAEpB4D,EAAA,KAAA0B,EAAA,SAAA,CAAA,SAAA,CAAAnL,EAAA,IAAC6J,EAAA,CACC,KAAK,QACL,MAAM,UACN,QAAQ,WACR,QAAS,IAAM1C,EAAoBtB,EAAa,SAAS,EACzD,gBAAYuF,GAAgB,EAAA,EAC7B,SAAA,SAAA,CAED,EACApL,EAAA,IAAC6J,EAAA,CACC,KAAK,QACL,MAAM,QACN,QAAQ,WACR,QAAS,IAAM1C,EAAoBtB,EAAa,MAAM,EACtD,gBAAYwF,GAAW,EAAA,EACxB,SAAA,MAAA,CAAA,CAED,CACF,CAAA,CAAA,CAAA,CAEJ,CACF,CAAA,CAAA,CAnEa,EAAAxF,EAAY,EAoE3B,CACD,EAED7F,EAAA,IAAC4K,EACC,CAAA,SAAAnB,EAAAA,KAACoB,EAAU,CAAA,QAAS,EAAG,MAAM,SAC3B,SAAA,CAAC7K,EAAAA,IAAAwJ,EAAA,CAAW,QAAQ,YAAY,GAAI,CAAE,GAAI,CAAA,EAAK,SAE/C,uBAAA,CAAA,QACCA,EAAW,CAAA,QAAQ,QAAQ,MAAM,iBAAiB,SAEnD,8CAAA,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,CAAA,CAAA,CAAA,CAEF,CACF,CAAA,EAGCf,GAAY,GACVzI,EAAAA,IAAAC,EAAA,CAAI,GAAI,CAAE,QAAS,OAAQ,eAAgB,SAAU,GAAI,CACxD,EAAA,SAAAD,EAAA,IAACsL,GAAA,CACC,MAAO7C,GACP,KAAAvF,GACA,SAAUuE,GACV,MAAM,SAAA,CAAA,CAEV,CAAA,CAAA,EAEJ,EAGCgC,EAAA,KAAA/J,GAAA,CAAS,MAAO4D,EAAU,MAAO,EAChC,SAAA,CAACmG,EAAAA,KAAAxJ,EAAA,CAAI,GAAI,CAAE,QAAS,OAAQ,eAAgB,gBAAiB,WAAY,SAAU,GAAI,CAAA,EACvF,SAAA,CAAAD,MAACwJ,EAAW,CAAA,QAAQ,KAAK,WAAW,OAAO,SAE3C,6BAAA,EACAxJ,EAAA,IAAC6J,EAAA,CACC,QAAQ,WACR,gBAAYC,GAAe,EAAA,EAC3B,QAAS,IAAM7H,GAAkB,CAACD,EAAc,EACjD,SAAA,SAAA,CAAA,CAED,EACE,EAEFyH,OAACM,GAAM,GAAI,CAAE,EAAG,EAAG,GAAI,CACrB,EAAA,SAAA,CAAA/J,EAAA,IAACgK,GAAA,CACC,YAAY,gDACZ,QAAQ,WACR,KAAK,QACL,UAAS,GACT,MAAO9I,EACP,SAAW+I,GAAM9I,GAAkB8I,EAAE,OAAO,KAAK,EACjD,WAAY,CACV,eACGjK,EAAAA,IAAAkK,GAAA,CAAe,SAAS,QACvB,SAAAlK,EAAA,IAACmK,KAAW,CACd,CAAA,CAEJ,EACA,GAAI,CAAE,GAAInI,GAAiB,EAAI,CAAE,CAAA,CACnC,EAECA,IACEyH,EAAAA,KAAAxJ,EAAA,CAAI,GAAI,CAAE,GAAI,CACb,EAAA,SAAA,CAAAwJ,EAAA,KAACW,EAAK,CAAA,UAAS,GAAC,QAAS,EACvB,SAAA,CAAApK,MAACoK,EAAK,CAAA,KAAI,GAAC,GAAI,GAAI,GAAI,EAAG,GAAI,EAC5B,SAACX,EAAA,KAAAY,EAAA,CAAY,KAAK,QAAQ,UAAS,GACjC,SAAA,CAAArK,EAAAA,IAACsK,GAAW,SAAM,QAAA,CAAA,EAClBb,EAAA,KAACc,EAAA,CACC,MAAOjJ,EACP,MAAM,SACN,SAAW2I,GAAM1I,GAAmB0I,EAAE,OAAO,KAAK,EAElD,SAAA,CAACjK,EAAA,IAAAwK,EAAA,CAAS,MAAM,GAAG,SAAY,eAAA,EAC9BxK,EAAA,IAAAwK,EAAA,CAAS,MAAM,UAAU,SAAO,UAAA,EAChCxK,EAAA,IAAAwK,EAAA,CAAS,MAAM,WAAW,SAAQ,WAAA,EAClCxK,EAAA,IAAAwK,EAAA,CAAS,MAAM,SAAS,SAAM,SAAA,EAC9BxK,EAAA,IAAAwK,EAAA,CAAS,MAAM,YAAY,SAAS,YAAA,EACpCxK,EAAA,IAAAwK,EAAA,CAAS,MAAM,YAAY,SAAS,WAAA,CAAA,CAAA,CAAA,CAAA,CAEvC,CAAA,CACF,CACF,CAAA,EAECxK,MAAAoK,EAAA,CAAK,KAAI,GAAC,GAAI,GAAI,GAAI,EAAG,GAAI,EAC5B,SAACX,EAAA,KAAAY,EAAA,CAAY,KAAK,QAAQ,UAAS,GACjC,SAAA,CAAArK,EAAAA,IAACsK,GAAW,SAAI,MAAA,CAAA,EAChBb,EAAA,KAACc,EAAA,CACC,MAAO7I,EACP,MAAM,OACN,SAAWuI,GAAMtI,GAAiBsI,EAAE,OAAO,KAAK,EAEhD,SAAA,CAACjK,EAAA,IAAAwK,EAAA,CAAS,MAAM,GAAG,SAAS,YAAA,EAC3BxK,EAAA,IAAAwK,EAAA,CAAS,MAAM,QAAQ,SAAK,QAAA,EAC5BxK,EAAA,IAAAwK,EAAA,CAAS,MAAM,WAAW,SAAQ,WAAA,EAClCxK,EAAA,IAAAwK,EAAA,CAAS,MAAM,WAAW,SAAS,YAAA,EACnCxK,EAAA,IAAAwK,EAAA,CAAS,MAAM,WAAW,SAAY,eAAA,EACtCxK,EAAA,IAAAwK,EAAA,CAAS,MAAM,OAAO,SAAI,MAAA,CAAA,CAAA,CAAA,CAAA,CAC7B,CAAA,CACF,CACF,CAAA,EAECxK,MAAAoK,EAAA,CAAK,KAAI,GAAC,GAAI,GAAI,GAAI,EAAG,GAAI,EAC5B,SAACX,EAAA,KAAAY,EAAA,CAAY,KAAK,QAAQ,UAAS,GACjC,SAAA,CAAArK,EAAAA,IAACsK,GAAW,SAAU,YAAA,CAAA,EACtBb,EAAA,KAACc,EAAA,CACC,MAAO3I,EACP,MAAM,aACN,SAAWqI,GAAMpI,EAAaoI,EAAE,OAAO,KAAK,EAE5C,SAAA,CAACjK,EAAA,IAAAwK,EAAA,CAAS,MAAM,GAAG,SAAgB,mBAAA,EAClChH,EAAK,IAAK2F,GACRnJ,EAAAA,IAAAwK,EAAA,CAAsB,MAAOrB,EAAI,GAC/B,SAAAA,EAAI,IADQ,EAAAA,EAAI,EAEnB,CACD,CAAA,CAAA,CAAA,CACH,CAAA,CACF,CACF,CAAA,CAAA,EACF,EAEAnJ,EAAAA,IAACC,EAAI,CAAA,GAAI,CAAE,GAAI,EAAG,QAAS,OAAQ,eAAgB,UACjD,EAAA,SAAAD,EAAA,IAAC6J,EAAA,CACC,QAAQ,OACR,MAAM,YACN,KAAK,QACL,QAAS,IAAM,CACb1I,GAAkB,EAAE,EACpBI,GAAmB,EAAE,EACrBI,GAAiB,EAAE,EACnBE,EAAa,EAAE,CACjB,EACD,SAAA,eAAA,CAAA,CAGH,CAAA,CAAA,CACF,CAAA,CAAA,EAEJ,EACC7B,MAAAyK,GAAA,CAAe,UAAWV,EACzB,gBAACW,GACC,CAAA,SAAA,CAAC1K,EAAA,IAAA2K,GAAA,CACC,gBAACC,EACC,CAAA,SAAA,CAAA5K,EAAAA,IAAC6K,GAAU,SAAI,MAAA,CAAA,EACf7K,EAAAA,IAAC6K,GAAU,SAAG,KAAA,CAAA,EACd7K,EAAAA,IAAC6K,GAAU,SAAU,YAAA,CAAA,EACrB7K,EAAAA,IAAC6K,GAAU,SAAQ,UAAA,CAAA,EACnB7K,EAAAA,IAAC6K,GAAU,SAAM,QAAA,CAAA,EACjB7K,EAAAA,IAAC6K,GAAU,SAAO,SAAA,CAAA,CAAA,CAAA,CACpB,CACF,CAAA,EACA7K,EAAAA,IAAC8K,GACE,CAAA,SAAAlC,GAAyB,OAAS,EACjCA,GAAyB,IAAKpI,GAC5BiJ,EAAA,KAACmB,EACC,CAAA,SAAA,CAAC5K,EAAA,IAAA6K,EAAA,CACC,gBAAC5K,EACD,CAAA,SAAA,CAAAD,EAAA,IAACwJ,EAAW,CAAA,QAAQ,QAAQ,WAAW,SACpC,SAAAhJ,EAAe,MAAM,OAAO,MAAM,GAAG,EAAE,CAAC,GAAK,eAChD,EACCiJ,EAAA,KAAAD,EAAA,CAAW,QAAQ,UAAU,MAAM,iBACjC,SAAA,CAAAhJ,EAAe,MAAM,YAAc,qBAAsB,IACzDA,EAAe,MAAM,MAAQ,cAAA,CAChC,CAAA,CAAA,CAAA,CACA,CACF,CAAA,EACAR,EAAA,IAAC6K,EACC,CAAA,SAAApB,EAAAA,KAACxJ,EACC,CAAA,SAAA,CAACD,EAAAA,IAAAwJ,EAAA,CAAW,QAAQ,QAAQ,WAAW,SACpC,SAAAhJ,EAAe,KAAK,IACvB,CAAA,EACAR,EAAAA,IAACwJ,GAAW,QAAQ,UAAU,MAAM,iBACjC,SAAAhJ,EAAe,KAAK,QACvB,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EACAR,MAAC6K,GACE,SAAOE,EAAA9E,EAASzF,EAAe,UAAU,EAAG,MAAM,EACrD,EACAR,MAAC6K,GACE,SAAOE,EAAA9E,EAASzF,EAAe,QAAQ,EAAG,MAAM,EACnD,EACCR,EAAA,IAAA6K,EAAA,CACE,SAAcrK,GAAAA,EAAe,MAAM,EACtC,EAEAR,EAAAA,IAAC6K,EACC,CAAA,SAAApB,EAAAA,KAACxJ,EAAI,CAAA,GAAI,CAAE,QAAS,OAAQ,IAAK,CAAA,EAC/B,SAAA,CAACD,EAAAA,IAAAgL,GAAA,CAAQ,MAAM,eACb,SAAAhL,EAAA,IAACiL,GAAA,CACC,KAAK,QACL,QAAS,IAAM/D,GAAqB1G,CAAc,EAElD,SAAAR,EAAAA,IAACkL,GAAS,CAAA,SAAS,OAAQ,CAAA,CAAA,CAAA,EAE/B,EACC1K,EAAe,SAAW,WAEvBiJ,EAAA,KAAA0B,EAAA,SAAA,CAAA,SAAA,CAAAnL,EAAA,IAAC6J,EAAA,CACC,KAAK,QACL,MAAM,UACN,QAAQ,WACR,QAAS,IAAMxC,EAAuB7G,EAAgB,SAAS,EAC/D,gBAAY4K,GAAgB,EAAA,EAC7B,SAAA,SAAA,CAED,EACApL,EAAA,IAAC6J,EAAA,CACC,KAAK,QACL,MAAM,QACN,QAAQ,WACR,QAAS,IAAMxC,EAAuB7G,EAAgB,MAAM,EAC5D,gBAAY6K,GAAW,EAAA,EACxB,SAAA,MAAA,CAAA,CAED,CACF,CAAA,CAAA,CAAA,CAEJ,CACF,CAAA,CAAA,CAjEa7K,EAAAA,EAAe,EAkE9B,CACD,EAEDR,EAAA,IAAC4K,EACC,CAAA,SAAAnB,EAAAA,KAACoB,EAAU,CAAA,QAAS,EAAG,MAAM,SAC3B,SAAA,CAAC7K,EAAAA,IAAAwJ,EAAA,CAAW,QAAQ,YAAY,GAAI,CAAE,GAAI,CAAA,EAAK,SAE/C,2BAAA,CAAA,QACCA,EAAW,CAAA,QAAQ,QAAQ,MAAM,iBAAiB,SAEnD,8CAAA,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAEDX,GAAe,GACb7I,EAAAA,IAAAC,EAAA,CAAI,GAAI,CAAE,QAAS,OAAQ,eAAgB,SAAU,GAAI,CACxD,EAAA,SAAAD,EAAA,IAACsL,GAAA,CACC,MAAOzC,GACP,KAAMzF,GACN,SAAUuE,GACV,MAAM,SAAA,CAAA,CAEV,CAAA,CAAA,EAEF,EAGC3H,EAAA,IAAAN,GAAA,CAAS,MAAO4D,EAAU,MAAO,EAChC,SAACtD,EAAA,IAAA+J,EAAA,CAAM,GAAI,CAAE,EAAG,CAAA,EACd,SAAA/J,EAAA,IAACuL,GAAA,CACC,QAAS,CAACC,GAAeC,GAAgBC,EAAiB,EAC1D,YAAY,eACZ,cAAe,CACb,KAAM,kBACN,OAAQ,QACR,MAAO,uCACT,EACA,OAAQ5D,GACR,WAAYC,GACZ,OAAO,OACP,YAAa,IACb,YAAY,WACZ,YAAY,UAAA,GAGhB,CACF,CAAA,EAGA/H,EAAA,IAACN,GAAS,CAAA,MAAO4D,EAAU,MAAO,EAChC,SAAAmG,EAAAA,KAACW,EAAK,CAAA,UAAS,GAAC,QAAS,EAEvB,SAAA,CAACpK,EAAA,IAAAoK,EAAA,CAAK,KAAI,GAAC,GAAI,GAAI,GAAI,EACrB,SAAApK,EAAAA,IAAC2L,EACC,CAAA,SAAAlC,EAAAA,KAACmC,EACC,CAAA,SAAA,CAAA5L,EAAAA,IAACwJ,GAAW,QAAQ,KAAK,aAAY,GAAC,WAAW,OAAO,SAExD,sCAAA,CAAA,EACAC,EAAAA,KAACxJ,EAAI,CAAA,GAAI,CAAE,QAAS,OAAQ,eAAgB,gBAAiB,GAAI,CAAA,EAC/D,SAAA,CAAAwJ,OAACxJ,GAAI,GAAI,CAAE,UAAW,SAAU,EAAG,CACjC,EAAA,SAAA,CAAAD,EAAA,IAACwJ,EAAW,CAAA,QAAQ,KAAK,MAAM,eAC5B,SAAArJ,EAAa,OAAO+H,GAAKA,EAAE,SAAW,SAAS,EAAE,OACpD,EACClI,EAAA,IAAAwJ,EAAA,CAAW,QAAQ,QAAQ,SAAO,SAAA,CAAA,CAAA,EACrC,EACAC,OAACxJ,GAAI,GAAI,CAAE,UAAW,SAAU,EAAG,CACjC,EAAA,SAAA,CAAAD,EAAA,IAACwJ,EAAW,CAAA,QAAQ,KAAK,MAAM,eAC5B,SAAArJ,EAAa,OAAO+H,GAAKA,EAAE,SAAW,UAAU,EAAE,OACrD,EACClI,EAAA,IAAAwJ,EAAA,CAAW,QAAQ,QAAQ,SAAQ,UAAA,CAAA,CAAA,EACtC,EACAC,OAACxJ,GAAI,GAAI,CAAE,UAAW,SAAU,EAAG,CACjC,EAAA,SAAA,CAAAD,EAAA,IAACwJ,EAAW,CAAA,QAAQ,KAAK,MAAM,aAC5B,SAAArJ,EAAa,OAAO+H,GAAKA,EAAE,SAAW,QAAQ,EAAE,OACnD,EACClI,EAAA,IAAAwJ,EAAA,CAAW,QAAQ,QAAQ,SAAM,QAAA,CAAA,CAAA,EACpC,EACAC,OAACxJ,GAAI,GAAI,CAAE,UAAW,SAAU,EAAG,CACjC,EAAA,SAAA,CAAAD,EAAA,IAACwJ,EAAW,CAAA,QAAQ,KAAK,MAAM,iBAC5B,SAAArJ,EAAa,OAAO+H,GAAKA,EAAE,SAAW,WAAW,EAAE,OACtD,EACClI,EAAA,IAAAwJ,EAAA,CAAW,QAAQ,QAAQ,SAAS,WAAA,CAAA,CAAA,EACvC,EAEAC,OAACxJ,GAAI,GAAI,CAAE,UAAW,SAAU,EAAG,CACjC,EAAA,SAAA,CAAAD,EAAA,IAACwJ,EAAW,CAAA,QAAQ,KAAK,MAAM,iBAC5B,SAAArJ,EAAa,OAAO+H,GAAKA,EAAE,SAAW,WAAW,EAAE,OACtD,EACClI,EAAA,IAAAwJ,EAAA,CAAW,QAAQ,QAAQ,SAAS,WAAA,CAAA,CAAA,CACvC,CAAA,CAAA,EACF,QACCqC,EAAQ,CAAA,GAAI,CAAE,GAAI,GAAK,EACvBpC,EAAA,KAAAD,EAAA,CAAW,QAAQ,YAAY,aAAY,GAAC,SAAA,CAAA,yBACpBrJ,EAAa,OAAY+H,GAAA,CACxC,MAAAlC,EAAYC,EAASiC,EAAE,UAAU,EACvC,OAAOhC,GAAQF,CAAS,CAAA,CACzB,EAAE,MAAA,EACL,EACCyD,EAAA,KAAAD,EAAA,CAAW,QAAQ,YAAY,aAAY,GAAC,SAAA,CAAA,4BACjBrJ,EAAa,OAAY+H,GAAA,CAC3C,MAAAlC,EAAYC,EAASiC,EAAE,UAAU,EACvC,OAAO/B,GAAWH,CAAS,CAAA,CAC5B,EAAE,MAAA,CACL,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,EAEAhG,EAAA,IAACoK,EAAK,CAAA,KAAI,GAAC,GAAI,GAAI,GAAI,EACrB,SAAApK,EAAAA,IAAC2L,EACC,CAAA,SAAAlC,EAAAA,KAACmC,EACC,CAAA,SAAA,CAAA5L,EAAAA,IAACwJ,GAAW,QAAQ,KAAK,aAAY,GAAC,WAAW,OAAO,SAExD,gCAAA,CAAA,EACAC,EAAAA,KAACxJ,EAAI,CAAA,GAAI,CAAE,QAAS,OAAQ,eAAgB,gBAAiB,GAAI,CAAA,EAC/D,SAAA,CAAAwJ,OAACxJ,GAAI,GAAI,CAAE,UAAW,SAAU,EAAG,CACjC,EAAA,SAAA,CAAAD,EAAA,IAACwJ,EAAW,CAAA,QAAQ,KAAK,MAAM,eAC5B,SAAAhJ,EAAe,OAAO0H,GAAKA,EAAE,SAAW,SAAS,EAAE,OACtD,EACClI,EAAA,IAAAwJ,EAAA,CAAW,QAAQ,QAAQ,SAAO,SAAA,CAAA,CAAA,EACrC,EACAC,OAACxJ,GAAI,GAAI,CAAE,UAAW,SAAU,EAAG,CACjC,EAAA,SAAA,CAAAD,EAAA,IAACwJ,EAAW,CAAA,QAAQ,KAAK,MAAM,eAC5B,SAAAhJ,EAAe,OAAO0H,GAAKA,EAAE,SAAW,UAAU,EAAE,OACvD,EACClI,EAAA,IAAAwJ,EAAA,CAAW,QAAQ,QAAQ,SAAQ,UAAA,CAAA,CAAA,EACtC,EACAC,OAACxJ,GAAI,GAAI,CAAE,UAAW,SAAU,EAAG,CACjC,EAAA,SAAA,CAAAD,EAAA,IAACwJ,EAAW,CAAA,QAAQ,KAAK,MAAM,aAC5B,SAAAhJ,EAAe,OAAO0H,GAAKA,EAAE,SAAW,QAAQ,EAAE,OACrD,EACClI,EAAA,IAAAwJ,EAAA,CAAW,QAAQ,QAAQ,SAAM,QAAA,CAAA,CAAA,EACpC,EACAC,OAACxJ,GAAI,GAAI,CAAE,UAAW,SAAU,EAAG,CACjC,EAAA,SAAA,CAAAD,EAAA,IAACwJ,EAAW,CAAA,QAAQ,KAAK,MAAM,iBAC5B,SAAAhJ,EAAe,OAAO0H,GAAKA,EAAE,SAAW,WAAW,EAAE,OACxD,EACClI,EAAA,IAAAwJ,EAAA,CAAW,QAAQ,QAAQ,SAAS,WAAA,CAAA,CAAA,EACvC,EACAC,OAACxJ,GAAI,GAAI,CAAE,UAAW,SAAU,EAAG,CACjC,EAAA,SAAA,CAAAD,EAAA,IAACwJ,EAAW,CAAA,QAAQ,KAAK,MAAM,iBAC5B,SAAAhJ,EAAe,OAAO0H,GAAKA,EAAE,SAAW,WAAW,EAAE,OACxD,EACClI,EAAA,IAAAwJ,EAAA,CAAW,QAAQ,QAAQ,SAAS,WAAA,CAAA,CAAA,CACvC,CAAA,CAAA,EACF,QACCqC,EAAQ,CAAA,GAAI,CAAE,GAAI,GAAK,EACvBpC,EAAA,KAAAD,EAAA,CAAW,QAAQ,YAAY,aAAY,GAAC,SAAA,CAAA,4BACjBhJ,EAAe,OAAY0H,GAAA,CAC7C,MAAAlC,EAAYC,EAASiC,EAAE,UAAU,EACvC,OAAOhC,GAAQF,CAAS,CAAA,CACzB,EAAE,MAAA,EACL,EACCyD,EAAA,KAAAD,EAAA,CAAW,QAAQ,YAAY,aAAY,GAAC,SAAA,CAAA,4BACjBhJ,EAAe,OAAY0H,GAAA,CAC7C,MAAAlC,EAAYC,EAASiC,EAAE,UAAU,EACvC,OAAO/B,GAAWH,CAAS,CAAA,CAC5B,EAAE,MAAA,CACL,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,EAEAhG,EAAA,IAACoK,EAAK,CAAA,KAAI,GAAC,GAAI,GAAI,GAAI,EACrB,SAAApK,EAAAA,IAAC2L,EACC,CAAA,SAAAlC,EAAAA,KAACmC,EACC,CAAA,SAAA,CAAA5L,EAAAA,IAACwJ,GAAW,QAAQ,KAAK,aAAY,GAAC,WAAW,OAAO,SAExD,uCAAA,CAAA,SACCsC,GACE,CAAA,SAAA,CAAA3L,EACE,OAAO+H,GAAKA,EAAE,SAAW,SAAS,EAClC,MAAM,EAAG,CAAC,EACV,IAAI,CAACrC,EAAa/F,WAChBG,EACC,CAAA,SAAA,CAAAwJ,EAAA,KAACxJ,EAAI,CAAA,GAAI,CAAE,GAAI,CACb,EAAA,SAAA,CAACwJ,EAAAA,KAAAxJ,EAAA,CAAI,GAAI,CAAE,QAAS,OAAQ,eAAgB,gBAAiB,WAAY,QAAA,EACvE,SAAA,CAAAD,EAAAA,IAACwJ,GAAW,QAAQ,QAAQ,WAAW,SACpC,SAAA3D,EAAY,WAAW,IAC1B,CAAA,EACC7F,EAAAA,IAAAwJ,EAAA,CAAW,QAAQ,UAAU,MAAM,iBACjC,SAAOuB,EAAA9E,EAASJ,EAAY,UAAU,EAAG,KAAK,CACjD,CAAA,CAAA,EACF,SACC2D,EAAW,CAAA,QAAQ,UAAU,QAAQ,QAAQ,MAAM,iBAAiB,SAAA,CAAA,iBACpD3D,EAAY,OAAO,KAAA,EACpC,SACC2D,EAAW,CAAA,QAAQ,UAAU,QAAQ,QAAQ,MAAM,iBACjD,SAAA,CAAAuB,EAAO9E,EAASJ,EAAY,UAAU,EAAG,KAAK,EAAE,MAAIkF,EAAO9E,EAASJ,EAAY,QAAQ,EAAG,GAAG,CAAA,EACjG,EACA4D,EAAAA,KAACxJ,EAAI,CAAA,GAAI,CAAE,GAAI,EAAG,QAAS,OAAQ,IAAK,CAAA,EACtC,SAAA,CAAAD,EAAA,IAAC6J,EAAA,CACC,KAAK,QACL,QAAQ,WACR,MAAM,UACN,QAAS,IAAM1C,EAAoBtB,EAAa,SAAS,EAC1D,SAAA,SAAA,CAED,EACA7F,EAAA,IAAC6J,EAAA,CACC,KAAK,QACL,QAAQ,WACR,MAAM,QACN,QAAS,IAAM1C,EAAoBtB,EAAa,MAAM,EACvD,SAAA,MAAA,CAAA,CAED,CACF,CAAA,CAAA,EACF,EACC/F,EAAQ,KAAK,IAAIK,EAAa,OAAY,GAAA,EAAE,SAAW,SAAS,EAAE,OAAQ,CAAC,EAAI,SAAM0L,EAAQ,CAAA,CAAA,CAAA,GAnCtFhG,EAAY,EAoCtB,CACD,EACF1F,EAAa,OAAO+H,GAAKA,EAAE,SAAW,SAAS,EAAE,SAAW,GAC3DlI,EAAAA,IAACC,EAAI,CAAA,GAAI,CAAE,GAAI,EAAG,UAAW,QAAA,EAC3B,SAAAD,EAAAA,IAACwJ,EAAW,CAAA,QAAQ,QAAQ,MAAM,iBAAiB,SAAA,yBAEnD,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,EAEAxJ,EAAA,IAACoK,EAAK,CAAA,KAAI,GAAC,GAAI,GAAI,GAAI,EACrB,SAAApK,EAAAA,IAAC2L,EACC,CAAA,SAAAlC,EAAAA,KAACmC,EACC,CAAA,SAAA,CAAA5L,EAAAA,IAACwJ,GAAW,QAAQ,KAAK,aAAY,GAAC,WAAW,OAAO,SAExD,iCAAA,CAAA,SACCsC,GACE,CAAA,SAAA,CAAAtL,EACE,OAAO0H,GAAKA,EAAE,SAAW,SAAS,EAClC,MAAM,EAAG,CAAC,EACV,IAAI,CAAC1H,EAAgBV,WACnBG,EACC,CAAA,SAAA,CAAAwJ,EAAA,KAACxJ,EAAI,CAAA,GAAI,CAAE,GAAI,CACb,EAAA,SAAA,CAACwJ,EAAAA,KAAAxJ,EAAA,CAAI,GAAI,CAAE,QAAS,OAAQ,eAAgB,gBAAiB,WAAY,QAAA,EACvE,SAAA,CAACD,EAAAA,IAAAwJ,EAAA,CAAW,QAAQ,QAAQ,WAAW,SACpC,SAAAhJ,EAAe,KAAK,IACvB,CAAA,EACCR,EAAAA,IAAAwJ,EAAA,CAAW,QAAQ,UAAU,MAAM,iBACjC,SAAOuB,EAAA9E,EAASzF,EAAe,UAAU,EAAG,KAAK,CACpD,CAAA,CAAA,EACF,SACCgJ,EAAW,CAAA,QAAQ,UAAU,QAAQ,QAAQ,MAAM,iBAAiB,SAAA,CAAA,iBACpDhJ,EAAe,OAAO,KAAA,EACvC,SACCgJ,EAAW,CAAA,QAAQ,UAAU,QAAQ,QAAQ,MAAM,iBACjD,SAAA,CAAAuB,EAAO9E,EAASzF,EAAe,UAAU,EAAG,KAAK,EAAE,MAAIuK,EAAO9E,EAASzF,EAAe,QAAQ,EAAG,GAAG,CAAA,EACvG,EACAiJ,EAAAA,KAACxJ,EAAI,CAAA,GAAI,CAAE,GAAI,EAAG,QAAS,OAAQ,IAAK,CAAA,EACtC,SAAA,CAAAD,EAAA,IAAC6J,EAAA,CACC,KAAK,QACL,QAAQ,WACR,MAAM,UACN,QAAS,IAAMxC,EAAuB7G,EAAgB,SAAS,EAChE,SAAA,SAAA,CAED,EACAR,EAAA,IAAC6J,EAAA,CACC,KAAK,QACL,QAAQ,WACR,MAAM,QACN,QAAS,IAAMxC,EAAuB7G,EAAgB,MAAM,EAC7D,SAAA,MAAA,CAAA,CAED,CACF,CAAA,CAAA,EACF,EACCV,EAAQ,KAAK,IAAIY,EAAwB,OAAY,GAAA,EAAE,SAAW,SAAS,EAAE,OAAQ,CAAC,EAAI,SAAMmL,EAAQ,CAAA,CAAA,CAAA,GAnCjGrL,EAAe,EAoCzB,CACD,EACFA,EAAe,OAAO0H,GAAKA,EAAE,SAAW,SAAS,EAAE,SAAW,GAC7DlI,EAAAA,IAACC,EAAI,CAAA,GAAI,CAAE,GAAI,EAAG,UAAW,QAAA,EAC3B,SAAAD,EAAAA,IAACwJ,EAAW,CAAA,QAAQ,QAAQ,MAAM,iBAAiB,SAAA,6BAEnD,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,EAEFxJ,EAAA,IAACoK,GAAK,KAAI,GAAC,GAAI,GACb,SAAApK,EAAAA,IAAC2L,EACC,CAAA,SAAAlC,EAAA,KAACmC,EACC,CAAA,SAAA,CAAA5L,EAAAA,IAACwJ,GAAW,QAAQ,KAAK,aAAY,GAAC,WAAW,OAAO,SAExD,wBAAA,CAAA,EACCxJ,EAAA,IAAAoK,EAAA,CAAK,UAAS,GAAC,QAAS,EACtB,SAAmBtB,GAAA,IAAKK,GACtBnJ,EAAA,IAAAoK,EAAA,CAAK,KAAI,GAAC,GAAI,GAAI,GAAI,EAAG,GAAI,EAC5B,SAACX,OAAAM,EAAA,CAAM,QAAQ,WAAW,GAAI,CAAE,EAAG,CACjC,EAAA,SAAA,CAAA/J,MAACwJ,GAAW,QAAQ,YAAY,aAAY,GACzC,WAAI,KACP,EACAxJ,EAAAA,IAACwJ,GAAW,QAAQ,QAAQ,MAAM,iBAAiB,aAAY,GAC5D,SAAAL,EAAI,QACP,CAAA,EACAM,EAAAA,KAACD,EAAW,CAAA,QAAQ,QAAQ,SAAA,CAAA,wBACJL,EAAI,kBAAA,EAC5B,EACAM,EAAAA,KAACD,EAAW,CAAA,QAAQ,QAAQ,SAAA,CAAA,yBACHL,EAAI,kBAAA,CAC7B,CAAA,CAAA,CAAA,CACF,CAdoC,EAAAA,EAAI,EAe1C,CACD,CACH,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CAAA,CACA,CACF,CAAA,EAGAnJ,EAAA,IAAC+L,GAAA,CACC,KAAM7J,GACN,QAAS,IAAMC,EAAiB,EAAK,EACrC,SAAS,KACT,UAAS,GAER,YAEGsH,EAAAA,KAAA0B,EAAA,SAAA,CAAA,SAAA,CAAAnL,EAAAA,IAACgM,IAAY,SAAmB,qBAAA,CAAA,QAC/BC,GACC,CAAA,SAAAxC,OAACW,GAAK,UAAS,GAAC,QAAS,EACvB,SAAA,CAAAX,OAACW,GAAK,KAAI,GAAC,GAAI,GAAI,GAAI,EACrB,SAAA,CAAApK,EAAAA,IAACwJ,GAAW,QAAQ,YAAY,aAAY,GAAC,WAAW,OAAO,SAE/D,uBAAA,CAAA,EACAxJ,EAAA,IAACC,EAAA,CACC,UAAU,MACV,IAAKqC,EAAoB,WAAW,WAAa,gCACjD,IAAKA,EAAoB,WAAW,KACpC,GAAI,CAAE,MAAO,OAAQ,OAAQ,IAAK,UAAW,QAAS,aAAc,EAAG,GAAI,CAAE,CAAA,CAC/E,EACAmH,EAAAA,KAACD,EAAW,CAAA,QAAQ,QAClB,SAAA,CAAAxJ,EAAAA,IAAC,UAAO,SAAK,OAAA,CAAA,EAAS,IAAEsC,EAAoB,WAAW,IAAA,EACzD,EACAmH,EAAAA,KAACD,EAAW,CAAA,QAAQ,QAClB,SAAA,CAAAxJ,EAAAA,IAAC,UAAO,SAAS,WAAA,CAAA,EAAS,IAAEsC,EAAoB,WAAW,QAAA,EAC7D,EACAmH,EAAAA,KAACD,EAAW,CAAA,QAAQ,QAClB,SAAA,CAAAxJ,EAAAA,IAAC,UAAO,SAAa,eAAA,CAAA,EAAS,IAAEsC,EAAoB,WAAW,YAAA,EACjE,EACAmH,EAAAA,KAACD,EAAW,CAAA,QAAQ,QAClB,SAAA,CAAAxJ,EAAAA,IAAC,UAAO,SAAM,QAAA,CAAA,EAAS,IAAEsC,EAAoB,WAAW,KAAA,EAC1D,EACAmH,EAAAA,KAACD,EAAW,CAAA,QAAQ,QAClB,SAAA,CAAAxJ,EAAAA,IAAC,UAAO,SAAO,SAAA,CAAA,EAAS,IAAEsC,EAAoB,WAAW,MAAA,EAC3D,EACAmH,EAAAA,KAACD,EAAW,CAAA,QAAQ,QAClB,SAAA,CAAAxJ,EAAAA,IAAC,UAAO,SAAI,MAAA,CAAA,EACXsC,EAAoB,WAAW,OAC5BkB,EAAK,KAAK2F,GAAOA,EAAI,KAAO7G,EAAoB,UAAU,MAAM,GAAG,MAAQ,cAC3E,kBACHA,EAAoB,WAAW,OAC5B,KAAKkB,EAAK,KAAK2F,GAAOA,EAAI,KAAO7G,EAAoB,UAAU,MAAM,GAAG,UAAY,kBAAkB,IACtG,EAAA,CACN,CAAA,CAAA,EACF,SAEC8H,EAAK,CAAA,KAAI,GAAC,GAAI,GAAI,GAAI,EACrB,SAAA,CAAApK,EAAAA,IAACwJ,GAAW,QAAQ,YAAY,aAAY,GAAC,WAAW,OAAO,SAE/D,kBAAA,CAAA,EACAC,EAAAA,KAACM,EAAM,CAAA,QAAQ,WAAW,GAAI,CAAE,EAAG,EAAG,GAAI,CAAA,EACxC,SAAA,CAACN,EAAAA,KAAAD,EAAA,CAAW,QAAQ,QAClB,SAAA,CAAAxJ,EAAAA,IAAC,UAAO,SAAM,QAAA,CAAA,EAAS,IAAEsC,EAAoB,OAAO,KAAA,EACtD,EACAmH,EAAAA,KAACD,EAAW,CAAA,QAAQ,QAClB,SAAA,CAAAxJ,EAAAA,IAAC,UAAO,SAAW,aAAA,CAAA,EAAS,IAAEsC,EAAoB,OAAO,UAAA,EAC3D,EACAmH,EAAAA,KAACD,EAAW,CAAA,QAAQ,QAClB,SAAA,CAAAxJ,EAAAA,IAAC,UAAO,SAAK,OAAA,CAAA,EAAS,IAAEsC,EAAoB,OAAO,IAAA,CACrD,CAAA,CAAA,EACF,EAEAtC,EAAAA,IAACwJ,GAAW,QAAQ,YAAY,aAAY,GAAC,WAAW,OAAO,SAE/D,yBAAA,CAAA,EACAC,OAACM,GAAM,QAAQ,WAAW,GAAI,CAAE,EAAG,CACjC,EAAA,SAAA,CAACN,EAAAA,KAAAxJ,EAAA,CAAI,GAAI,CAAE,GAAI,EAAG,QAAS,OAAQ,WAAY,QAAA,EAC7C,SAAA,CAACD,EAAA,IAAAwJ,EAAA,CAAW,QAAQ,QAAQ,GAAI,CAAE,GAAI,CACpC,EAAA,SAAAxJ,EAAA,IAAC,SAAO,CAAA,SAAA,SAAO,CAAA,EACjB,EACCsH,GAAchF,EAAoB,MAAM,CAAA,EAC3C,EACAmH,EAAAA,KAACD,EAAW,CAAA,QAAQ,QAClB,SAAA,CAAAxJ,EAAAA,IAAC,UAAO,SAAQ,UAAA,CAAA,EAAS,IAAE+K,EAAO9E,EAAS3D,EAAoB,UAAU,EAAG,MAAM,CAAA,EACpF,EACAmH,EAAAA,KAACD,EAAW,CAAA,QAAQ,QAClB,SAAA,CAAAxJ,EAAAA,IAAC,UAAO,SAAW,aAAA,CAAA,EAAS,IAAE+K,EAAO9E,EAAS3D,EAAoB,UAAU,EAAG,MAAM,CAAA,EACvF,EACAmH,EAAAA,KAACD,EAAW,CAAA,QAAQ,QAClB,SAAA,CAAAxJ,EAAAA,IAAC,UAAO,SAAS,WAAA,CAAA,EAAS,IAAE+K,EAAO9E,EAAS3D,EAAoB,QAAQ,EAAG,MAAM,CAAA,EACnF,EACAmH,EAAAA,KAACD,EAAW,CAAA,QAAQ,QAClB,SAAA,CAAAxJ,EAAAA,IAAC,UAAO,SAAS,WAAA,CAAA,GAEd,IAAM,CACL,MAAMkM,EAAQ,IAAI,KAAK5J,EAAoB,UAAU,EAErD,IAAI6J,EADQ,IAAI,KAAK7J,EAAoB,QAAQ,EAChC,QAAQ,EAAI4J,EAAM,QAAQ,EAC3C,MAAME,EAAQ,KAAK,MAAMD,GAAU,IAAO,GAAK,GAAG,EACxCA,GAAAC,GAAS,IAAO,GAAK,IAC/B,MAAMC,EAAU,KAAK,MAAMF,GAAU,IAAO,GAAG,EAExC,MAAA,GAAGC,CAAK,aAAaC,CAAO,YAClC,GAAA,CAAA,EAEP,EACA5C,EAAAA,KAACD,EAAW,CAAA,QAAQ,QAClB,SAAA,CAAAxJ,EAAAA,IAAC,UAAO,SAAS,WAAA,CAAA,EAAS,IAAEsC,EAAoB,QAAA,EAClD,QAICuJ,EAAQ,CAAA,GAAI,CAAE,GAAI,GAAK,QAEvBrC,EAAW,CAAA,QAAQ,YAAY,aAAY,GAAC,SAE7C,WAAA,EACCxJ,EAAA,IAAAwJ,EAAA,CAAW,QAAQ,QACjB,WAAoB,OACvB,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,SACC8C,GACC,CAAA,SAAA,CAAAtM,MAAC6J,GAAO,QAAS,IAAM1H,EAAiB,EAAK,EAAG,SAAK,QAAA,EAEpDG,EAAoB,SAAW,WAE5BmH,EAAA,KAAA0B,EAAA,SAAA,CAAA,SAAA,CAAAnL,EAAA,IAAC6J,EAAA,CACC,MAAM,UACN,QAAQ,YACR,QAAS,IAAM1C,EAAoB7E,EAAqB,SAAS,EACjE,SAAUoB,GACX,SAAA,SAAA,CAED,EACA1D,EAAA,IAAC6J,EAAA,CACC,MAAM,QACN,QAAQ,YACR,QAAS,IAAM1C,EAAoB7E,EAAqB,MAAM,EAC9D,SAAUoB,GACX,SAAA,MAAA,CAAA,CAED,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,EAGA1D,EAAA,IAAC+L,GAAA,CACC,KAAM3J,GACN,QAAS,IAAMD,EAAiB,EAAK,EACrC,SAAS,KACT,UAAS,GAER,YAEGsH,EAAAA,KAAA0B,EAAA,SAAA,CAAA,SAAA,CAAAnL,EAAAA,IAACgM,IAAY,SAAmB,qBAAA,CAAA,QAC/BC,GACC,CAAA,SAAAxC,OAACW,GAAK,UAAS,GAAC,QAAS,EACvB,SAAA,CAAAX,OAACW,GAAK,KAAI,GAAC,GAAI,GAAI,GAAI,EACrB,SAAA,CAAApK,EAAAA,IAACwJ,GAAW,QAAQ,YAAY,aAAY,GAAC,WAAW,OAAO,SAE/D,iBAAA,CAAA,EACAxJ,EAAA,IAACC,EAAA,CACC,UAAU,MACV,IAAKuC,EAAuB,KAAK,WAAa,gCAC9C,IAAKA,EAAuB,KAAK,KACjC,GAAI,CAAE,MAAO,OAAQ,OAAQ,IAAK,UAAW,QAAS,aAAc,EAAG,GAAI,CAAE,CAAA,CAC/E,EACAiH,EAAAA,KAACD,EAAW,CAAA,QAAQ,QAClB,SAAA,CAAAxJ,EAAAA,IAAC,UAAO,SAAK,OAAA,CAAA,EAAS,IAAEwC,EAAuB,KAAK,IAAA,EACtD,EACAiH,EAAAA,KAACD,EAAW,CAAA,QAAQ,QAClB,SAAA,CAAAxJ,EAAAA,IAAC,UAAO,SAAO,SAAA,CAAA,EAAS,IAAEwC,EAAuB,KAAK,MAAA,EACxD,EACAiH,EAAAA,KAACD,EAAW,CAAA,QAAQ,QAClB,SAAA,CAAAxJ,EAAAA,IAAC,UAAO,SAAS,WAAA,CAAA,EAAS,KAAGwC,EAAuB,KAAK,QAAA,CAC3D,CAAA,CAAA,EACF,SAEC4H,EAAK,CAAA,KAAI,GAAC,GAAI,GAAI,GAAI,EACrB,SAAA,CAAApK,EAAAA,IAACwJ,GAAW,QAAQ,YAAY,aAAY,GAAC,WAAW,OAAO,SAE/D,kBAAA,CAAA,EACAC,EAAAA,KAACM,EAAM,CAAA,QAAQ,WAAW,GAAI,CAAE,EAAG,EAAG,GAAI,CAAA,EACxC,SAAA,CAACN,EAAAA,KAAAD,EAAA,CAAW,QAAQ,QAClB,SAAA,CAAAxJ,EAAAA,IAAC,UAAO,SAAM,QAAA,CAAA,EAAS,IAAEwC,EAAuB,MAAM,KAAA,EACxD,EACAiH,EAAAA,KAACD,EAAW,CAAA,QAAQ,QAClB,SAAA,CAAAxJ,EAAAA,IAAC,UAAO,SAAW,aAAA,CAAA,EAAS,IAAEwC,EAAuB,MAAM,UAAA,EAC7D,EACAiH,EAAAA,KAACD,EAAW,CAAA,QAAQ,QAClB,SAAA,CAAAxJ,EAAAA,IAAC,UAAO,SAAK,OAAA,CAAA,EAAS,IAAEwC,EAAuB,MAAM,IAAA,CACvD,CAAA,CAAA,EACF,EAEAxC,EAAAA,IAACwJ,GAAW,QAAQ,YAAY,aAAY,GAAC,WAAW,OAAO,SAE/D,6BAAA,CAAA,EACAC,OAACM,GAAM,QAAQ,WAAW,GAAI,CAAE,EAAG,CACjC,EAAA,SAAA,CAACN,EAAAA,KAAAxJ,EAAA,CAAI,GAAI,CAAE,GAAI,EAAG,QAAS,OAAQ,WAAY,QAAA,EAC7C,SAAA,CAACD,EAAA,IAAAwJ,EAAA,CAAW,QAAQ,QAAQ,GAAI,CAAE,GAAI,CACpC,EAAA,SAAAxJ,EAAA,IAAC,SAAO,CAAA,SAAA,SAAO,CAAA,EACjB,EACCsH,GAAc9E,EAAuB,MAAM,CAAA,EAC9C,EACAiH,EAAAA,KAACD,EAAW,CAAA,QAAQ,QAClB,SAAA,CAAAxJ,EAAAA,IAAC,UAAO,SAAQ,UAAA,CAAA,EAAS,IAAE+K,EAAO9E,EAASzD,EAAuB,UAAU,EAAG,MAAM,CAAA,EACvF,EACAiH,EAAAA,KAACD,EAAW,CAAA,QAAQ,QAClB,SAAA,CAAAxJ,EAAAA,IAAC,UAAO,SAAW,aAAA,CAAA,EAAS,IAAE+K,EAAO9E,EAASzD,EAAuB,UAAU,EAAG,MAAM,CAAA,EAC1F,EACAiH,EAAAA,KAACD,EAAW,CAAA,QAAQ,QAClB,SAAA,CAAAxJ,EAAAA,IAAC,UAAO,SAAS,WAAA,CAAA,EAAS,IAAE+K,EAAO9E,EAASzD,EAAuB,QAAQ,EAAG,MAAM,CAAA,EACtF,EACAiH,EAAAA,KAACD,EAAW,CAAA,QAAQ,QAClB,SAAA,CAAAxJ,EAAAA,IAAC,UAAO,SAAS,WAAA,CAAA,GAEd,IAAM,CACL,MAAMkM,EAAQ,IAAI,KAAK1J,EAAuB,UAAU,EAExD,IAAI2J,EADQ,IAAI,KAAK3J,EAAuB,QAAQ,EACnC,QAAQ,EAAI0J,EAAM,QAAQ,EAC3C,MAAME,EAAQ,KAAK,MAAMD,GAAU,IAAO,GAAK,GAAG,EACxCA,GAAAC,GAAS,IAAO,GAAK,IAC/B,MAAMC,EAAU,KAAK,MAAMF,GAAU,IAAO,GAAG,EAExC,MAAA,GAAGC,CAAK,aAAaC,CAAO,YAClC,GAAA,CAAA,EAEP,EACA5C,EAAAA,KAACD,EAAW,CAAA,QAAQ,QAClB,SAAA,CAAAxJ,EAAAA,IAAC,UAAO,SAAU,YAAA,CAAA,EAAS,IAAEwC,EAAuB,SAAA,EACtD,QAECqJ,EAAQ,CAAA,GAAI,CAAE,GAAI,GAAK,QAEvBrC,EAAW,CAAA,QAAQ,YAAY,aAAY,GAAC,SAE7C,WAAA,EACCxJ,EAAA,IAAAwJ,EAAA,CAAW,QAAQ,QACjB,WAAuB,OAC1B,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,SACC8C,GACC,CAAA,SAAA,CAAAtM,MAAC6J,GAAO,QAAS,IAAMxH,EAAoB,EAAK,EAAG,SAAK,QAAA,EACvDG,EAAuB,SAAW,WAE/BiH,EAAA,KAAA0B,EAAA,SAAA,CAAA,SAAA,CAAAnL,EAAA,IAAC6J,EAAA,CACC,MAAM,UACN,QAAQ,YACR,QAAS,IAAMxC,EAAuB7E,EAAwB,SAAS,EACvE,SAAUoB,GACX,SAAA,SAAA,CAED,EACA5D,EAAA,IAAC6J,EAAA,CACC,MAAM,QACN,QAAQ,YACR,QAAS,IAAMxC,EAAuB7E,EAAwB,MAAM,EACpE,SAAUoB,GACX,SAAA,MAAA,CAAA,CAED,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,EAGA6F,EAAA,KAACsC,GAAA,CACC,KAAMrJ,GACN,QAAS,IAAM,CACbC,GAAiB,EAAK,EACtBI,GAAc,IAAI,CACpB,EAEA,SAAA,CAAA/C,EAAA,IAACgM,GACE,CAAA,SAAAlJ,IAAe,UAAY,sBAAwB,mBACtD,EACA9C,EAAAA,IAACiM,IACC,SAACjM,EAAAA,IAAAuM,GAAA,CACE,aAAe,UACZ,iHACA,2GACN,CACF,CAAA,SACCD,GACC,CAAA,SAAA,CAAAtM,EAAA,IAAC6J,EAAA,CACC,QAAS,IAAM,CACblH,GAAiB,EAAK,EACtBI,GAAc,IAAI,CACpB,EACD,SAAA,QAAA,CAED,EACA/C,EAAA,IAAC6J,EAAA,CACC,MAAO/G,IAAe,UAAY,UAAY,QAC9C,QAAQ,YACR,QAAS,IAAM,CACTR,GAAuBQ,GACzB4D,GAAmBpE,EAAoB,GAAIQ,IAAe,UAAY,WAAa,QAAQ,CAE/F,EACA,SAAUY,GAET,SAAAA,SAAiB0E,GAAiB,CAAA,KAAM,GAAI,EAAKtF,IAAe,UAAY,UAAY,MAAA,CAAA,CAC3F,CACF,CAAA,CAAA,CAAA,CACF,EAGA2G,EAAA,KAACsC,GAAA,CACC,KAAMnJ,GACN,QAAS,IAAM,CACbC,GAAoB,EAAK,EACzBI,GAAiB,IAAI,CACvB,EAEA,SAAA,CAAAjD,EAAA,IAACgM,GACE,CAAA,SAAAhJ,IAAkB,UAAY,0BAA4B,sBAC7D,EACAhD,EAAAA,IAACiM,IACC,SAACjM,EAAAA,IAAAuM,GAAA,CACE,aAAkB,UACf,+GACA,+GACN,CACF,CAAA,SACCD,GACC,CAAA,SAAA,CAAAtM,EAAA,IAAC6J,EAAA,CACC,QAAS,IAAM,CACbhH,GAAoB,EAAK,EACzBI,GAAiB,IAAI,CACvB,EACD,SAAA,QAAA,CAED,EACAjD,EAAA,IAAC6J,EAAA,CACC,MAAO7G,IAAkB,UAAY,UAAY,QACjD,QAAQ,YACR,QAAS,IAAM,CACTR,GAA0BQ,GAC5B8D,GAAsBtE,EAAuB,GAAIQ,IAAkB,UAAY,WAAa,QAAQ,CAExG,EACA,SAAUY,GAET,SAAAA,SAAoBwE,GAAiB,CAAA,KAAM,GAAI,EAAKpF,IAAkB,UAAY,UAAY,MAAA,CAAA,CACjG,CACF,CAAA,CAAA,CAAA,CAAA,CACF,EAEF,CAEJ","x_google_ignoreList":[0]}